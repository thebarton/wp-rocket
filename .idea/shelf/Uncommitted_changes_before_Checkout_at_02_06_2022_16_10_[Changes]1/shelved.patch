Index: inc/classes/dependencies/wp-media/background-processing/wp-background-process.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n/**\n * WP Background Process\n *\n * @package WP-Background-Processing\n */\n\n/**\n * Abstract WP_Rocket_WP_Background_Process class.\n *\n * @abstract\n * @extends WP_Rocket_WP_Async_Request\n */\nabstract class WP_Rocket_WP_Background_Process extends WP_Rocket_WP_Async_Request {\n\n\t/**\n\t * Action\n\t *\n\t * (default value: 'background_process')\n\t *\n\t * @var string\n\t * @access protected\n\t */\n\tprotected $action = 'background_process';\n\n\t/**\n\t * Start time of current process.\n\t *\n\t * (default value: 0)\n\t *\n\t * @var int\n\t * @access protected\n\t */\n\tprotected $start_time = 0;\n\n\t/**\n\t * Cron_hook_identifier\n\t *\n\t * @var mixed\n\t * @access protected\n\t */\n\tprotected $cron_hook_identifier;\n\n\t/**\n\t * Cron_interval_identifier\n\t *\n\t * @var mixed\n\t * @access protected\n\t */\n\tprotected $cron_interval_identifier;\n\n\t/**\n\t * Initiate new background process\n\t */\n\tpublic function __construct() {\n\t\tparent::__construct();\n\n\t\t$this->cron_hook_identifier     = $this->identifier . '_cron';\n\t\t$this->cron_interval_identifier = $this->identifier . '_cron_interval';\n\n\t\tadd_action( $this->cron_hook_identifier, array( $this, 'handle_cron_healthcheck' ) );\n\t\tadd_filter( 'cron_schedules', array( $this, 'schedule_cron_healthcheck' ) );\n\t}\n\n\t/**\n\t * Dispatch\n\t *\n\t * @access public\n\t * @return void\n\t */\n\tpublic function dispatch() {\n\t\t// Schedule the cron healthcheck.\n\t\t$this->schedule_event();\n\n\t\t// Perform remote post.\n\t\treturn parent::dispatch();\n\t}\n\n\t/**\n\t * Push to queue\n\t *\n\t * @param mixed $data Data.\n\t *\n\t * @return $this\n\t */\n\tpublic function push_to_queue( $data ) {\n\t\t$this->data[] = $data;\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Save queue\n\t *\n\t * @return $this\n\t */\n\tpublic function save() {\n\t\t$key = $this->generate_key();\n\n\t\tif ( ! empty( $this->data ) ) {\n\t\t\tupdate_site_option( $key, $this->data );\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Update queue\n\t *\n\t * @param string $key  Key.\n\t * @param array  $data Data.\n\t *\n\t * @return $this\n\t */\n\tpublic function update( $key, $data ) {\n\t\tif ( ! empty( $data ) ) {\n\t\t\tupdate_site_option( $key, $data );\n\t\t}\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Delete queue\n\t *\n\t * @param string $key Key.\n\t *\n\t * @return $this\n\t */\n\tpublic function delete( $key ) {\n\t\tdelete_site_option( $key );\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Generate key\n\t *\n\t * Generates a unique key based on microtime. Queue items are\n\t * given a unique key so that they can be merged upon save.\n\t *\n\t * @param int $length Length.\n\t *\n\t * @return string\n\t */\n\tprotected function generate_key( $length = 64 ) {\n\t\t$unique  = md5( microtime() . rand() );\n\t\t$prepend = $this->identifier . '_batch_';\n\n\t\treturn substr( $prepend . $unique, 0, $length );\n\t}\n\n\t/**\n\t * Maybe process queue\n\t *\n\t * Checks whether data exists within the queue and that\n\t * the process is not already running.\n\t */\n\tpublic function maybe_handle() {\n\t\t// Don't lock up other requests while processing\n\t\tsession_write_close();\n\n\t\tif ( $this->is_process_running() ) {\n\t\t\t// Background process already running.\n\t\t\twp_die();\n\t\t}\n\n\t\tif ( $this->is_queue_empty() ) {\n\t\t\t// No data to process.\n\t\t\twp_die();\n\t\t}\n\n\t\tcheck_ajax_referer( $this->identifier, 'nonce' );\n\n\t\t$this->handle();\n\n\t\twp_die();\n\t}\n\n\t/**\n\t * Is queue empty\n\t *\n\t * @return bool\n\t */\n\tprotected function is_queue_empty() {\n\t\tglobal $wpdb;\n\n\t\t$table  = $wpdb->options;\n\t\t$column = 'option_name';\n\n\t\tif ( is_multisite() ) {\n\t\t\t$table  = $wpdb->sitemeta;\n\t\t\t$column = 'meta_key';\n\t\t}\n\n\t\t$key = $wpdb->esc_like( $this->identifier . '_batch_' ) . '%';\n\n\t\t$count = $wpdb->get_var( $wpdb->prepare( \"\n\t\t\tSELECT COUNT(*)\n\t\t\tFROM {$table}\n\t\t\tWHERE {$column} LIKE %s\n\t\t\", $key ) );\n\n\t\treturn ( $count > 0 ) ? false : true;\n\t}\n\n\t/**\n\t * Is process running\n\t *\n\t * Check whether the current process is already running\n\t * in a background process.\n\t */\n\tprotected function is_process_running() {\n\t\tif ( get_site_transient( $this->identifier . '_process_lock' ) ) {\n\t\t\t// Process already running.\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t * Is process cancelled\n\t *\n\t * Check whether the current process is cancelled\n\t * in a background process.\n\t */\n\tprotected function is_process_cancelled() {\n\t\tif ( ! \\rocket_direct_filesystem()->exists( WP_ROCKET_CACHE_ROOT_PATH . '.' . $this->identifier . '_process_cancelled' ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\t/**\n\t * Lock process\n\t *\n\t * Lock the process so that multiple instances can't run simultaneously.\n\t * Override if applicable, but the duration should be greater than that\n\t * defined in the time_exceeded() method.\n\t */\n\tprotected function lock_process() {\n\t\t$this->start_time = time(); // Set start time of current process.\n\n\t\t$lock_duration = ( property_exists( $this, 'queue_lock_time' ) ) ? $this->queue_lock_time : 60; // 1 minute\n\t\t$lock_duration = apply_filters( $this->identifier . '_queue_lock_time', $lock_duration );\n\n\t\tset_site_transient( $this->identifier . '_process_lock', microtime(), $lock_duration );\n\t}\n\n\t/**\n\t * Unlock process\n\t *\n\t * Unlock the process so that other instances can spawn.\n\t *\n\t * @return $this\n\t */\n\tprotected function unlock_process() {\n\t\tdelete_site_transient( $this->identifier . '_process_lock' );\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Get batch\n\t *\n\t * @return stdClass Return the first batch from the queue\n\t */\n\tprotected function get_batch() {\n\t\tglobal $wpdb;\n\n\t\t$table        = $wpdb->options;\n\t\t$column       = 'option_name';\n\t\t$key_column   = 'option_id';\n\t\t$value_column = 'option_value';\n\n\t\tif ( is_multisite() ) {\n\t\t\t$table        = $wpdb->sitemeta;\n\t\t\t$column       = 'meta_key';\n\t\t\t$key_column   = 'meta_id';\n\t\t\t$value_column = 'meta_value';\n\t\t}\n\n\t\t$key = $wpdb->esc_like( $this->identifier . '_batch_' ) . '%';\n\n\t\t$query = $wpdb->get_row( $wpdb->prepare( \"\n\t\t\tSELECT *\n\t\t\tFROM {$table}\n\t\t\tWHERE {$column} LIKE %s\n\t\t\tORDER BY {$key_column} ASC\n\t\t\tLIMIT 1\n\t\t\", $key ) );\n\n\t\t$batch       = new stdClass();\n\t\t$batch->key  = $query->$column;\n\t\t$batch->data = maybe_unserialize( $query->$value_column );\n\n\t\treturn $batch;\n\t}\n\n\t/**\n\t * Handle\n\t *\n\t * Pass each queue item to the task handler, while remaining\n\t * within server memory and time limit constraints.\n\t */\n\tprotected function handle() {\n\t\t$this->lock_process();\n\n\t\tdo {\n\t\t\t$batch = $this->get_batch();\n\n\t\t\tforeach ( $batch->data as $key => $value ) {\n\t\t\t\t$task = $this->task( $value );\n\n\t\t\t\tif ( false !== $task ) {\n\t\t\t\t\t$batch->data[ $key ] = $task;\n\t\t\t\t} else {\n\t\t\t\t\tunset( $batch->data[ $key ] );\n\t\t\t\t}\n\n\t\t\t\tif ( $this->time_exceeded() || $this->memory_exceeded() || $this->is_process_cancelled() ) {\n\t\t\t\t\t// Batch limits reached.\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Update or delete current batch.\n\t\t\tif ( ! empty( $batch->data ) && ! $this->is_process_cancelled() ) {\n\t\t\t\t$this->update( $batch->key, $batch->data );\n\t\t\t} else {\n\t\t\t\t$this->complete_batch();\n\t\t\t\t$this->delete( $batch->key );\n\t\t\t}\n\t\t} while ( ! $this->time_exceeded() && ! $this->memory_exceeded() && ! $this->is_queue_empty() && ! $this->is_process_cancelled() );\n\n\t\t$this->unlock_process();\n\n\t\t// Start next batch or complete process.\n\t\tif ( ! $this->is_queue_empty() ) {\n\t\t\t$this->dispatch();\n\t\t} else {\n\t\t\t$this->complete();\n\t\t}\n\n\t\twp_die();\n\t}\n\n\t/**\n\t * Memory exceeded\n\t *\n\t * Ensures the batch process never exceeds 90%\n\t * of the maximum WordPress memory.\n\t *\n\t * @return bool\n\t */\n\tprotected function memory_exceeded() {\n\t\t$memory_limit   = $this->get_memory_limit() * 0.9; // 90% of max memory\n\t\t$current_memory = memory_get_usage( true );\n\t\t$return         = false;\n\n\t\tif ( $current_memory >= $memory_limit ) {\n\t\t\t$return = true;\n\t\t}\n\n\t\treturn apply_filters( $this->identifier . '_memory_exceeded', $return );\n\t}\n\n\t/**\n\t * Get memory limit\n\t *\n\t * @return int\n\t */\n\tprotected function get_memory_limit() {\n\t\tif ( function_exists( 'ini_get' ) ) {\n\t\t\t$memory_limit = ini_get( 'memory_limit' );\n\t\t} else {\n\t\t\t// Sensible default.\n\t\t\t$memory_limit = '128M';\n\t\t}\n\n\t\tif ( ! $memory_limit || -1 === intval( $memory_limit ) ) {\n\t\t\t// Unlimited, set to 32GB.\n\t\t\t$memory_limit = '32000M';\n\t\t}\n\n\t\treturn wp_convert_hr_to_bytes( $memory_limit );\n\t}\n\n\t/**\n\t * Time exceeded.\n\t *\n\t * Ensures the batch never exceeds a sensible time limit.\n\t * A timeout limit of 30s is common on shared hosting.\n\t *\n\t * @return bool\n\t */\n\tprotected function time_exceeded() {\n\t\t$finish = $this->start_time + apply_filters( $this->identifier . '_default_time_limit', 20 ); // 20 seconds\n\t\t$return = false;\n\n\t\tif ( time() >= $finish ) {\n\t\t\t$return = true;\n\t\t}\n\n\t\treturn apply_filters( $this->identifier . '_time_exceeded', $return );\n\t}\n\n\t/**\n\t * Current batch is completed.\n\t */\n\tprotected function complete_batch(){\n\t\t// Override this code on the instantiated process class WP_Rocket_just if needed.\n\t}\n\n\t/**\n\t * Complete.\n\t *\n\t * Override if applicable, but ensure that the below actions are\n\t * performed, or, call parent::complete().\n\t */\n\tprotected function complete() {\n\t\t// Unschedule the cron healthcheck.\n\t\t$this->clear_scheduled_event();\n\n\t\t\\rocket_direct_filesystem()->delete( WP_ROCKET_CACHE_ROOT_PATH . '.' . $this->identifier . '_process_cancelled' );\n\t}\n\n\t/**\n\t * Schedule cron healthcheck\n\t *\n\t * @param mixed $schedules Schedules.\n\t *\n\t * @return mixed\n\t */\n\tpublic function schedule_cron_healthcheck( $schedules ) {\n\t\t$interval = apply_filters( $this->identifier . '_cron_interval', 5 );\n\n\t\tif ( property_exists( $this, 'cron_interval' ) ) {\n\t\t\t$interval = apply_filters( $this->identifier . '_cron_interval', $this->cron_interval );\n\t\t}\n\n\t\t// Adds every 5 minutes to the existing schedules.\n\t\t$schedules[ $this->identifier . '_cron_interval' ] = array(\n\t\t\t'interval' => MINUTE_IN_SECONDS * $interval,\n\t\t\t'display'  => sprintf( __( 'Every %d Minutes' ), $interval ),\n\t\t);\n\n\t\treturn $schedules;\n\t}\n\n\t/**\n\t * Handle cron healthcheck\n\t *\n\t * Restart the background process if not already running\n\t * and data exists in the queue.\n\t */\n\tpublic function handle_cron_healthcheck() {\n\t\tif ( $this->is_process_running() ) {\n\t\t\t// Background process already running.\n\t\t\texit;\n\t\t}\n\n\t\tif ( $this->is_queue_empty() ) {\n\t\t\t// No data to process.\n\t\t\t$this->clear_scheduled_event();\n\t\t\texit;\n\t\t}\n\n\t\t$this->handle();\n\n\t\texit;\n\t}\n\n\t/**\n\t * Schedule event\n\t */\n\tprotected function schedule_event() {\n\t\tif ( ! wp_next_scheduled( $this->cron_hook_identifier ) ) {\n\t\t\twp_schedule_event( time(), $this->cron_interval_identifier, $this->cron_hook_identifier );\n\t\t}\n\t}\n\n\t/**\n\t * Clear scheduled event\n\t */\n\tprotected function clear_scheduled_event() {\n\t\t$timestamp = wp_next_scheduled( $this->cron_hook_identifier );\n\n\t\tif ( $timestamp ) {\n\t\t\twp_unschedule_event( $timestamp, $this->cron_hook_identifier );\n\t\t}\n\t}\n\n\t/**\n\t * Cancel Process\n\t *\n\t * Stop processing queue items, clear cronjob and delete batch.\n\t *\n\t */\n\tpublic function cancel_process() {\n\t\tif ( ! $this->is_queue_empty() ) {\n\t\t\t$batch = $this->get_batch();\n\t\t\t$this->delete( $batch->key );\n\t\t\t$this->unlock_process();\n\t\t\twp_clear_scheduled_hook( $this->cron_hook_identifier );\n\n\t\t\t\\rocket_direct_filesystem()->touch( WP_ROCKET_CACHE_ROOT_PATH . '.' . $this->identifier . '_process_cancelled' );\n\t\t}\n\n\t}\n\n\t/**\n\t * Task\n\t *\n\t * Override this method to perform any actions required on each\n\t * queue item. Return the modified item for further processing\n\t * in the next pass through. Or, return false to remove the\n\t * item from the queue.\n\t *\n\t * @param mixed $item Queue item to iterate over.\n\t *\n\t * @return mixed\n\t */\n\tabstract protected function task( $item );\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inc/classes/dependencies/wp-media/background-processing/wp-background-process.php b/inc/classes/dependencies/wp-media/background-processing/wp-background-process.php
--- a/inc/classes/dependencies/wp-media/background-processing/wp-background-process.php	
+++ b/inc/classes/dependencies/wp-media/background-processing/wp-background-process.php	
@@ -515,7 +515,7 @@
 	 * Task
 	 *
 	 * Override this method to perform any actions required on each
-	 * queue item. Return the modified item for further processing
+	 * queue item. Return the modified item WP_Rocket_for further processing
 	 * in the next pass through. Or, return false to remove the
 	 * item from the queue.
 	 *
Index: inc/Dependencies/ActionScheduler/lib/WP_Async_Request.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n/**\n * WP Async Request\n *\n * @package WP-Background-Processing\n */\n/*\nLibrary URI: https://github.com/deliciousbrains/wp-background-processing/blob/fbbc56f2480910d7959972ec9ec0819a13c6150a/classes/wp-async-request.php\nAuthor: Delicious Brains Inc.\nAuthor URI: https://deliciousbrains.com/\nLicense: GNU General Public License v2.0\nLicense URI: https://github.com/deliciousbrains/wp-background-processing/commit/126d7945dd3d39f39cb6488ca08fe1fb66cb351a\n*/\n\nif ( ! class_exists( 'WP_Async_Request' ) ) {\n\n\t/**\n\t * Abstract WP_Async_Request class.\n\t *\n\t * @abstract\n\t */\n\tabstract class WP_Async_Request {\n\n\t\t/**\n\t\t * Prefix\n\t\t *\n\t\t * (default value: 'wp')\n\t\t *\n\t\t * @var string\n\t\t * @access protected\n\t\t */\n\t\tprotected $prefix = 'wp';\n\n\t\t/**\n\t\t * Action\n\t\t *\n\t\t * (default value: 'async_request')\n\t\t *\n\t\t * @var string\n\t\t * @access protected\n\t\t */\n\t\tprotected $action = 'async_request';\n\n\t\t/**\n\t\t * Identifier\n\t\t *\n\t\t * @var mixed\n\t\t * @access protected\n\t\t */\n\t\tprotected $identifier;\n\n\t\t/**\n\t\t * Data\n\t\t *\n\t\t * (default value: array())\n\t\t *\n\t\t * @var array\n\t\t * @access protected\n\t\t */\n\t\tprotected $data = array();\n\n\t\t/**\n\t\t * Initiate new async request\n\t\t */\n\t\tpublic function __construct() {\n\t\t\t$this->identifier = $this->prefix . '_' . $this->action;\n\n\t\t\tadd_action( 'wp_ajax_' . $this->identifier, array( $this, 'maybe_handle' ) );\n\t\t\tadd_action( 'wp_ajax_nopriv_' . $this->identifier, array( $this, 'maybe_handle' ) );\n\t\t}\n\n\t\t/**\n\t\t * Set data used during the request\n\t\t *\n\t\t * @param array $data Data.\n\t\t *\n\t\t * @return $this\n\t\t */\n\t\tpublic function data( $data ) {\n\t\t\t$this->data = $data;\n\n\t\t\treturn $this;\n\t\t}\n\n\t\t/**\n\t\t * Dispatch the async request\n\t\t *\n\t\t * @return array|WP_Error\n\t\t */\n\t\tpublic function dispatch() {\n\t\t\t$url  = add_query_arg( $this->get_query_args(), $this->get_query_url() );\n\t\t\t$args = $this->get_post_args();\n\n\t\t\treturn wp_remote_post( esc_url_raw( $url ), $args );\n\t\t}\n\n\t\t/**\n\t\t * Get query args\n\t\t *\n\t\t * @return array\n\t\t */\n\t\tprotected function get_query_args() {\n\t\t\tif ( property_exists( $this, 'query_args' ) ) {\n\t\t\t\treturn $this->query_args;\n\t\t\t}\n\n\t\t\treturn array(\n\t\t\t\t'action' => $this->identifier,\n\t\t\t\t'nonce'  => wp_create_nonce( $this->identifier ),\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Get query URL\n\t\t *\n\t\t * @return string\n\t\t */\n\t\tprotected function get_query_url() {\n\t\t\tif ( property_exists( $this, 'query_url' ) ) {\n\t\t\t\treturn $this->query_url;\n\t\t\t}\n\n\t\t\treturn admin_url( 'admin-ajax.php' );\n\t\t}\n\n\t\t/**\n\t\t * Get post args\n\t\t *\n\t\t * @return array\n\t\t */\n\t\tprotected function get_post_args() {\n\t\t\tif ( property_exists( $this, 'post_args' ) ) {\n\t\t\t\treturn $this->post_args;\n\t\t\t}\n\n\t\t\treturn array(\n\t\t\t\t'timeout'   => 0.01,\n\t\t\t\t'blocking'  => false,\n\t\t\t\t'body'      => $this->data,\n\t\t\t\t'cookies'   => $_COOKIE,\n\t\t\t\t'sslverify' => apply_filters( 'https_local_ssl_verify', false ),\n\t\t\t);\n\t\t}\n\n\t\t/**\n\t\t * Maybe handle\n\t\t *\n\t\t * Check for correct nonce and pass to handler.\n\t\t */\n\t\tpublic function maybe_handle() {\n\t\t\t// Don't lock up other requests while processing\n\t\t\tsession_write_close();\n\n\t\t\tcheck_ajax_referer( $this->identifier, 'nonce' );\n\n\t\t\t$this->handle();\n\n\t\t\twp_die();\n\t\t}\n\n\t\t/**\n\t\t * Handle\n\t\t *\n\t\t * Override this method to perform any actions required\n\t\t * during the async request.\n\t\t */\n\t\tabstract protected function handle();\n\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inc/Dependencies/ActionScheduler/lib/WP_Async_Request.php b/inc/Dependencies/ActionScheduler/lib/WP_Async_Request.php
--- a/inc/Dependencies/ActionScheduler/lib/WP_Async_Request.php	
+++ b/inc/Dependencies/ActionScheduler/lib/WP_Async_Request.php	
@@ -104,10 +104,17 @@
 				return $this->query_args;
 			}
 
-			return array(
+			$args = array(
 				'action' => $this->identifier,
 				'nonce'  => wp_create_nonce( $this->identifier ),
 			);
+
+			/**
+			 * Filters the post arguments used during an async request.
+			 *
+			 * @param array $url
+			 */
+			return apply_filters( $this->identifier . '_query_args', $args );
 		}
 
 		/**
@@ -120,7 +127,14 @@
 				return $this->query_url;
 			}
 
-			return admin_url( 'admin-ajax.php' );
+			$url = admin_url( 'admin-ajax.php' );
+
+			/**
+			 * Filters the post arguments used during an async request.
+			 *
+			 * @param string $url
+			 */
+			return apply_filters( $this->identifier . '_query_url', $url );
 		}
 
 		/**
@@ -133,13 +147,20 @@
 				return $this->post_args;
 			}
 
-			return array(
+			$args = array(
 				'timeout'   => 0.01,
 				'blocking'  => false,
 				'body'      => $this->data,
 				'cookies'   => $_COOKIE,
 				'sslverify' => apply_filters( 'https_local_ssl_verify', false ),
 			);
+
+			/**
+			 * Filters the post arguments used during an async request.
+			 *
+			 * @param array $args
+			 */
+			return apply_filters( $this->identifier . '_post_args', $args );
 		}
 
 		/**
Index: inc/classes/dependencies/wp-media/background-processing/wp-async-request.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n/**\n * WP Async Request\n *\n * @package WP-Background-Processing\n */\n\n/**\n * Abstract WP_Rocket_WP_Async_Request class.\n *\n * @abstract\n */\nabstract class WP_Rocket_WP_Async_Request {\n\n\t/**\n\t * Prefix\n\t *\n\t * (default value: 'wp')\n\t *\n\t * @var string\n\t * @access protected\n\t */\n\tprotected $prefix = 'wp';\n\n\t/**\n\t * Action\n\t *\n\t * (default value: 'async_request')\n\t *\n\t * @var string\n\t * @access protected\n\t */\n\tprotected $action = 'async_request';\n\n\t/**\n\t * Identifier\n\t *\n\t * @var mixed\n\t * @access protected\n\t */\n\tprotected $identifier;\n\n\t/**\n\t * Data\n\t *\n\t * (default value: array())\n\t *\n\t * @var array\n\t * @access protected\n\t */\n\tprotected $data = array();\n\n\t/**\n\t * Initiate new async request\n\t */\n\tpublic function __construct() {\n\t\t$this->identifier = $this->prefix . '_' . $this->action;\n\n\t\tadd_action( 'wp_ajax_' . $this->identifier, array( $this, 'maybe_handle' ) );\n\t\tadd_action( 'wp_ajax_nopriv_' . $this->identifier, array( $this, 'maybe_handle' ) );\n\t}\n\n\t/**\n\t * Set data used during the request\n\t *\n\t * @param array $data Data.\n\t *\n\t * @return $this\n\t */\n\tpublic function data( $data ) {\n\t\t$this->data = $data;\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Dispatch the async request\n\t *\n\t * @return array|WP_Error\n\t */\n\tpublic function dispatch() {\n\t\t$url  = add_query_arg( $this->get_query_args(), $this->get_query_url() );\n\t\t$args = $this->get_post_args();\n\n\t\treturn wp_remote_post( esc_url_raw( $url ), $args );\n\t}\n\n\t/**\n\t * Get query args\n\t *\n\t * @return array\n\t */\n\tprotected function get_query_args() {\n\t\tif ( property_exists( $this, 'query_args' ) ) {\n\t\t\treturn $this->query_args;\n\t\t}\n\n\t\t$args = array(\n\t\t\t'action' => $this->identifier,\n\t\t\t'nonce'  => wp_create_nonce( $this->identifier ),\n\t\t);\n\n\t\t/**\n\t\t * Filters the post arguments used during an async request.\n\t\t *\n\t\t * @param array $url\n\t\t */\n\t\treturn apply_filters( $this->identifier . '_query_args', $args );\n\t}\n\n\t/**\n\t * Get query URL\n\t *\n\t * @return string\n\t */\n\tprotected function get_query_url() {\n\t\tif ( property_exists( $this, 'query_url' ) ) {\n\t\t\treturn $this->query_url;\n\t\t}\n\n\t\t$url = admin_url( 'admin-ajax.php' );\n\n\t\t/**\n\t\t * Filters the post arguments used during an async request.\n\t\t *\n\t\t * @param string $url\n\t\t */\n\t\treturn apply_filters( $this->identifier . '_query_url', $url );\n\t}\n\n\t/**\n\t * Get post args\n\t *\n\t * @return array\n\t */\n\tprotected function get_post_args() {\n\t\tif ( property_exists( $this, 'post_args' ) ) {\n\t\t\treturn $this->post_args;\n\t\t}\n\n\t\t$args = array(\n\t\t\t'timeout'   => 0.01,\n\t\t\t'blocking'  => false,\n\t\t\t'body'      => $this->data,\n\t\t\t'cookies'   => $_COOKIE,\n\t\t\t'sslverify' => apply_filters( 'https_local_ssl_verify', false ),\n\t\t);\n\n\t\t/**\n\t\t * Filters the post arguments used during an async request.\n\t\t *\n\t\t * @param array $args\n\t\t */\n\t\treturn apply_filters( $this->identifier . '_post_args', $args );\n\t}\n\n\t/**\n\t * Maybe handle\n\t *\n\t * Check for correct nonce and pass to handler.\n\t */\n\tpublic function maybe_handle() {\n\t\t// Don't lock up other requests while processing\n\t\tsession_write_close();\n\n\t\tcheck_ajax_referer( $this->identifier, 'nonce' );\n\n\t\t$this->handle();\n\n\t\twp_die();\n\t}\n\n\t/**\n\t * Handle\n\t *\n\t * Override this method to perform any actions required\n\t * during the async request.\n\t */\n\tabstract protected function handle();\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inc/classes/dependencies/wp-media/background-processing/wp-async-request.php b/inc/classes/dependencies/wp-media/background-processing/wp-async-request.php
--- a/inc/classes/dependencies/wp-media/background-processing/wp-async-request.php	
+++ b/inc/classes/dependencies/wp-media/background-processing/wp-async-request.php	
@@ -157,7 +157,7 @@
 	/**
 	 * Maybe handle
 	 *
-	 * Check for correct nonce and pass to handler.
+	 * Check WP_Rocket_for correct nonce and pass to handler.
 	 */
 	public function maybe_handle() {
 		// Don't lock up other requests while processing
Index: inc/Dependencies/ActionScheduler/classes/WP_CLI/ActionScheduler_WPCLI_Scheduler_command.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\n/**\n * Commands for Action Scheduler.\n */\nclass ActionScheduler_WPCLI_Scheduler_command extends WP_CLI_Command {\n\n\t/**\n\t * Run the Action Scheduler\n\t *\n\t * ## OPTIONS\n\t *\n\t * [--batch-size=<size>]\n\t * : The maximum number of actions to run. Defaults to 100.\n\t *\n\t * [--batches=<size>]\n\t * : Limit execution to a number of batches. Defaults to 0, meaning batches will continue being executed until all actions are complete.\n\t *\n\t * [--cleanup-batch-size=<size>]\n\t * : The maximum number of actions to clean up. Defaults to the value of --batch-size.\n\t *\n\t * [--hooks=<hooks>]\n\t * : Only run actions with the specified hook. Omitting this option runs actions with any hook. Define multiple hooks as a comma separated string (without spaces), e.g. `--hooks=hook_one,hook_two,hook_three`\n\t *\n\t * [--group=<group>]\n\t * : Only run actions from the specified group. Omitting this option runs actions from all groups.\n\t *\n\t * [--free-memory-on=<count>]\n\t * : The number of actions to process between freeing memory. 0 disables freeing memory. Default 50.\n\t *\n\t * [--pause=<seconds>]\n\t * : The number of seconds to pause when freeing memory. Default no pause.\n\t *\n\t * [--force]\n\t * : Whether to force execution despite the maximum number of concurrent processes being exceeded.\n\t *\n\t * @param array $args Positional arguments.\n\t * @param array $assoc_args Keyed arguments.\n\t * @throws \\WP_CLI\\ExitException When an error occurs.\n\t *\n\t * @subcommand run\n\t */\n\tpublic function run( $args, $assoc_args ) {\n\t\t// Handle passed arguments.\n\t\t$batch   = absint( \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'batch-size', 100 ) );\n\t\t$batches = absint( \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'batches', 0 ) );\n\t\t$clean   = absint( \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'cleanup-batch-size', $batch ) );\n\t\t$hooks   = explode( ',', WP_CLI\\Utils\\get_flag_value( $assoc_args, 'hooks', '' ) );\n\t\t$hooks   = array_filter( array_map( 'trim', $hooks ) );\n\t\t$group   = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'group', '' );\n\t\t$free_on = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'free-memory-on', 50 );\n\t\t$sleep   = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'pause', 0 );\n\t\t$force   = \\WP_CLI\\Utils\\get_flag_value( $assoc_args, 'force', false );\n\n\t\tActionScheduler_DataController::set_free_ticks( $free_on );\n\t\tActionScheduler_DataController::set_sleep_time( $sleep );\n\n\t\t$batches_completed = 0;\n\t\t$actions_completed = 0;\n\t\t$unlimited         = $batches === 0;\n\n\t\ttry {\n\t\t\t// Custom queue cleaner instance.\n\t\t\t$cleaner = new ActionScheduler_QueueCleaner( null, $clean );\n\n\t\t\t// Get the queue runner instance\n\t\t\t$runner = new ActionScheduler_WPCLI_QueueRunner( null, null, $cleaner );\n\n\t\t\t// Determine how many tasks will be run in the first batch.\n\t\t\t$total = $runner->setup( $batch, $hooks, $group, $force );\n\n\t\t\t// Run actions for as long as possible.\n\t\t\twhile ( $total > 0 ) {\n\t\t\t\t$this->print_total_actions( $total );\n\t\t\t\t$actions_completed += $runner->run();\n\t\t\t\t$batches_completed++;\n\n\t\t\t\t// Maybe set up tasks for the next batch.\n\t\t\t\t$total = ( $unlimited || $batches_completed < $batches ) ? $runner->setup( $batch, $hooks, $group, $force ) : 0;\n\t\t\t}\n\t\t} catch ( Exception $e ) {\n\t\t\t$this->print_error( $e );\n\t\t}\n\n\t\t$this->print_total_batches( $batches_completed );\n\t\t$this->print_success( $actions_completed );\n\t}\n\n\t/**\n\t * Print WP CLI message about how many actions are about to be processed.\n\t *\n\t * @author Jeremy Pry\n\t *\n\t * @param int $total\n\t */\n\tprotected function print_total_actions( $total ) {\n\t\tWP_CLI::log(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %d refers to how many scheduled taks were found to run */\n\t\t\t\t_n( 'Found %d scheduled task', 'Found %d scheduled tasks', $total, 'action-scheduler' ),\n\t\t\t\tnumber_format_i18n( $total )\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Print WP CLI message about how many batches of actions were processed.\n\t *\n\t * @author Jeremy Pry\n\t *\n\t * @param int $batches_completed\n\t */\n\tprotected function print_total_batches( $batches_completed ) {\n\t\tWP_CLI::log(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %d refers to the total number of batches executed */\n\t\t\t\t_n( '%d batch executed.', '%d batches executed.', $batches_completed, 'action-scheduler' ),\n\t\t\t\tnumber_format_i18n( $batches_completed )\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Convert an exception into a WP CLI error.\n\t *\n\t * @author Jeremy Pry\n\t *\n\t * @param Exception $e The error object.\n\t *\n\t * @throws \\WP_CLI\\ExitException\n\t */\n\tprotected function print_error( Exception $e ) {\n\t\tWP_CLI::error(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %s refers to the exception error message */\n\t\t\t\t__( 'There was an error running the action scheduler: %s', 'action-scheduler' ),\n\t\t\t\t$e->getMessage()\n\t\t\t)\n\t\t);\n\t}\n\n\t/**\n\t * Print a success message with the number of completed actions.\n\t *\n\t * @author Jeremy Pry\n\t *\n\t * @param int $actions_completed\n\t */\n\tprotected function print_success( $actions_completed ) {\n\t\tWP_CLI::success(\n\t\t\tsprintf(\n\t\t\t\t/* translators: %d refers to the total number of taskes completed */\n\t\t\t\t_n( '%d scheduled task completed.', '%d scheduled tasks completed.', $actions_completed, 'action-scheduler' ),\n\t\t\t\tnumber_format_i18n( $actions_completed )\n\t\t\t)\n\t\t);\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inc/Dependencies/ActionScheduler/classes/WP_CLI/ActionScheduler_WPCLI_Scheduler_command.php b/inc/Dependencies/ActionScheduler/classes/WP_CLI/ActionScheduler_WPCLI_Scheduler_command.php
--- a/inc/Dependencies/ActionScheduler/classes/WP_CLI/ActionScheduler_WPCLI_Scheduler_command.php	
+++ b/inc/Dependencies/ActionScheduler/classes/WP_CLI/ActionScheduler_WPCLI_Scheduler_command.php	
@@ -5,6 +5,36 @@
  */
 class ActionScheduler_WPCLI_Scheduler_command extends WP_CLI_Command {
 
+	/**
+	 * Force tables schema creation for Action Scheduler
+	 *
+	 * ## OPTIONS
+	 *
+	 * @param array $args Positional arguments.
+	 * @param array $assoc_args Keyed arguments.
+	 *
+	 * @subcommand fix-schema
+	 */
+	public function fix_schema( $args, $assoc_args ) {
+		$schema_classes = array( ActionScheduler_LoggerSchema::class, ActionScheduler_StoreSchema::class );
+
+		foreach ( $schema_classes as $classname ) {
+			if ( is_subclass_of( $classname, ActionScheduler_Abstract_Schema::class ) ) {
+				$obj = new $classname();
+				$obj->init();
+				$obj->register_tables( true );
+
+				WP_CLI::success(
+					sprintf(
+						/* translators: %s refers to the schema name*/
+						__( 'Registered schema for %s', 'action-scheduler' ),
+						$classname
+					)
+				);
+			}
+		}
+	}
+
 	/**
 	 * Run the Action Scheduler
 	 *
Index: inc/Dependencies/ActionScheduler/classes/data-stores/ActionScheduler_DBStore.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\n/**\n * Class ActionScheduler_DBStore\n *\n * Action data table data store.\n *\n * @since 3.0.0\n */\nclass ActionScheduler_DBStore extends ActionScheduler_Store {\n\n\t/**\n\t * Used to share information about the before_date property of claims internally.\n\t *\n\t * This is used in preference to passing the same information as a method param\n\t * for backwards-compatibility reasons.\n\t *\n\t * @var DateTime|null\n\t */\n\tprivate $claim_before_date = null;\n\n\t/** @var int */\n\tprotected static $max_args_length = 8000;\n\n\t/** @var int */\n\tprotected static $max_index_length = 191;\n\n\t/**\n\t * Initialize the data store\n\t *\n\t * @codeCoverageIgnore\n\t */\n\tpublic function init() {\n\t\t$table_maker = new ActionScheduler_StoreSchema();\n\t\t$table_maker->init();\n\t\t$table_maker->register_tables();\n\t}\n\n\t/**\n\t * Save an action.\n\t *\n\t * @param ActionScheduler_Action $action Action object.\n\t * @param DateTime              $date Optional schedule date. Default null.\n\t *\n\t * @return int Action ID.\n\t * @throws RuntimeException     Throws exception when saving the action fails.\n\t */\n\tpublic function save_action( ActionScheduler_Action $action, \\DateTime $date = null ) {\n\t\ttry {\n\n\t\t\t$this->validate_action( $action );\n\n\t\t\t/** @var \\wpdb $wpdb */\n\t\t\tglobal $wpdb;\n\t\t\t$data = array(\n\t\t\t\t'hook'                 => $action->get_hook(),\n\t\t\t\t'status'               => ( $action->is_finished() ? self::STATUS_COMPLETE : self::STATUS_PENDING ),\n\t\t\t\t'scheduled_date_gmt'   => $this->get_scheduled_date_string( $action, $date ),\n\t\t\t\t'scheduled_date_local' => $this->get_scheduled_date_string_local( $action, $date ),\n\t\t\t\t'schedule'             => serialize( $action->get_schedule() ), // phpcs:ignore WordPress.PHP.DiscouragedPHPFunctions.serialize_serialize\n\t\t\t\t'group_id'             => $this->get_group_id( $action->get_group() ),\n\t\t\t);\n\t\t\t$args = wp_json_encode( $action->get_args() );\n\t\t\tif ( strlen( $args ) <= static::$max_index_length ) {\n\t\t\t\t$data['args'] = $args;\n\t\t\t} else {\n\t\t\t\t$data['args']          = $this->hash_args( $args );\n\t\t\t\t$data['extended_args'] = $args;\n\t\t\t}\n\n\t\t\t$table_name = ! empty( $wpdb->actionscheduler_actions ) ? $wpdb->actionscheduler_actions : $wpdb->prefix . 'actionscheduler_actions';\n\t\t\t$wpdb->insert( $table_name, $data );\n\t\t\t$action_id = $wpdb->insert_id;\n\n\t\t\tif ( is_wp_error( $action_id ) ) {\n\t\t\t\tthrow new \\RuntimeException( $action_id->get_error_message() );\n\t\t\t} elseif ( empty( $action_id ) ) {\n\t\t\t\tthrow new \\RuntimeException( $wpdb->last_error ? $wpdb->last_error : __( 'Database error.', 'action-scheduler' ) );\n\t\t\t}\n\n\t\t\tdo_action( 'action_scheduler_stored_action', $action_id );\n\n\t\t\treturn $action_id;\n\t\t} catch ( \\Exception $e ) {\n\t\t\t/* translators: %s: error message */\n\t\t\tthrow new \\RuntimeException( sprintf( __( 'Error saving action: %s', 'action-scheduler' ), $e->getMessage() ), 0 );\n\t\t}\n\t}\n\n\t/**\n\t * Generate a hash from json_encoded $args using MD5 as this isn't for security.\n\t *\n\t * @param string $args JSON encoded action args.\n\t * @return string\n\t */\n\tprotected function hash_args( $args ) {\n\t\treturn md5( $args );\n\t}\n\n\t/**\n\t * Get action args query param value from action args.\n\t *\n\t * @param array $args Action args.\n\t * @return string\n\t */\n\tprotected function get_args_for_query( $args ) {\n\t\t$encoded = wp_json_encode( $args );\n\t\tif ( strlen( $encoded ) <= static::$max_index_length ) {\n\t\t\treturn $encoded;\n\t\t}\n\t\treturn $this->hash_args( $encoded );\n\t}\n\t/**\n\t * Get a group's ID based on its name/slug.\n\t *\n\t * @param string $slug The string name of a group.\n\t * @param bool   $create_if_not_exists Whether to create the group if it does not already exist. Default, true - create the group.\n\t *\n\t * @return int The group's ID, if it exists or is created, or 0 if it does not exist and is not created.\n\t */\n\tprotected function get_group_id( $slug, $create_if_not_exists = true ) {\n\t\tif ( empty( $slug ) ) {\n\t\t\treturn 0;\n\t\t}\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\t\t$group_id = (int) $wpdb->get_var( $wpdb->prepare( \"SELECT group_id FROM {$wpdb->actionscheduler_groups} WHERE slug=%s\", $slug ) );\n\t\tif ( empty( $group_id ) && $create_if_not_exists ) {\n\t\t\t$group_id = $this->create_group( $slug );\n\t\t}\n\n\t\treturn $group_id;\n\t}\n\n\t/**\n\t * Create an action group.\n\t *\n\t * @param string $slug Group slug.\n\t *\n\t * @return int Group ID.\n\t */\n\tprotected function create_group( $slug ) {\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\t\t$wpdb->insert( $wpdb->actionscheduler_groups, array( 'slug' => $slug ) );\n\n\t\treturn (int) $wpdb->insert_id;\n\t}\n\n\t/**\n\t * Retrieve an action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return ActionScheduler_Action\n\t */\n\tpublic function fetch_action( $action_id ) {\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\t\t$data = $wpdb->get_row(\n\t\t\t$wpdb->prepare(\n\t\t\t\t\"SELECT a.*, g.slug AS `group` FROM {$wpdb->actionscheduler_actions} a LEFT JOIN {$wpdb->actionscheduler_groups} g ON a.group_id=g.group_id WHERE a.action_id=%d\",\n\t\t\t\t$action_id\n\t\t\t)\n\t\t);\n\n\t\tif ( empty( $data ) ) {\n\t\t\treturn $this->get_null_action();\n\t\t}\n\n\t\tif ( ! empty( $data->extended_args ) ) {\n\t\t\t$data->args = $data->extended_args;\n\t\t\tunset( $data->extended_args );\n\t\t}\n\n\t\t// Convert NULL dates to zero dates.\n\t\t$date_fields = array(\n\t\t\t'scheduled_date_gmt',\n\t\t\t'scheduled_date_local',\n\t\t\t'last_attempt_gmt',\n\t\t\t'last_attempt_gmt',\n\t\t);\n\t\tforeach ( $date_fields as $date_field ) {\n\t\t\tif ( is_null( $data->$date_field ) ) {\n\t\t\t\t$data->$date_field = ActionScheduler_StoreSchema::DEFAULT_DATE;\n\t\t\t}\n\t\t}\n\n\t\ttry {\n\t\t\t$action = $this->make_action_from_db_record( $data );\n\t\t} catch ( ActionScheduler_InvalidActionException $exception ) {\n\t\t\tdo_action( 'action_scheduler_failed_fetch_action', $action_id, $exception );\n\t\t\treturn $this->get_null_action();\n\t\t}\n\n\t\treturn $action;\n\t}\n\n\t/**\n\t * Create a null action.\n\t *\n\t * @return ActionScheduler_NullAction\n\t */\n\tprotected function get_null_action() {\n\t\treturn new ActionScheduler_NullAction();\n\t}\n\n\t/**\n\t * Create an action from a database record.\n\t *\n\t * @param object $data Action database record.\n\t *\n\t * @return ActionScheduler_Action|ActionScheduler_CanceledAction|ActionScheduler_FinishedAction\n\t */\n\tprotected function make_action_from_db_record( $data ) {\n\n\t\t$hook     = $data->hook;\n\t\t$args     = json_decode( $data->args, true );\n\t\t$schedule = unserialize( $data->schedule ); // phpcs:ignore WordPress.PHP.DiscouragedPHPFunctions.serialize_unserialize\n\n\t\t$this->validate_args( $args, $data->action_id );\n\t\t$this->validate_schedule( $schedule, $data->action_id );\n\n\t\tif ( empty( $schedule ) ) {\n\t\t\t$schedule = new ActionScheduler_NullSchedule();\n\t\t}\n\t\t$group = $data->group ? $data->group : '';\n\n\t\treturn ActionScheduler::factory()->get_stored_action( $data->status, $data->hook, $args, $schedule, $group );\n\t}\n\n\t/**\n\t * Returns the SQL statement to query (or count) actions.\n\t *\n\t * @since x.x.x $query['status'] accepts array of statuses instead of a single status.\n\t *\n\t * @param array  $query Filtering options.\n\t * @param string $select_or_count  Whether the SQL should select and return the IDs or just the row count.\n\t *\n\t * @return string SQL statement already properly escaped.\n\t * @throws InvalidArgumentException If the query is invalid.\n\t */\n\tprotected function get_query_actions_sql( array $query, $select_or_count = 'select' ) {\n\n\t\tif ( ! in_array( $select_or_count, array( 'select', 'count' ), true ) ) {\n\t\t\tthrow new InvalidArgumentException( __( 'Invalid value for select or count parameter. Cannot query actions.', 'action-scheduler' ) );\n\t\t}\n\n\t\t$query = wp_parse_args(\n\t\t\t$query,\n\t\t\tarray(\n\t\t\t\t'hook'             => '',\n\t\t\t\t'args'             => null,\n\t\t\t\t'date'             => null,\n\t\t\t\t'date_compare'     => '<=',\n\t\t\t\t'modified'         => null,\n\t\t\t\t'modified_compare' => '<=',\n\t\t\t\t'group'            => '',\n\t\t\t\t'status'           => '',\n\t\t\t\t'claimed'          => null,\n\t\t\t\t'per_page'         => 5,\n\t\t\t\t'offset'           => 0,\n\t\t\t\t'orderby'          => 'date',\n\t\t\t\t'order'            => 'ASC',\n\t\t\t)\n\t\t);\n\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\t\t$sql        = ( 'count' === $select_or_count ) ? 'SELECT count(a.action_id)' : 'SELECT a.action_id';\n\t\t$sql       .= \" FROM {$wpdb->actionscheduler_actions} a\";\n\t\t$sql_params = array();\n\n\t\tif ( ! empty( $query['group'] ) || 'group' === $query['orderby'] ) {\n\t\t\t$sql .= \" LEFT JOIN {$wpdb->actionscheduler_groups} g ON g.group_id=a.group_id\";\n\t\t}\n\n\t\t$sql .= ' WHERE 1=1';\n\n\t\tif ( ! empty( $query['group'] ) ) {\n\t\t\t$sql         .= ' AND g.slug=%s';\n\t\t\t$sql_params[] = $query['group'];\n\t\t}\n\n\t\tif ( $query['hook'] ) {\n\t\t\t$sql         .= ' AND a.hook=%s';\n\t\t\t$sql_params[] = $query['hook'];\n\t\t}\n\t\tif ( ! is_null( $query['args'] ) ) {\n\t\t\t$sql         .= ' AND a.args=%s';\n\t\t\t$sql_params[] = $this->get_args_for_query( $query['args'] );\n\t\t}\n\n\t\tif ( $query['status'] ) {\n\t\t\t$statuses     = (array) $query['status'];\n\t\t\t$placeholders = array_fill( 0, count( $statuses ), '%s' );\n\t\t\t$sql         .= ' AND a.status IN (' . join( ', ', $placeholders ) . ')';\n\t\t\t$sql_params   = array_merge( $sql_params, array_values( $statuses ) );\n\t\t}\n\n\t\tif ( $query['date'] instanceof \\DateTime ) {\n\t\t\t$date = clone $query['date'];\n\t\t\t$date->setTimezone( new \\DateTimeZone( 'UTC' ) );\n\t\t\t$date_string  = $date->format( 'Y-m-d H:i:s' );\n\t\t\t$comparator   = $this->validate_sql_comparator( $query['date_compare'] );\n\t\t\t$sql         .= \" AND a.scheduled_date_gmt $comparator %s\";\n\t\t\t$sql_params[] = $date_string;\n\t\t}\n\n\t\tif ( $query['modified'] instanceof \\DateTime ) {\n\t\t\t$modified = clone $query['modified'];\n\t\t\t$modified->setTimezone( new \\DateTimeZone( 'UTC' ) );\n\t\t\t$date_string  = $modified->format( 'Y-m-d H:i:s' );\n\t\t\t$comparator   = $this->validate_sql_comparator( $query['modified_compare'] );\n\t\t\t$sql         .= \" AND a.last_attempt_gmt $comparator %s\";\n\t\t\t$sql_params[] = $date_string;\n\t\t}\n\n\t\tif ( true === $query['claimed'] ) {\n\t\t\t$sql .= ' AND a.claim_id != 0';\n\t\t} elseif ( false === $query['claimed'] ) {\n\t\t\t$sql .= ' AND a.claim_id = 0';\n\t\t} elseif ( ! is_null( $query['claimed'] ) ) {\n\t\t\t$sql         .= ' AND a.claim_id = %d';\n\t\t\t$sql_params[] = $query['claimed'];\n\t\t}\n\n\t\tif ( ! empty( $query['search'] ) ) {\n\t\t\t$sql .= ' AND (a.hook LIKE %s OR (a.extended_args IS NULL AND a.args LIKE %s) OR a.extended_args LIKE %s';\n\t\t\tfor ( $i = 0; $i < 3; $i++ ) {\n\t\t\t\t$sql_params[] = sprintf( '%%%s%%', $query['search'] );\n\t\t\t}\n\n\t\t\t$search_claim_id = (int) $query['search'];\n\t\t\tif ( $search_claim_id ) {\n\t\t\t\t$sql         .= ' OR a.claim_id = %d';\n\t\t\t\t$sql_params[] = $search_claim_id;\n\t\t\t}\n\n\t\t\t$sql .= ')';\n\t\t}\n\n\t\tif ( 'select' === $select_or_count ) {\n\t\t\tif ( 'ASC' === strtoupper( $query['order'] ) ) {\n\t\t\t\t$order = 'ASC';\n\t\t\t} else {\n\t\t\t\t$order = 'DESC';\n\t\t\t}\n\t\t\tswitch ( $query['orderby'] ) {\n\t\t\t\tcase 'hook':\n\t\t\t\t\t$sql .= \" ORDER BY a.hook $order\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'group':\n\t\t\t\t\t$sql .= \" ORDER BY g.slug $order\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'modified':\n\t\t\t\t\t$sql .= \" ORDER BY a.last_attempt_gmt $order\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'none':\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'action_id':\n\t\t\t\t\t$sql .= \" ORDER BY a.action_id $order\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'date':\n\t\t\t\tdefault:\n\t\t\t\t\t$sql .= \" ORDER BY a.scheduled_date_gmt $order\";\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif ( $query['per_page'] > 0 ) {\n\t\t\t\t$sql         .= ' LIMIT %d, %d';\n\t\t\t\t$sql_params[] = $query['offset'];\n\t\t\t\t$sql_params[] = $query['per_page'];\n\t\t\t}\n\t\t}\n\n\t\tif ( ! empty( $sql_params ) ) {\n\t\t\t$sql = $wpdb->prepare( $sql, $sql_params ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t}\n\n\t\treturn $sql;\n\t}\n\n\t/**\n\t * Query for action count or list of action IDs.\n\t *\n\t * @since x.x.x $query['status'] accepts array of statuses instead of a single status.\n\t *\n\t * @see ActionScheduler_Store::query_actions for $query arg usage.\n\t *\n\t * @param array  $query      Query filtering options.\n\t * @param string $query_type Whether to select or count the results. Defaults to select.\n\t *\n\t * @return string|array|null The IDs of actions matching the query. Null on failure.\n\t */\n\tpublic function query_actions( $query = array(), $query_type = 'select' ) {\n\t\t/** @var wpdb $wpdb */\n\t\tglobal $wpdb;\n\n\t\t$sql = $this->get_query_actions_sql( $query, $query_type );\n\n\t\treturn ( 'count' === $query_type ) ? $wpdb->get_var( $sql ) : $wpdb->get_col( $sql ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared, WordPress.DB.DirectDatabaseQuery.NoSql, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t}\n\n\t/**\n\t * Get a count of all actions in the store, grouped by status.\n\t *\n\t * @return array Set of 'status' => int $count pairs for statuses with 1 or more actions of that status.\n\t */\n\tpublic function action_counts() {\n\t\tglobal $wpdb;\n\n\t\t$sql  = \"SELECT a.status, count(a.status) as 'count'\";\n\t\t$sql .= \" FROM {$wpdb->actionscheduler_actions} a\";\n\t\t$sql .= ' GROUP BY a.status';\n\n\t\t$actions_count_by_status = array();\n\t\t$action_stati_and_labels = $this->get_status_labels();\n\n\t\tforeach ( $wpdb->get_results( $sql ) as $action_data ) { // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t\t// Ignore any actions with invalid status.\n\t\t\tif ( array_key_exists( $action_data->status, $action_stati_and_labels ) ) {\n\t\t\t\t$actions_count_by_status[ $action_data->status ] = $action_data->count;\n\t\t\t}\n\t\t}\n\n\t\treturn $actions_count_by_status;\n\t}\n\n\t/**\n\t * Cancel an action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return void\n\t * @throws \\InvalidArgumentException If the action update failed.\n\t */\n\tpublic function cancel_action( $action_id ) {\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\n\t\t$updated = $wpdb->update(\n\t\t\t$wpdb->actionscheduler_actions,\n\t\t\tarray( 'status' => self::STATUS_CANCELED ),\n\t\t\tarray( 'action_id' => $action_id ),\n\t\t\tarray( '%s' ),\n\t\t\tarray( '%d' )\n\t\t);\n\t\tif ( empty( $updated ) ) {\n\t\t\t/* translators: %s: action ID */\n\t\t\tthrow new \\InvalidArgumentException( sprintf( __( 'Unidentified action %s', 'action-scheduler' ), $action_id ) );\n\t\t}\n\t\tdo_action( 'action_scheduler_canceled_action', $action_id );\n\t}\n\n\t/**\n\t * Cancel pending actions by hook.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $hook Hook name.\n\t *\n\t * @return void\n\t */\n\tpublic function cancel_actions_by_hook( $hook ) {\n\t\t$this->bulk_cancel_actions( array( 'hook' => $hook ) );\n\t}\n\n\t/**\n\t * Cancel pending actions by group.\n\t *\n\t * @param string $group Group slug.\n\t *\n\t * @return void\n\t */\n\tpublic function cancel_actions_by_group( $group ) {\n\t\t$this->bulk_cancel_actions( array( 'group' => $group ) );\n\t}\n\n\t/**\n\t * Bulk cancel actions.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param array $query_args Query parameters.\n\t */\n\tprotected function bulk_cancel_actions( $query_args ) {\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\n\t\tif ( ! is_array( $query_args ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Don't cancel actions that are already canceled.\n\t\tif ( isset( $query_args['status'] ) && self::STATUS_CANCELED === $query_args['status'] ) {\n\t\t\treturn;\n\t\t}\n\n\t\t$action_ids = true;\n\t\t$query_args = wp_parse_args(\n\t\t\t$query_args,\n\t\t\tarray(\n\t\t\t\t'per_page' => 1000,\n\t\t\t\t'status'   => self::STATUS_PENDING,\n\t\t\t\t'orderby'  => 'action_id',\n\t\t\t)\n\t\t);\n\n\t\twhile ( $action_ids ) {\n\t\t\t$action_ids = $this->query_actions( $query_args );\n\t\t\tif ( empty( $action_ids ) ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t$format     = array_fill( 0, count( $action_ids ), '%d' );\n\t\t\t$query_in   = '(' . implode( ',', $format ) . ')';\n\t\t\t$parameters = $action_ids;\n\t\t\tarray_unshift( $parameters, self::STATUS_CANCELED );\n\n\t\t\t$wpdb->query(\n\t\t\t\t$wpdb->prepare(\n\t\t\t\t\t\"UPDATE {$wpdb->actionscheduler_actions} SET status = %s WHERE action_id IN {$query_in}\", // phpcs:ignore WordPress.DB.PreparedSQL.InterpolatedNotPrepared\n\t\t\t\t\t$parameters\n\t\t\t\t)\n\t\t\t);\n\n\t\t\tdo_action( 'action_scheduler_bulk_cancel_actions', $action_ids );\n\t\t}\n\t}\n\n\t/**\n\t * Delete an action.\n\t *\n\t * @param int $action_id Action ID.\n\t * @throws \\InvalidArgumentException If the action deletion failed.\n\t */\n\tpublic function delete_action( $action_id ) {\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\t\t$deleted = $wpdb->delete( $wpdb->actionscheduler_actions, array( 'action_id' => $action_id ), array( '%d' ) );\n\t\tif ( empty( $deleted ) ) {\n\t\t\tthrow new \\InvalidArgumentException( sprintf( __( 'Unidentified action %s', 'action-scheduler' ), $action_id ) ); //phpcs:ignore WordPress.WP.I18n.MissingTranslatorsComment\n\t\t}\n\t\tdo_action( 'action_scheduler_deleted_action', $action_id );\n\t}\n\n\t/**\n\t * Get the schedule date for an action.\n\t *\n\t * @param string $action_id Action ID.\n\t *\n\t * @return \\DateTime The local date the action is scheduled to run, or the date that it ran.\n\t */\n\tpublic function get_date( $action_id ) {\n\t\t$date = $this->get_date_gmt( $action_id );\n\t\tActionScheduler_TimezoneHelper::set_local_timezone( $date );\n\t\treturn $date;\n\t}\n\n\t/**\n\t * Get the GMT schedule date for an action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @throws \\InvalidArgumentException If action cannot be identified.\n\t * @return \\DateTime The GMT date the action is scheduled to run, or the date that it ran.\n\t */\n\tprotected function get_date_gmt( $action_id ) {\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\t\t$record = $wpdb->get_row( $wpdb->prepare( \"SELECT * FROM {$wpdb->actionscheduler_actions} WHERE action_id=%d\", $action_id ) );\n\t\tif ( empty( $record ) ) {\n\t\t\tthrow new \\InvalidArgumentException( sprintf( __( 'Unidentified action %s', 'action-scheduler' ), $action_id ) ); //phpcs:ignore WordPress.WP.I18n.MissingTranslatorsComment\n\t\t}\n\t\tif ( self::STATUS_PENDING === $record->status ) {\n\t\t\treturn as_get_datetime_object( $record->scheduled_date_gmt );\n\t\t} else {\n\t\t\treturn as_get_datetime_object( $record->last_attempt_gmt );\n\t\t}\n\t}\n\n\t/**\n\t * Stake a claim on actions.\n\t *\n\t * @param int       $max_actions Maximum number of action to include in claim.\n\t * @param \\DateTime $before_date Jobs must be schedule before this date. Defaults to now.\n\t * @param array     $hooks Hooks to filter for.\n\t * @param string    $group Group to filter for.\n\t *\n\t * @return ActionScheduler_ActionClaim\n\t */\n\tpublic function stake_claim( $max_actions = 10, \\DateTime $before_date = null, $hooks = array(), $group = '' ) {\n\t\t$claim_id = $this->generate_claim_id();\n\n\t\t$this->claim_before_date = $before_date;\n\t\t$this->claim_actions( $claim_id, $max_actions, $before_date, $hooks, $group );\n\t\t$action_ids              = $this->find_actions_by_claim_id( $claim_id );\n\t\t$this->claim_before_date = null;\n\n\t\treturn new ActionScheduler_ActionClaim( $claim_id, $action_ids );\n\t}\n\n\t/**\n\t * Generate a new action claim.\n\t *\n\t * @return int Claim ID.\n\t */\n\tprotected function generate_claim_id() {\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\t\t$now = as_get_datetime_object();\n\t\t$wpdb->insert( $wpdb->actionscheduler_claims, array( 'date_created_gmt' => $now->format( 'Y-m-d H:i:s' ) ) );\n\n\t\treturn $wpdb->insert_id;\n\t}\n\n\t/**\n\t * Mark actions claimed.\n\t *\n\t * @param string    $claim_id Claim Id.\n\t * @param int       $limit Number of action to include in claim.\n\t * @param \\DateTime $before_date Should use UTC timezone.\n\t * @param array     $hooks Hooks to filter for.\n\t * @param string    $group Group to filter for.\n\t *\n\t * @return int The number of actions that were claimed.\n\t * @throws \\InvalidArgumentException Throws InvalidArgumentException if group doesn't exist.\n\t * @throws \\RuntimeException Throws RuntimeException if unable to claim action.\n\t */\n\tprotected function claim_actions( $claim_id, $limit, \\DateTime $before_date = null, $hooks = array(), $group = '' ) {\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\n\t\t$now  = as_get_datetime_object();\n\t\t$date = is_null( $before_date ) ? $now : clone $before_date;\n\n\t\t// can't use $wpdb->update() because of the <= condition.\n\t\t$update = \"UPDATE {$wpdb->actionscheduler_actions} SET claim_id=%d, last_attempt_gmt=%s, last_attempt_local=%s\";\n\t\t$params = array(\n\t\t\t$claim_id,\n\t\t\t$now->format( 'Y-m-d H:i:s' ),\n\t\t\tcurrent_time( 'mysql' ),\n\t\t);\n\n\t\t$where    = 'WHERE claim_id = 0 AND scheduled_date_gmt <= %s AND status=%s';\n\t\t$params[] = $date->format( 'Y-m-d H:i:s' );\n\t\t$params[] = self::STATUS_PENDING;\n\n\t\tif ( ! empty( $hooks ) ) {\n\t\t\t$placeholders = array_fill( 0, count( $hooks ), '%s' );\n\t\t\t$where       .= ' AND hook IN (' . join( ', ', $placeholders ) . ')';\n\t\t\t$params       = array_merge( $params, array_values( $hooks ) );\n\t\t}\n\n\t\tif ( ! empty( $group ) ) {\n\n\t\t\t$group_id = $this->get_group_id( $group, false );\n\n\t\t\t// throw exception if no matching group found, this matches ActionScheduler_wpPostStore's behaviour.\n\t\t\tif ( empty( $group_id ) ) {\n\t\t\t\t/* translators: %s: group name */\n\t\t\t\tthrow new InvalidArgumentException( sprintf( __( 'The group \"%s\" does not exist.', 'action-scheduler' ), $group ) );\n\t\t\t}\n\n\t\t\t$where   .= ' AND group_id = %d';\n\t\t\t$params[] = $group_id;\n\t\t}\n\n\t\t/**\n\t\t * Sets the order-by clause used in the action claim query.\n\t\t *\n\t\t * @since x.x.x\n\t\t *\n\t\t * @param string $order_by_sql\n\t\t */\n\t\t$order    = apply_filters( 'action_scheduler_claim_actions_order_by', 'ORDER BY attempts ASC, scheduled_date_gmt ASC, action_id ASC' );\n\t\t$params[] = $limit;\n\n\t\t$sql           = $wpdb->prepare( \"{$update} {$where} {$order} LIMIT %d\", $params ); // phpcs:ignore WordPress.DB.PreparedSQL.InterpolatedNotPrepared, WordPress.DB.PreparedSQLPlaceholders\n\t\t$rows_affected = $wpdb->query( $sql ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared, WordPress.DB.DirectDatabaseQuery.DirectQuery, WordPress.DB.DirectDatabaseQuery.NoCaching\n\t\tif ( false === $rows_affected ) {\n\t\t\tthrow new \\RuntimeException( __( 'Unable to claim actions. Database error.', 'action-scheduler' ) );\n\t\t}\n\n\t\treturn (int) $rows_affected;\n\t}\n\n\t/**\n\t * Get the number of active claims.\n\t *\n\t * @return int\n\t */\n\tpublic function get_claim_count() {\n\t\tglobal $wpdb;\n\n\t\t$sql = \"SELECT COUNT(DISTINCT claim_id) FROM {$wpdb->actionscheduler_actions} WHERE claim_id != 0 AND status IN ( %s, %s)\";\n\t\t$sql = $wpdb->prepare( $sql, array( self::STATUS_PENDING, self::STATUS_RUNNING ) ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\n\t\treturn (int) $wpdb->get_var( $sql ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t}\n\n\t/**\n\t * Return an action's claim ID, as stored in the claim_id column.\n\t *\n\t * @param string $action_id Action ID.\n\t * @return mixed\n\t */\n\tpublic function get_claim_id( $action_id ) {\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\n\t\t$sql = \"SELECT claim_id FROM {$wpdb->actionscheduler_actions} WHERE action_id=%d\";\n\t\t$sql = $wpdb->prepare( $sql, $action_id ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\n\t\treturn (int) $wpdb->get_var( $sql ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t}\n\n\t/**\n\t * Retrieve the action IDs of action in a claim.\n\t *\n\t * @param  int $claim_id Claim ID.\n\t * @return int[]\n\t */\n\tpublic function find_actions_by_claim_id( $claim_id ) {\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\n\t\t$action_ids  = array();\n\t\t$before_date = isset( $this->claim_before_date ) ? $this->claim_before_date : as_get_datetime_object();\n\t\t$cut_off     = $before_date->format( 'Y-m-d H:i:s' );\n\n\t\t$sql = $wpdb->prepare(\n\t\t\t\"SELECT action_id, scheduled_date_gmt FROM {$wpdb->actionscheduler_actions} WHERE claim_id = %d\",\n\t\t\t$claim_id\n\t\t);\n\n\t\t// Verify that the scheduled date for each action is within the expected bounds (in some unusual\n\t\t// cases, we cannot depend on MySQL to honor all of the WHERE conditions we specify).\n\t\tforeach ( $wpdb->get_results( $sql ) as $claimed_action ) { // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t\tif ( $claimed_action->scheduled_date_gmt <= $cut_off ) {\n\t\t\t\t$action_ids[] = absint( $claimed_action->action_id );\n\t\t\t}\n\t\t}\n\n\t\treturn $action_ids;\n\t}\n\n\t/**\n\t * Release actions from a claim and delete the claim.\n\t *\n\t * @param ActionScheduler_ActionClaim $claim Claim object.\n\t */\n\tpublic function release_claim( ActionScheduler_ActionClaim $claim ) {\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\t\t$wpdb->update( $wpdb->actionscheduler_actions, array( 'claim_id' => 0 ), array( 'claim_id' => $claim->get_id() ), array( '%d' ), array( '%d' ) );\n\t\t$wpdb->delete( $wpdb->actionscheduler_claims, array( 'claim_id' => $claim->get_id() ), array( '%d' ) );\n\t}\n\n\t/**\n\t * Remove the claim from an action.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return void\n\t */\n\tpublic function unclaim_action( $action_id ) {\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\t\t$wpdb->update(\n\t\t\t$wpdb->actionscheduler_actions,\n\t\t\tarray( 'claim_id' => 0 ),\n\t\t\tarray( 'action_id' => $action_id ),\n\t\t\tarray( '%s' ),\n\t\t\tarray( '%d' )\n\t\t);\n\t}\n\n\t/**\n\t * Mark an action as failed.\n\t *\n\t * @param int $action_id Action ID.\n\t * @throws \\InvalidArgumentException Throw an exception if action was not updated.\n\t */\n\tpublic function mark_failure( $action_id ) {\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\t\t$updated = $wpdb->update(\n\t\t\t$wpdb->actionscheduler_actions,\n\t\t\tarray( 'status' => self::STATUS_FAILED ),\n\t\t\tarray( 'action_id' => $action_id ),\n\t\t\tarray( '%s' ),\n\t\t\tarray( '%d' )\n\t\t);\n\t\tif ( empty( $updated ) ) {\n\t\t\tthrow new \\InvalidArgumentException( sprintf( __( 'Unidentified action %s', 'action-scheduler' ), $action_id ) ); //phpcs:ignore WordPress.WP.I18n.MissingTranslatorsComment\n\t\t}\n\t}\n\n\t/**\n\t * Add execution message to action log.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return void\n\t */\n\tpublic function log_execution( $action_id ) {\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\n\t\t$sql = \"UPDATE {$wpdb->actionscheduler_actions} SET attempts = attempts+1, status=%s, last_attempt_gmt = %s, last_attempt_local = %s WHERE action_id = %d\";\n\t\t$sql = $wpdb->prepare( $sql, self::STATUS_RUNNING, current_time( 'mysql', true ), current_time( 'mysql' ), $action_id ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t$wpdb->query( $sql ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t}\n\n\t/**\n\t * Mark an action as complete.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return void\n\t * @throws \\InvalidArgumentException Throw an exception if action was not updated.\n\t */\n\tpublic function mark_complete( $action_id ) {\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\t\t$updated = $wpdb->update(\n\t\t\t$wpdb->actionscheduler_actions,\n\t\t\tarray(\n\t\t\t\t'status'             => self::STATUS_COMPLETE,\n\t\t\t\t'last_attempt_gmt'   => current_time( 'mysql', true ),\n\t\t\t\t'last_attempt_local' => current_time( 'mysql' ),\n\t\t\t),\n\t\t\tarray( 'action_id' => $action_id ),\n\t\t\tarray( '%s' ),\n\t\t\tarray( '%d' )\n\t\t);\n\t\tif ( empty( $updated ) ) {\n\t\t\tthrow new \\InvalidArgumentException( sprintf( __( 'Unidentified action %s', 'action-scheduler' ), $action_id ) ); //phpcs:ignore WordPress.WP.I18n.MissingTranslatorsComment\n\t\t}\n\t}\n\n\t/**\n\t * Get an action's status.\n\t *\n\t * @param int $action_id Action ID.\n\t *\n\t * @return string\n\t * @throws \\InvalidArgumentException Throw an exception if not status was found for action_id.\n\t * @throws \\RuntimeException Throw an exception if action status could not be retrieved.\n\t */\n\tpublic function get_status( $action_id ) {\n\t\t/** @var \\wpdb $wpdb */\n\t\tglobal $wpdb;\n\t\t$sql    = \"SELECT status FROM {$wpdb->actionscheduler_actions} WHERE action_id=%d\";\n\t\t$sql    = $wpdb->prepare( $sql, $action_id ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\t\t$status = $wpdb->get_var( $sql ); // phpcs:ignore WordPress.DB.PreparedSQL.NotPrepared\n\n\t\tif ( null === $status ) {\n\t\t\tthrow new \\InvalidArgumentException( __( 'Invalid action ID. No status found.', 'action-scheduler' ) );\n\t\t} elseif ( empty( $status ) ) {\n\t\t\tthrow new \\RuntimeException( __( 'Unknown status found for action.', 'action-scheduler' ) );\n\t\t} else {\n\t\t\treturn $status;\n\t\t}\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inc/Dependencies/ActionScheduler/classes/data-stores/ActionScheduler_DBStore.php b/inc/Dependencies/ActionScheduler/classes/data-stores/ActionScheduler_DBStore.php
--- a/inc/Dependencies/ActionScheduler/classes/data-stores/ActionScheduler_DBStore.php	
+++ b/inc/Dependencies/ActionScheduler/classes/data-stores/ActionScheduler_DBStore.php	
@@ -446,7 +446,7 @@
 			array( '%s' ),
 			array( '%d' )
 		);
-		if ( empty( $updated ) ) {
+		if ( false === $updated ) {
 			/* translators: %s: action ID */
 			throw new \InvalidArgumentException( sprintf( __( 'Unidentified action %s', 'action-scheduler' ), $action_id ) );
 		}
Index: inc/Dependencies/ActionScheduler/classes/abstracts/ActionScheduler_Logger.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\n/**\n * Class ActionScheduler_Logger\n * @codeCoverageIgnore\n */\nabstract class ActionScheduler_Logger {\n\tprivate static $logger = NULL;\n\n\t/**\n\t * @return ActionScheduler_Logger\n\t */\n\tpublic static function instance() {\n\t\tif ( empty(self::$logger) ) {\n\t\t\t$class = apply_filters('action_scheduler_logger_class', 'ActionScheduler_wpCommentLogger');\n\t\t\tself::$logger = new $class();\n\t\t}\n\t\treturn self::$logger;\n\t}\n\n\t/**\n\t * @param string $action_id\n\t * @param string $message\n\t * @param DateTime $date\n\t *\n\t * @return string The log entry ID\n\t */\n\tabstract public function log( $action_id, $message, DateTime $date = NULL );\n\n\t/**\n\t * @param string $entry_id\n\t *\n\t * @return ActionScheduler_LogEntry\n\t */\n\tabstract public function get_entry( $entry_id );\n\n\t/**\n\t * @param string $action_id\n\t *\n\t * @return ActionScheduler_LogEntry[]\n\t */\n\tabstract public function get_logs( $action_id );\n\n\n\t/**\n\t * @codeCoverageIgnore\n\t */\n\tpublic function init() {\n\t\t$this->hook_stored_action();\n\t\tadd_action( 'action_scheduler_canceled_action', array( $this, 'log_canceled_action' ), 10, 1 );\n\t\tadd_action( 'action_scheduler_begin_execute', array( $this, 'log_started_action' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_after_execute', array( $this, 'log_completed_action' ), 10, 3 );\n\t\tadd_action( 'action_scheduler_failed_execution', array( $this, 'log_failed_action' ), 10, 3 );\n\t\tadd_action( 'action_scheduler_failed_action', array( $this, 'log_timed_out_action' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_unexpected_shutdown', array( $this, 'log_unexpected_shutdown' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_reset_action', array( $this, 'log_reset_action' ), 10, 1 );\n\t\tadd_action( 'action_scheduler_execution_ignored', array( $this, 'log_ignored_action' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_failed_fetch_action', array( $this, 'log_failed_fetch_action' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_failed_to_schedule_next_instance', array( $this, 'log_failed_schedule_next_instance' ), 10, 2 );\n\t\tadd_action( 'action_scheduler_bulk_cancel_actions', array( $this, 'bulk_log_cancel_actions' ), 10, 1 );\n\t}\n\n\tpublic function hook_stored_action() {\n\t\tadd_action( 'action_scheduler_stored_action', array( $this, 'log_stored_action' ) );\n\t}\n\n\tpublic function unhook_stored_action() {\n\t\tremove_action( 'action_scheduler_stored_action', array( $this, 'log_stored_action' ) );\n\t}\n\n\tpublic function log_stored_action( $action_id ) {\n\t\t$this->log( $action_id, __( 'action created', 'action-scheduler' ) );\n\t}\n\n\tpublic function log_canceled_action( $action_id ) {\n\t\t$this->log( $action_id, __( 'action canceled', 'action-scheduler' ) );\n\t}\n\n\tpublic function log_started_action( $action_id, $context = '' ) {\n\t\tif ( ! empty( $context ) ) {\n\t\t\t/* translators: %s: context */\n\t\t\t$message = sprintf( __( 'action started via %s', 'action-scheduler' ), $context );\n\t\t} else {\n\t\t\t$message = __( 'action started', 'action-scheduler' );\n\t\t}\n\t\t$this->log( $action_id, $message );\n\t}\n\n\tpublic function log_completed_action( $action_id, $action = NULL, $context = '' ) {\n\t\tif ( ! empty( $context ) ) {\n\t\t\t/* translators: %s: context */\n\t\t\t$message = sprintf( __( 'action complete via %s', 'action-scheduler' ), $context );\n\t\t} else {\n\t\t\t$message = __( 'action complete', 'action-scheduler' );\n\t\t}\n\t\t$this->log( $action_id, $message );\n\t}\n\n\tpublic function log_failed_action( $action_id, Exception $exception, $context = '' ) {\n\t\tif ( ! empty( $context ) ) {\n\t\t\t/* translators: 1: context 2: exception message */\n\t\t\t$message = sprintf( __( 'action failed via %1$s: %2$s', 'action-scheduler' ), $context, $exception->getMessage() );\n\t\t} else {\n\t\t\t/* translators: %s: exception message */\n\t\t\t$message = sprintf( __( 'action failed: %s', 'action-scheduler' ), $exception->getMessage() );\n\t\t}\n\t\t$this->log( $action_id, $message );\n\t}\n\n\tpublic function log_timed_out_action( $action_id, $timeout ) {\n\t\t/* translators: %s: amount of time */\n\t\t$this->log( $action_id, sprintf( __( 'action timed out after %s seconds', 'action-scheduler' ), $timeout ) );\n\t}\n\n\tpublic function log_unexpected_shutdown( $action_id, $error ) {\n\t\tif ( ! empty( $error ) ) {\n\t\t\t/* translators: 1: error message 2: filename 3: line */\n\t\t\t$this->log( $action_id, sprintf( __( 'unexpected shutdown: PHP Fatal error %1$s in %2$s on line %3$s', 'action-scheduler' ), $error['message'], $error['file'], $error['line'] ) );\n\t\t}\n\t}\n\n\tpublic function log_reset_action( $action_id ) {\n\t\t$this->log( $action_id, __( 'action reset', 'action-scheduler' ) );\n\t}\n\n\tpublic function log_ignored_action( $action_id, $context = '' ) {\n\t\tif ( ! empty( $context ) ) {\n\t\t\t/* translators: %s: context */\n\t\t\t$message = sprintf( __( 'action ignored via %s', 'action-scheduler' ), $context );\n\t\t} else {\n\t\t\t$message = __( 'action ignored', 'action-scheduler' );\n\t\t}\n\t\t$this->log( $action_id, $message );\n\t}\n\n\t/**\n\t * @param string $action_id\n\t * @param Exception|NULL $exception The exception which occured when fetching the action. NULL by default for backward compatibility.\n\t *\n\t * @return ActionScheduler_LogEntry[]\n\t */\n\tpublic function log_failed_fetch_action( $action_id, Exception $exception = NULL ) {\n\n\t\tif ( ! is_null( $exception ) ) {\n\t\t\t/* translators: %s: exception message */\n\t\t\t$log_message = sprintf( __( 'There was a failure fetching this action: %s', 'action-scheduler' ), $exception->getMessage() );\n\t\t} else {\n\t\t\t$log_message = __( 'There was a failure fetching this action', 'action-scheduler' );\n\t\t}\n\n\t\t$this->log( $action_id, $log_message );\n\t}\n\n\tpublic function log_failed_schedule_next_instance( $action_id, Exception $exception ) {\n\t\t/* translators: %s: exception message */\n\t\t$this->log( $action_id, sprintf( __( 'There was a failure scheduling the next instance of this action: %s', 'action-scheduler' ), $exception->getMessage() ) );\n\t}\n\n\t/**\n\t * Bulk add cancel action log entries.\n\t *\n\t * Implemented here for backward compatibility. Should be implemented in parent loggers\n\t * for more performant bulk logging.\n\t *\n\t * @param array $action_ids List of action ID.\n\t */\n\tpublic function bulk_log_cancel_actions( $action_ids ) {\n\t\tif ( empty( $action_ids ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\tforeach ( $action_ids as $action_id ) {\n\t\t\t$this->log_canceled_action( $action_id );\n\t\t}\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inc/Dependencies/ActionScheduler/classes/abstracts/ActionScheduler_Logger.php b/inc/Dependencies/ActionScheduler/classes/abstracts/ActionScheduler_Logger.php
--- a/inc/Dependencies/ActionScheduler/classes/abstracts/ActionScheduler_Logger.php	
+++ b/inc/Dependencies/ActionScheduler/classes/abstracts/ActionScheduler_Logger.php	
@@ -109,7 +109,7 @@
 
 	public function log_timed_out_action( $action_id, $timeout ) {
 		/* translators: %s: amount of time */
-		$this->log( $action_id, sprintf( __( 'action timed out after %s seconds', 'action-scheduler' ), $timeout ) );
+		$this->log( $action_id, sprintf( __( 'action marked as failed after %s seconds. Unknown error occurred. Check server, PHP and database error logs to diagnose cause.', 'action-scheduler' ), $timeout ) );
 	}
 
 	public function log_unexpected_shutdown( $action_id, $error ) {
Index: inc/Dependencies/ActionScheduler/classes/ActionScheduler_DateTime.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\n/**\n * ActionScheduler DateTime class.\n *\n * This is a custom extension to DateTime that\n */\nclass ActionScheduler_DateTime extends DateTime {\n\n\t/**\n\t * UTC offset.\n\t *\n\t * Only used when a timezone is not set. When a timezone string is\n\t * used, this will be set to 0.\n\t *\n\t * @var int\n\t */\n\tprotected $utcOffset = 0;\n\n\t/**\n\t * Get the unix timestamp of the current object.\n\t *\n\t * Missing in PHP 5.2 so just here so it can be supported consistently.\n\t *\n\t * @return int\n\t */\n\tpublic function getTimestamp() {\n\t\treturn method_exists( 'DateTime', 'getTimestamp' ) ? parent::getTimestamp() : $this->format( 'U' );\n\t}\n\n\t/**\n\t * Set the UTC offset.\n\t *\n\t * This represents a fixed offset instead of a timezone setting.\n\t *\n\t * @param $offset\n\t */\n\tpublic function setUtcOffset( $offset ) {\n\t\t$this->utcOffset = intval( $offset );\n\t}\n\n\t/**\n\t * Returns the timezone offset.\n\t *\n\t * @return int\n\t * @link http://php.net/manual/en/datetime.getoffset.php\n\t */\n\tpublic function getOffset() {\n\t\treturn $this->utcOffset ? $this->utcOffset : parent::getOffset();\n\t}\n\n\t/**\n\t * Set the TimeZone associated with the DateTime\n\t *\n\t * @param DateTimeZone $timezone\n\t *\n\t * @return static\n\t * @link http://php.net/manual/en/datetime.settimezone.php\n\t */\n\tpublic function setTimezone( $timezone ) {\n\t\t$this->utcOffset = 0;\n\t\tparent::setTimezone( $timezone );\n\n\t\treturn $this;\n\t}\n\n\t/**\n\t * Get the timestamp with the WordPress timezone offset added or subtracted.\n\t *\n\t * @since  3.0.0\n\t * @return int\n\t */\n\tpublic function getOffsetTimestamp() {\n\t\treturn $this->getTimestamp() + $this->getOffset();\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inc/Dependencies/ActionScheduler/classes/ActionScheduler_DateTime.php b/inc/Dependencies/ActionScheduler/classes/ActionScheduler_DateTime.php
--- a/inc/Dependencies/ActionScheduler/classes/ActionScheduler_DateTime.php	
+++ b/inc/Dependencies/ActionScheduler/classes/ActionScheduler_DateTime.php	
@@ -24,6 +24,7 @@
 	 *
 	 * @return int
 	 */
+	#[\ReturnTypeWillChange]
 	public function getTimestamp() {
 		return method_exists( 'DateTime', 'getTimestamp' ) ? parent::getTimestamp() : $this->format( 'U' );
 	}
@@ -45,6 +46,7 @@
 	 * @return int
 	 * @link http://php.net/manual/en/datetime.getoffset.php
 	 */
+	#[\ReturnTypeWillChange]
 	public function getOffset() {
 		return $this->utcOffset ? $this->utcOffset : parent::getOffset();
 	}
@@ -57,6 +59,7 @@
 	 * @return static
 	 * @link http://php.net/manual/en/datetime.settimezone.php
 	 */
+	#[\ReturnTypeWillChange]
 	public function setTimezone( $timezone ) {
 		$this->utcOffset = 0;
 		parent::setTimezone( $timezone );
Index: tests/Fixtures/DIContainer.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nnamespace WP_Rocket\\Tests\\Fixtures;\n\nuse ArrayAccess;\nuse WP_Rocket\\Engine\\Cache\\AdvancedCache;\n\nclass DIContainer implements ArrayAccess {\n\tprivate $container = [];\n\n\tpublic function setUp() {\n\t\tadd_filter( 'rocket_container', [ $this, 'getContainer' ] );\n\t}\n\n\tpublic function tearDown() {\n\t\tremove_filter( 'rocket_container', [ $this, 'getContainer' ] );\n\t}\n\n\tpublic function getContainer() {\n\t\treturn $this;\n\t}\n\n\tpublic function add( $key, $concrete ) {\n\t\t$this->container[ $key ] = $concrete;\n\t}\n\n\tpublic function get( $key ) {\n\t\tif ( $this->has( $key ) ) {\n\t\t\treturn $this->container[ $key ];\n\t\t}\n\t}\n\n\tpublic function has( $key ) {\n\t\treturn array_key_exists( $key, $this->container );\n\t}\n\n\tpublic function remove( $key ) {\n\t\tunset( $this->container[ $key ] );\n\t}\n\n\tpublic function offsetExists( $key ) {\n\t\treturn $this->has( $key );\n\t}\n\n\tpublic function offsetGet( $key ) {\n\t\treturn $this->get( $key );\n\t}\n\n\tpublic function offsetSet( $key, $concrete ) {\n\t\t$this->add( $key, $concrete );\n\t}\n\n\tpublic function offsetUnset( $key ) {\n\t\treturn $this->remove( $key );\n\t}\n\n\t/********************************************************\n\t * Add specific concretes here for reuse in the tests.\n\t *******************************************************/\n\n\tpublic function addAdvancedCache( $template_path, $filesystem = null ) {\n\t\t$this->container['advanced_cache'] = new AdvancedCache( $template_path, $filesystem );\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/tests/Fixtures/DIContainer.php b/tests/Fixtures/DIContainer.php
--- a/tests/Fixtures/DIContainer.php	
+++ b/tests/Fixtures/DIContainer.php	
@@ -12,7 +12,7 @@
 		add_filter( 'rocket_container', [ $this, 'getContainer' ] );
 	}
 
-	public function tearDown() {
+	public function tearDown(): void {
 		remove_filter( 'rocket_container', [ $this, 'getContainer' ] );
 	}
 
Index: inc/Dependencies/ActionScheduler/classes/abstracts/ActionScheduler.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\nuse Action_Scheduler\\WP_CLI\\Migration_Command;\nuse Action_Scheduler\\Migration\\Controller;\n\n/**\n * Class ActionScheduler\n * @codeCoverageIgnore\n */\nabstract class ActionScheduler {\n\tprivate static $plugin_file = '';\n\t/** @var ActionScheduler_ActionFactory */\n\tprivate static $factory = NULL;\n\t/** @var bool */\n\tprivate static $data_store_initialized = false;\n\n\tpublic static function factory() {\n\t\tif ( !isset(self::$factory) ) {\n\t\t\tself::$factory = new ActionScheduler_ActionFactory();\n\t\t}\n\t\treturn self::$factory;\n\t}\n\n\tpublic static function store() {\n\t\treturn ActionScheduler_Store::instance();\n\t}\n\n\tpublic static function lock() {\n\t\treturn ActionScheduler_Lock::instance();\n\t}\n\n\tpublic static function logger() {\n\t\treturn ActionScheduler_Logger::instance();\n\t}\n\n\tpublic static function runner() {\n\t\treturn ActionScheduler_QueueRunner::instance();\n\t}\n\n\tpublic static function admin_view() {\n\t\treturn ActionScheduler_AdminView::instance();\n\t}\n\n\t/**\n\t * Get the absolute system path to the plugin directory, or a file therein\n\t * @static\n\t * @param string $path\n\t * @return string\n\t */\n\tpublic static function plugin_path( $path ) {\n\t\t$base = dirname(self::$plugin_file);\n\t\tif ( $path ) {\n\t\t\treturn trailingslashit($base).$path;\n\t\t} else {\n\t\t\treturn untrailingslashit($base);\n\t\t}\n\t}\n\n\t/**\n\t * Get the absolute URL to the plugin directory, or a file therein\n\t * @static\n\t * @param string $path\n\t * @return string\n\t */\n\tpublic static function plugin_url( $path ) {\n\t\treturn plugins_url($path, self::$plugin_file);\n\t}\n\n\tpublic static function autoload( $class ) {\n\t\t$d           = DIRECTORY_SEPARATOR;\n\t\t$classes_dir = self::plugin_path( 'classes' . $d );\n\t\t$separator   = strrpos( $class, '\\\\' );\n\t\tif ( false !== $separator ) {\n\t\t\tif ( 0 !== strpos( $class, 'Action_Scheduler' ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t$class = substr( $class, $separator + 1 );\n\t\t}\n\n\t\tif ( 'Deprecated' === substr( $class, -10 ) ) {\n\t\t\t$dir = self::plugin_path( 'deprecated' . $d );\n\t\t} elseif ( self::is_class_abstract( $class ) ) {\n\t\t\t$dir = $classes_dir . 'abstracts' . $d;\n\t\t} elseif ( self::is_class_migration( $class ) ) {\n\t\t\t$dir = $classes_dir . 'migration' . $d;\n\t\t} elseif ( 'Schedule' === substr( $class, -8 ) ) {\n\t\t\t$dir = $classes_dir . 'schedules' . $d;\n\t\t} elseif ( 'Action' === substr( $class, -6 ) ) {\n\t\t\t$dir = $classes_dir . 'actions' . $d;\n\t\t} elseif ( 'Schema' === substr( $class, -6 ) ) {\n\t\t\t$dir = $classes_dir . 'schema' . $d;\n\t\t} elseif ( strpos( $class, 'ActionScheduler' ) === 0 ) {\n\t\t\t$segments = explode( '_', $class );\n\t\t\t$type = isset( $segments[ 1 ] ) ? $segments[ 1 ] : '';\n\n\t\t\tswitch ( $type ) {\n\t\t\t\tcase 'WPCLI':\n\t\t\t\t\t$dir = $classes_dir . 'WP_CLI' . $d;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'DBLogger':\n\t\t\t\tcase 'DBStore':\n\t\t\t\tcase 'HybridStore':\n\t\t\t\tcase 'wpPostStore':\n\t\t\t\tcase 'wpCommentLogger':\n\t\t\t\t\t$dir = $classes_dir . 'data-stores' . $d;\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\t$dir = $classes_dir;\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t} elseif ( self::is_class_cli( $class ) ) {\n\t\t\t$dir = $classes_dir . 'WP_CLI' . $d;\n\t\t} elseif ( strpos( $class, 'CronExpression' ) === 0 ) {\n\t\t\t$dir = self::plugin_path( 'lib' . $d . 'cron-expression' . $d );\n\t\t} elseif ( strpos( $class, 'WP_Async_Request' ) === 0 ) {\n\t\t\t$dir = self::plugin_path( 'lib' . $d );\n\t\t} else {\n\t\t\treturn;\n\t\t}\n\n\t\tif ( file_exists( \"{$dir}{$class}.php\" ) ) {\n\t\t\tinclude( \"{$dir}{$class}.php\" );\n\t\t\treturn;\n\t\t}\n\t}\n\n\t/**\n\t * Initialize the plugin\n\t *\n\t * @static\n\t * @param string $plugin_file\n\t */\n\tpublic static function init( $plugin_file ) {\n\t\tself::$plugin_file = $plugin_file;\n\t\tspl_autoload_register( array( __CLASS__, 'autoload' ) );\n\n\t\t/**\n\t\t * Fires in the early stages of Action Scheduler init hook.\n\t\t */\n\t\tdo_action( 'action_scheduler_pre_init' );\n\n\t\trequire_once( self::plugin_path( 'functions.php' ) );\n\t\tActionScheduler_DataController::init();\n\n\t\t$store      = self::store();\n\t\t$logger     = self::logger();\n\t\t$runner     = self::runner();\n\t\t$admin_view = self::admin_view();\n\n\t\t// Ensure initialization on plugin activation.\n\t\tif ( ! did_action( 'init' ) ) {\n\t\t\tadd_action( 'init', array( $admin_view, 'init' ), 0, 0 ); // run before $store::init()\n\t\t\tadd_action( 'init', array( $store, 'init' ), 1, 0 );\n\t\t\tadd_action( 'init', array( $logger, 'init' ), 1, 0 );\n\t\t\tadd_action( 'init', array( $runner, 'init' ), 1, 0 );\n\t\t} else {\n\t\t\t$admin_view->init();\n\t\t\t$store->init();\n\t\t\t$logger->init();\n\t\t\t$runner->init();\n\t\t}\n\n\t\tif ( apply_filters( 'action_scheduler_load_deprecated_functions', true ) ) {\n\t\t\trequire_once( self::plugin_path( 'deprecated/functions.php' ) );\n\t\t}\n\n\t\tif ( defined( 'WP_CLI' ) && WP_CLI ) {\n\t\t\tWP_CLI::add_command( 'action-scheduler', 'ActionScheduler_WPCLI_Scheduler_command' );\n\t\t\tif ( ! ActionScheduler_DataController::is_migration_complete() && Controller::instance()->allow_migration() ) {\n\t\t\t\t$command = new Migration_Command();\n\t\t\t\t$command->register();\n\t\t\t}\n\t\t}\n\n\t\tself::$data_store_initialized = true;\n\n\t\t/**\n\t\t * Handle WP comment cleanup after migration.\n\t\t */\n\t\tif ( is_a( $logger, 'ActionScheduler_DBLogger' ) && ActionScheduler_DataController::is_migration_complete() && ActionScheduler_WPCommentCleaner::has_logs() ) {\n\t\t\tActionScheduler_WPCommentCleaner::init();\n\t\t}\n\n\t\tadd_action( 'action_scheduler/migration_complete', 'ActionScheduler_WPCommentCleaner::maybe_schedule_cleanup' );\n\t}\n\n\t/**\n\t * Check whether the AS data store has been initialized.\n\t *\n\t * @param string $function_name The name of the function being called. Optional. Default `null`.\n\t * @return bool\n\t */\n\tpublic static function is_initialized( $function_name = null ) {\n\t\tif ( ! self::$data_store_initialized && ! empty( $function_name ) ) {\n\t\t\t$message = sprintf( __( '%s() was called before the Action Scheduler data store was initialized', 'action-scheduler' ), esc_attr( $function_name ) );\n\t\t\terror_log( $message, E_WARNING );\n\t\t}\n\n\t\treturn self::$data_store_initialized;\n\t}\n\n\t/**\n\t * Determine if the class is one of our abstract classes.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $class The class name.\n\t *\n\t * @return bool\n\t */\n\tprotected static function is_class_abstract( $class ) {\n\t\tstatic $abstracts = array(\n\t\t\t'ActionScheduler'                            => true,\n\t\t\t'ActionScheduler_Abstract_ListTable'         => true,\n\t\t\t'ActionScheduler_Abstract_QueueRunner'       => true,\n\t\t\t'ActionScheduler_Abstract_Schedule'          => true,\n\t\t\t'ActionScheduler_Abstract_RecurringSchedule' => true,\n\t\t\t'ActionScheduler_Lock'                       => true,\n\t\t\t'ActionScheduler_Logger'                     => true,\n\t\t\t'ActionScheduler_Abstract_Schema'            => true,\n\t\t\t'ActionScheduler_Store'                      => true,\n\t\t\t'ActionScheduler_TimezoneHelper'             => true,\n\t\t);\n\n\t\treturn isset( $abstracts[ $class ] ) && $abstracts[ $class ];\n\t}\n\n\t/**\n\t * Determine if the class is one of our migration classes.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $class The class name.\n\t *\n\t * @return bool\n\t */\n\tprotected static function is_class_migration( $class ) {\n\t\tstatic $migration_segments = array(\n\t\t\t'ActionMigrator'  => true,\n\t\t\t'BatchFetcher'    => true,\n\t\t\t'DBStoreMigrator' => true,\n\t\t\t'DryRun'          => true,\n\t\t\t'LogMigrator'     => true,\n\t\t\t'Config'          => true,\n\t\t\t'Controller'      => true,\n\t\t\t'Runner'          => true,\n\t\t\t'Scheduler'       => true,\n\t\t);\n\n\t\t$segments = explode( '_', $class );\n\t\t$segment = isset( $segments[ 1 ] ) ? $segments[ 1 ] : $class;\n\n\t\treturn isset( $migration_segments[ $segment ] ) && $migration_segments[ $segment ];\n\t}\n\n\t/**\n\t * Determine if the class is one of our WP CLI classes.\n\t *\n\t * @since 3.0.0\n\t *\n\t * @param string $class The class name.\n\t *\n\t * @return bool\n\t */\n\tprotected static function is_class_cli( $class ) {\n\t\tstatic $cli_segments = array(\n\t\t\t'QueueRunner' => true,\n\t\t\t'Command'     => true,\n\t\t\t'ProgressBar' => true,\n\t\t);\n\n\t\t$segments = explode( '_', $class );\n\t\t$segment = isset( $segments[ 1 ] ) ? $segments[ 1 ] : $class;\n\n\t\treturn isset( $cli_segments[ $segment ] ) && $cli_segments[ $segment ];\n\t}\n\n\tfinal public function __clone() {\n\t\ttrigger_error(\"Singleton. No cloning allowed!\", E_USER_ERROR);\n\t}\n\n\tfinal public function __wakeup() {\n\t\ttrigger_error(\"Singleton. No serialization allowed!\", E_USER_ERROR);\n\t}\n\n\tfinal private function __construct() {}\n\n\t/** Deprecated **/\n\n\tpublic static function get_datetime_object( $when = null, $timezone = 'UTC' ) {\n\t\t_deprecated_function( __METHOD__, '2.0', 'wcs_add_months()' );\n\t\treturn as_get_datetime_object( $when, $timezone );\n\t}\n\n\t/**\n\t * Issue deprecated warning if an Action Scheduler function is called in the shutdown hook.\n\t *\n\t * @param string $function_name The name of the function being called.\n\t * @deprecated 3.1.6.\n\t */\n\tpublic static function check_shutdown_hook( $function_name ) {\n\t\t_deprecated_function( __FUNCTION__, '3.1.6' );\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inc/Dependencies/ActionScheduler/classes/abstracts/ActionScheduler.php b/inc/Dependencies/ActionScheduler/classes/abstracts/ActionScheduler.php
--- a/inc/Dependencies/ActionScheduler/classes/abstracts/ActionScheduler.php	
+++ b/inc/Dependencies/ActionScheduler/classes/abstracts/ActionScheduler.php	
@@ -118,8 +118,8 @@
 			return;
 		}
 
-		if ( file_exists( "{$dir}{$class}.php" ) ) {
-			include( "{$dir}{$class}.php" );
+		if ( file_exists( $dir . "{$class}.php" ) ) {
+			include( $dir . "{$class}.php" );
 			return;
 		}
 	}
Index: inc/Dependencies/ActionScheduler/functions.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n\n/**\n * General API functions for scheduling actions\n */\n\n/**\n * Enqueue an action to run one time, as soon as possible\n *\n * @param string $hook The hook to trigger.\n * @param array  $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n * @return int The action ID.\n */\nfunction as_enqueue_async_action( $hook, $args = array(), $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\treturn ActionScheduler::factory()->async( $hook, $args, $group );\n}\n\n/**\n * Schedule an action to run one time\n *\n * @param int $timestamp When the job will run.\n * @param string $hook The hook to trigger.\n * @param array $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n *\n * @return int The action ID.\n */\nfunction as_schedule_single_action( $timestamp, $hook, $args = array(), $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\treturn ActionScheduler::factory()->single( $hook, $args, $timestamp, $group );\n}\n\n/**\n * Schedule a recurring action\n *\n * @param int $timestamp When the first instance of the job will run.\n * @param int $interval_in_seconds How long to wait between runs.\n * @param string $hook The hook to trigger.\n * @param array $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n *\n * @return int The action ID.\n */\nfunction as_schedule_recurring_action( $timestamp, $interval_in_seconds, $hook, $args = array(), $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\treturn ActionScheduler::factory()->recurring( $hook, $args, $timestamp, $interval_in_seconds, $group );\n}\n\n/**\n * Schedule an action that recurs on a cron-like schedule.\n *\n * @param int $base_timestamp The first instance of the action will be scheduled\n *        to run at a time calculated after this timestamp matching the cron\n *        expression. This can be used to delay the first instance of the action.\n * @param string $schedule A cron-link schedule string\n * @see http://en.wikipedia.org/wiki/Cron\n *   *    *    *    *    *    *\n *   ┬    ┬    ┬    ┬    ┬    ┬\n *   |    |    |    |    |    |\n *   |    |    |    |    |    + year [optional]\n *   |    |    |    |    +----- day of week (0 - 7) (Sunday=0 or 7)\n *   |    |    |    +---------- month (1 - 12)\n *   |    |    +--------------- day of month (1 - 31)\n *   |    +-------------------- hour (0 - 23)\n *   +------------------------- min (0 - 59)\n * @param string $hook The hook to trigger.\n * @param array $args Arguments to pass when the hook triggers.\n * @param string $group The group to assign this job to.\n *\n * @return int The action ID.\n */\nfunction as_schedule_cron_action( $timestamp, $schedule, $hook, $args = array(), $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\treturn ActionScheduler::factory()->cron( $hook, $args, $timestamp, $schedule, $group );\n}\n\n/**\n * Cancel the next occurrence of a scheduled action.\n *\n * While only the next instance of a recurring or cron action is unscheduled by this method, that will also prevent\n * all future instances of that recurring or cron action from being run. Recurring and cron actions are scheduled in\n * a sequence instead of all being scheduled at once. Each successive occurrence of a recurring action is scheduled\n * only after the former action is run. If the next instance is never run, because it's unscheduled by this function,\n * then the following instance will never be scheduled (or exist), which is effectively the same as being unscheduled\n * by this method also.\n *\n * @param string $hook The hook that the job will trigger.\n * @param array $args Args that would have been passed to the job.\n * @param string $group The group the job is assigned to.\n *\n * @return string|null The scheduled action ID if a scheduled action was found, or null if no matching action found.\n */\nfunction as_unschedule_action( $hook, $args = array(), $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn 0;\n\t}\n\t$params = array(\n\t\t'hook'    => $hook,\n\t\t'status'  => ActionScheduler_Store::STATUS_PENDING,\n\t\t'orderby' => 'date',\n\t\t'order'   => 'ASC',\n\t\t'group'   => $group,\n\t);\n\tif ( is_array( $args ) ) {\n\t\t$params['args'] = $args;\n\t}\n\n\t$action_id = ActionScheduler::store()->query_action( $params );\n\tif ( $action_id ) {\n\t\tActionScheduler::store()->cancel_action( $action_id );\n\t}\n\n\treturn $action_id;\n}\n\n/**\n * Cancel all occurrences of a scheduled action.\n *\n * @param string $hook The hook that the job will trigger.\n * @param array $args Args that would have been passed to the job.\n * @param string $group The group the job is assigned to.\n */\nfunction as_unschedule_all_actions( $hook, $args = array(), $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn;\n\t}\n\tif ( empty( $args ) ) {\n\t\tif ( ! empty( $hook ) && empty( $group ) ) {\n\t\t\tActionScheduler_Store::instance()->cancel_actions_by_hook( $hook );\n\t\t\treturn;\n\t\t}\n\t\tif ( ! empty( $group ) && empty( $hook ) ) {\n\t\t\tActionScheduler_Store::instance()->cancel_actions_by_group( $group );\n\t\t\treturn;\n\t\t}\n\t}\n\tdo {\n\t\t$unscheduled_action = as_unschedule_action( $hook, $args, $group );\n\t} while ( ! empty( $unscheduled_action ) );\n}\n\n/**\n * Check if there is an existing action in the queue with a given hook, args and group combination.\n *\n * An action in the queue could be pending, in-progress or async. If the is pending for a time in\n * future, its scheduled date will be returned as a timestamp. If it is currently being run, or an\n * async action sitting in the queue waiting to be processed, in which case boolean true will be\n * returned. Or there may be no async, in-progress or pending action for this hook, in which case,\n * boolean false will be the return value.\n *\n * @param string $hook\n * @param array $args\n * @param string $group\n *\n * @return int|bool The timestamp for the next occurrence of a pending scheduled action, true for an async or in-progress action or false if there is no matching action.\n */\nfunction as_next_scheduled_action( $hook, $args = null, $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn false;\n\t}\n\n\t$params = array(\n\t\t'hook'    => $hook,\n\t\t'orderby' => 'date',\n\t\t'order'   => 'ASC',\n\t\t'group'   => $group,\n\t);\n\n\tif ( is_array( $args ) ) {\n\t\t$params['args'] = $args;\n\t}\n\n\t$params['status'] = ActionScheduler_Store::STATUS_RUNNING;\n\t$action_id        = ActionScheduler::store()->query_action( $params );\n\tif ( $action_id ) {\n\t\treturn true;\n\t}\n\n\t$params['status'] = ActionScheduler_Store::STATUS_PENDING;\n\t$action_id        = ActionScheduler::store()->query_action( $params );\n\tif ( null === $action_id ) {\n\t\treturn false;\n\t}\n\n\t$action         = ActionScheduler::store()->fetch_action( $action_id );\n\t$scheduled_date = $action->get_schedule()->get_date();\n\tif ( $scheduled_date ) {\n\t\treturn (int) $scheduled_date->format( 'U' );\n\t} elseif ( null === $scheduled_date ) { // pending async action with NullSchedule\n\t\treturn true;\n\t}\n\n\treturn false;\n}\n\n/**\n * Check if there is a scheduled action in the queue but more efficiently than as_next_scheduled_action().\n *\n * It's recommended to use this function when you need to know whether a specific action is currently scheduled\n * (pending or in-progress).\n *\n * @since x.x.x\n *\n * @param string $hook  The hook of the action.\n * @param array  $args  Args that have been passed to the action. Null will matches any args.\n * @param string $group The group the job is assigned to.\n *\n * @return bool True if a matching action is pending or in-progress, false otherwise.\n */\nfunction as_has_scheduled_action( $hook, $args = null, $group = '' ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn false;\n\t}\n\n\t$query_args = array(\n\t\t'hook'     => $hook,\n\t\t'status'   => array( ActionScheduler_Store::STATUS_RUNNING, ActionScheduler_Store::STATUS_PENDING ),\n\t\t'group'    => $group,\n\t\t'orderby'  => 'none',\n\t);\n\n\tif ( null !== $args ) {\n\t\t$query_args['args'] = $args;\n\t}\n\n\t$action_id = ActionScheduler::store()->query_action( $query_args );\n\n\treturn $action_id !== null;\n}\n\n/**\n * Find scheduled actions\n *\n * @param array $args Possible arguments, with their default values:\n *        'hook' => '' - the name of the action that will be triggered\n *        'args' => NULL - the args array that will be passed with the action\n *        'date' => NULL - the scheduled date of the action. Expects a DateTime object, a unix timestamp, or a string that can parsed with strtotime(). Used in UTC timezone.\n *        'date_compare' => '<=' - operator for testing \"date\". accepted values are '!=', '>', '>=', '<', '<=', '='\n *        'modified' => NULL - the date the action was last updated. Expects a DateTime object, a unix timestamp, or a string that can parsed with strtotime(). Used in UTC timezone.\n *        'modified_compare' => '<=' - operator for testing \"modified\". accepted values are '!=', '>', '>=', '<', '<=', '='\n *        'group' => '' - the group the action belongs to\n *        'status' => '' - ActionScheduler_Store::STATUS_COMPLETE or ActionScheduler_Store::STATUS_PENDING\n *        'claimed' => NULL - TRUE to find claimed actions, FALSE to find unclaimed actions, a string to find a specific claim ID\n *        'per_page' => 5 - Number of results to return\n *        'offset' => 0\n *        'orderby' => 'date' - accepted values are 'hook', 'group', 'modified', 'date' or 'none'\n *        'order' => 'ASC'\n *\n * @param string $return_format OBJECT, ARRAY_A, or ids.\n *\n * @return array\n */\nfunction as_get_scheduled_actions( $args = array(), $return_format = OBJECT ) {\n\tif ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {\n\t\treturn array();\n\t}\n\t$store = ActionScheduler::store();\n\tforeach ( array('date', 'modified') as $key ) {\n\t\tif ( isset($args[$key]) ) {\n\t\t\t$args[$key] = as_get_datetime_object($args[$key]);\n\t\t}\n\t}\n\t$ids = $store->query_actions( $args );\n\n\tif ( $return_format == 'ids' || $return_format == 'int' ) {\n\t\treturn $ids;\n\t}\n\n\t$actions = array();\n\tforeach ( $ids as $action_id ) {\n\t\t$actions[$action_id] = $store->fetch_action( $action_id );\n\t}\n\n\tif ( $return_format == ARRAY_A ) {\n\t\tforeach ( $actions as $action_id => $action_object ) {\n\t\t\t$actions[$action_id] = get_object_vars($action_object);\n\t\t}\n\t}\n\n\treturn $actions;\n}\n\n/**\n * Helper function to create an instance of DateTime based on a given\n * string and timezone. By default, will return the current date/time\n * in the UTC timezone.\n *\n * Needed because new DateTime() called without an explicit timezone\n * will create a date/time in PHP's timezone, but we need to have\n * assurance that a date/time uses the right timezone (which we almost\n * always want to be UTC), which means we need to always include the\n * timezone when instantiating datetimes rather than leaving it up to\n * the PHP default.\n *\n * @param mixed $date_string A date/time string. Valid formats are explained in http://php.net/manual/en/datetime.formats.php.\n * @param string $timezone A timezone identifier, like UTC or Europe/Lisbon. The list of valid identifiers is available http://php.net/manual/en/timezones.php.\n *\n * @return ActionScheduler_DateTime\n */\nfunction as_get_datetime_object( $date_string = null, $timezone = 'UTC' ) {\n\tif ( is_object( $date_string ) && $date_string instanceof DateTime ) {\n\t\t$date = new ActionScheduler_DateTime( $date_string->format( 'Y-m-d H:i:s' ), new DateTimeZone( $timezone ) );\n\t} elseif ( is_numeric( $date_string ) ) {\n\t\t$date = new ActionScheduler_DateTime( '@' . $date_string, new DateTimeZone( $timezone ) );\n\t} else {\n\t\t$date = new ActionScheduler_DateTime( $date_string, new DateTimeZone( $timezone ) );\n\t}\n\treturn $date;\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inc/Dependencies/ActionScheduler/functions.php b/inc/Dependencies/ActionScheduler/functions.php
--- a/inc/Dependencies/ActionScheduler/functions.php	
+++ b/inc/Dependencies/ActionScheduler/functions.php	
@@ -98,7 +98,7 @@
  * @param array $args Args that would have been passed to the job.
  * @param string $group The group the job is assigned to.
  *
- * @return string|null The scheduled action ID if a scheduled action was found, or null if no matching action found.
+ * @return int|null The scheduled action ID if a scheduled action was found, or null if no matching action found.
  */
 function as_unschedule_action( $hook, $args = array(), $group = '' ) {
 	if ( ! ActionScheduler::is_initialized( __FUNCTION__ ) ) {
@@ -116,8 +116,22 @@
 	}
 
 	$action_id = ActionScheduler::store()->query_action( $params );
+
 	if ( $action_id ) {
-		ActionScheduler::store()->cancel_action( $action_id );
+		try {
+			ActionScheduler::store()->cancel_action( $action_id );
+		} catch ( Exception $exception ) {
+			ActionScheduler::logger()->log(
+				$action_id,
+				sprintf(
+					/* translators: %s is the name of the hook to be cancelled. */
+					__( 'Caught exception while cancelling action: %s', 'action-scheduler' ),
+					esc_attr( $hook )
+				)
+			);
+
+			$action_id = null;
+		}
 	}
 
 	return $action_id;
@@ -313,7 +327,7 @@
 	} elseif ( is_numeric( $date_string ) ) {
 		$date = new ActionScheduler_DateTime( '@' . $date_string, new DateTimeZone( $timezone ) );
 	} else {
-		$date = new ActionScheduler_DateTime( $date_string, new DateTimeZone( $timezone ) );
+		$date = new ActionScheduler_DateTime( null === $date_string ? 'now' : $date_string, new DateTimeZone( $timezone ) );
 	}
 	return $date;
 }
Index: inc/classes/dependencies/mobiledetect/mobiledetectlib/Mobile_Detect.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?php\n/**\n * Mobile Detect Library\n * Motto: \"Every business should have a mobile detection script to detect mobile readers\"\n *\n * WP_Rocket_Mobile_Detect is a lightweight PHP class for detecting mobile devices (including tablets).\n * It uses the User-Agent string combined with specific HTTP headers to detect the mobile environment.\n *\n * Homepage: http://mobiledetect.net\n * GitHub: https://github.com/serbanghita/Mobile-Detect\n * README: https://github.com/serbanghita/Mobile-Detect/blob/master/README.md\n * CONTRIBUTING: https://github.com/serbanghita/Mobile-Detect/blob/master/docs/CONTRIBUTING.md\n * KNOWN LIMITATIONS: https://github.com/serbanghita/Mobile-Detect/blob/master/docs/KNOWN_LIMITATIONS.md\n * EXAMPLES: https://github.com/serbanghita/Mobile-Detect/wiki/Code-examples\n *\n * @license https://github.com/serbanghita/Mobile-Detect/blob/master/LICENSE.txt MIT License\n * @author  Serban Ghita <serbanghita@gmail.com>\n * @author  Nick Ilyin <nick.ilyin@gmail.com>\n * Original author: Victor Stanciu <vic.stanciu@gmail.com>\n *\n * @version 2.8.37\n *\n * Auto-generated isXXXX() magic methods.\n * php -a examples/dump_magic_methods.php\n *\n * @method bool isiPhone()\n * @method bool isBlackBerry()\n * @method bool isPixel()\n * @method bool isHTC()\n * @method bool isNexus()\n * @method bool isDell()\n * @method bool isMotorola()\n * @method bool isSamsung()\n * @method bool isLG()\n * @method bool isSony()\n * @method bool isAsus()\n * @method bool isXiaomi()\n * @method bool isNokiaLumia()\n * @method bool isMicromax()\n * @method bool isPalm()\n * @method bool isVertu()\n * @method bool isPantech()\n * @method bool isFly()\n * @method bool isWiko()\n * @method bool isiMobile()\n * @method bool isSimValley()\n * @method bool isWolfgang()\n * @method bool isAlcatel()\n * @method bool isNintendo()\n * @method bool isAmoi()\n * @method bool isINQ()\n * @method bool isOnePlus()\n * @method bool isGenericPhone()\n * @method bool isiPad()\n * @method bool isNexusTablet()\n * @method bool isGoogleTablet()\n * @method bool isSamsungTablet()\n * @method bool isKindle()\n * @method bool isSurfaceTablet()\n * @method bool isHPTablet()\n * @method bool isAsusTablet()\n * @method bool isBlackBerryTablet()\n * @method bool isHTCtablet()\n * @method bool isMotorolaTablet()\n * @method bool isNookTablet()\n * @method bool isAcerTablet()\n * @method bool isToshibaTablet()\n * @method bool isLGTablet()\n * @method bool isFujitsuTablet()\n * @method bool isPrestigioTablet()\n * @method bool isLenovoTablet()\n * @method bool isDellTablet()\n * @method bool isYarvikTablet()\n * @method bool isMedionTablet()\n * @method bool isArnovaTablet()\n * @method bool isIntensoTablet()\n * @method bool isIRUTablet()\n * @method bool isMegafonTablet()\n * @method bool isEbodaTablet()\n * @method bool isAllViewTablet()\n * @method bool isArchosTablet()\n * @method bool isAinolTablet()\n * @method bool isNokiaLumiaTablet()\n * @method bool isSonyTablet()\n * @method bool isPhilipsTablet()\n * @method bool isCubeTablet()\n * @method bool isCobyTablet()\n * @method bool isMIDTablet()\n * @method bool isMSITablet()\n * @method bool isSMiTTablet()\n * @method bool isRockChipTablet()\n * @method bool isFlyTablet()\n * @method bool isbqTablet()\n * @method bool isHuaweiTablet()\n * @method bool isNecTablet()\n * @method bool isPantechTablet()\n * @method bool isBronchoTablet()\n * @method bool isVersusTablet()\n * @method bool isZyncTablet()\n * @method bool isPositivoTablet()\n * @method bool isNabiTablet()\n * @method bool isKoboTablet()\n * @method bool isDanewTablet()\n * @method bool isTexetTablet()\n * @method bool isPlaystationTablet()\n * @method bool isTrekstorTablet()\n * @method bool isPyleAudioTablet()\n * @method bool isAdvanTablet()\n * @method bool isDanyTechTablet()\n * @method bool isGalapadTablet()\n * @method bool isMicromaxTablet()\n * @method bool isKarbonnTablet()\n * @method bool isAllFineTablet()\n * @method bool isPROSCANTablet()\n * @method bool isYONESTablet()\n * @method bool isChangJiaTablet()\n * @method bool isGUTablet()\n * @method bool isPointOfViewTablet()\n * @method bool isOvermaxTablet()\n * @method bool isHCLTablet()\n * @method bool isDPSTablet()\n * @method bool isVistureTablet()\n * @method bool isCrestaTablet()\n * @method bool isMediatekTablet()\n * @method bool isConcordeTablet()\n * @method bool isGoCleverTablet()\n * @method bool isModecomTablet()\n * @method bool isVoninoTablet()\n * @method bool isECSTablet()\n * @method bool isStorexTablet()\n * @method bool isVodafoneTablet()\n * @method bool isEssentielBTablet()\n * @method bool isRossMoorTablet()\n * @method bool isiMobileTablet()\n * @method bool isTolinoTablet()\n * @method bool isAudioSonicTablet()\n * @method bool isAMPETablet()\n * @method bool isSkkTablet()\n * @method bool isTecnoTablet()\n * @method bool isJXDTablet()\n * @method bool isiJoyTablet()\n * @method bool isFX2Tablet()\n * @method bool isXoroTablet()\n * @method bool isViewsonicTablet()\n * @method bool isVerizonTablet()\n * @method bool isOdysTablet()\n * @method bool isCaptivaTablet()\n * @method bool isIconbitTablet()\n * @method bool isTeclastTablet()\n * @method bool isOndaTablet()\n * @method bool isJaytechTablet()\n * @method bool isBlaupunktTablet()\n * @method bool isDigmaTablet()\n * @method bool isEvolioTablet()\n * @method bool isLavaTablet()\n * @method bool isAocTablet()\n * @method bool isMpmanTablet()\n * @method bool isCelkonTablet()\n * @method bool isWolderTablet()\n * @method bool isMediacomTablet()\n * @method bool isMiTablet()\n * @method bool isNibiruTablet()\n * @method bool isNexoTablet()\n * @method bool isLeaderTablet()\n * @method bool isUbislateTablet()\n * @method bool isPocketBookTablet()\n * @method bool isKocasoTablet()\n * @method bool isHisenseTablet()\n * @method bool isHudl()\n * @method bool isTelstraTablet()\n * @method bool isGenericTablet()\n * @method bool isAndroidOS()\n * @method bool isBlackBerryOS()\n * @method bool isPalmOS()\n * @method bool isSymbianOS()\n * @method bool isWindowsMobileOS()\n * @method bool isWindowsPhoneOS()\n * @method bool isiOS()\n * @method bool isiPadOS()\n * @method bool isSailfishOS()\n * @method bool isMeeGoOS()\n * @method bool isMaemoOS()\n * @method bool isJavaOS()\n * @method bool iswebOS()\n * @method bool isbadaOS()\n * @method bool isBREWOS()\n * @method bool isChrome()\n * @method bool isDolfin()\n * @method bool isOpera()\n * @method bool isSkyfire()\n * @method bool isEdge()\n * @method bool isIE()\n * @method bool isFirefox()\n * @method bool isBolt()\n * @method bool isTeaShark()\n * @method bool isBlazer()\n * @method bool isSafari()\n * @method bool isWeChat()\n * @method bool isUCBrowser()\n * @method bool isbaiduboxapp()\n * @method bool isbaidubrowser()\n * @method bool isDiigoBrowser()\n * @method bool isMercury()\n * @method bool isObigoBrowser()\n * @method bool isNetFront()\n * @method bool isGenericBrowser()\n * @method bool isPaleMoon()\n * @method bool isBot()\n * @method bool isMobileBot()\n * @method bool isDesktopMode()\n * @method bool isTV()\n * @method bool isWebKit()\n * @method bool isConsole()\n * @method bool isWatch()\n\n */\nclass WP_Rocket_Mobile_Detect\n{\n    /**\n     * Mobile detection type.\n     *\n     * @deprecated since version 2.6.9\n     */\n    const DETECTION_TYPE_MOBILE     = 'mobile';\n\n    /**\n     * Extended detection type.\n     *\n     * @deprecated since version 2.6.9\n     */\n    const DETECTION_TYPE_EXTENDED   = 'extended';\n\n    /**\n     * A frequently used regular expression to extract version #s.\n     *\n     * @deprecated since version 2.6.9\n     */\n    const VER                       = '([\\w._\\+]+)';\n\n    /**\n     * Top-level device.\n     */\n    const MOBILE_GRADE_A            = 'A';\n\n    /**\n     * Mid-level device.\n     */\n    const MOBILE_GRADE_B            = 'B';\n\n    /**\n     * Low-level device.\n     */\n    const MOBILE_GRADE_C            = 'C';\n\n    /**\n     * Stores the version number of the current release.\n     */\n    const VERSION                   = '2.8.37';\n\n    /**\n     * A type for the version() method indicating a string return value.\n     */\n    const VERSION_TYPE_STRING       = 'text';\n\n    /**\n     * A type for the version() method indicating a float return value.\n     */\n    const VERSION_TYPE_FLOAT        = 'float';\n\n    /**\n     * A cache for resolved matches\n     * @var array\n     */\n    protected $cache = array();\n\n    /**\n     * The User-Agent HTTP header is stored in here.\n     * @var string\n     */\n    protected $userAgent = null;\n\n    /**\n     * HTTP headers in the PHP-flavor. So HTTP_USER_AGENT and SERVER_SOFTWARE.\n     * @var array\n     */\n    protected $httpHeaders = array();\n\n    /**\n     * CloudFront headers. E.g. CloudFront-Is-Desktop-Viewer, CloudFront-Is-Mobile-Viewer & CloudFront-Is-Tablet-Viewer.\n     * @var array\n     */\n    protected $cloudfrontHeaders = array();\n\n    /**\n     * The matching Regex.\n     * This is good for debug.\n     * @var string\n     */\n    protected $matchingRegex = null;\n\n    /**\n     * The matches extracted from the regex expression.\n     * This is good for debug.\n     *\n     * @var string\n     */\n    protected $matchesArray = null;\n\n    /**\n     * The detection type, using self::DETECTION_TYPE_MOBILE or self::DETECTION_TYPE_EXTENDED.\n     *\n     * @deprecated since version 2.6.9\n     *\n     * @var string\n     */\n    protected $detectionType = self::DETECTION_TYPE_MOBILE;\n\n    /**\n     * HTTP headers that trigger the 'isMobile' detection\n     * to be true.\n     *\n     * @var array\n     */\n    protected static $mobileHeaders = array(\n\n            'HTTP_ACCEPT'                  => array('matches' => array(\n                                                                        // Opera Mini; @reference: http://dev.opera.com/articles/view/opera-binary-markup-language/\n                                                                        'application/x-obml2d',\n                                                                        // BlackBerry devices.\n                                                                        'application/vnd.rim.html',\n                                                                        'text/vnd.wap.wml',\n                                                                        'application/vnd.wap.xhtml+xml'\n                                            )),\n            'HTTP_X_WAP_PROFILE'           => null,\n            'HTTP_X_WAP_CLIENTID'          => null,\n            'HTTP_WAP_CONNECTION'          => null,\n            'HTTP_PROFILE'                 => null,\n            // Reported by Opera on Nokia devices (eg. C3).\n            'HTTP_X_OPERAMINI_PHONE_UA'    => null,\n            'HTTP_X_NOKIA_GATEWAY_ID'      => null,\n            'HTTP_X_ORANGE_ID'             => null,\n            'HTTP_X_VODAFONE_3GPDPCONTEXT' => null,\n            'HTTP_X_HUAWEI_USERID'         => null,\n            // Reported by Windows Smartphones.\n            'HTTP_UA_OS'                   => null,\n            // Reported by Verizon, Vodafone proxy system.\n            'HTTP_X_MOBILE_GATEWAY'        => null,\n            // Seen this on HTC Sensation. SensationXE_Beats_Z715e.\n            'HTTP_X_ATT_DEVICEID'          => null,\n            // Seen this on a HTC.\n            'HTTP_UA_CPU'                  => array('matches' => array('ARM')),\n    );\n\n    /**\n     * List of mobile devices (phones).\n     *\n     * @var array\n     */\n    protected static $phoneDevices = array(\n        'iPhone'        => '\\biPhone\\b|\\biPod\\b', // |\\biTunes\n        'BlackBerry'    => 'BlackBerry|\\bBB10\\b|rim[0-9]+|\\b(BBA100|BBB100|BBD100|BBE100|BBF100|STH100)\\b-[0-9]+',\n        'Pixel'         => '; \\bPixel\\b',\n        'HTC'           => 'HTC|HTC.*(Sensation|Evo|Vision|Explorer|6800|8100|8900|A7272|S510e|C110e|Legend|Desire|T8282)|APX515CKT|Qtek9090|APA9292KT|HD_mini|Sensation.*Z710e|PG86100|Z715e|Desire.*(A8181|HD)|ADR6200|ADR6400L|ADR6425|001HT|Inspire 4G|Android.*\\bEVO\\b|T-Mobile G1|Z520m|Android [0-9.]+; Pixel',\n        'Nexus'         => 'Nexus One|Nexus S|Galaxy.*Nexus|Android.*Nexus.*Mobile|Nexus 4|Nexus 5|Nexus 5X|Nexus 6',\n        // @todo: Is 'Dell Streak' a tablet or a phone? ;)\n        'Dell'          => 'Dell[;]? (Streak|Aero|Venue|Venue Pro|Flash|Smoke|Mini 3iX)|XCD28|XCD35|\\b001DL\\b|\\b101DL\\b|\\bGS01\\b',\n        'Motorola'      => 'Motorola|DROIDX|DROID BIONIC|\\bDroid\\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\\bMoto E\\b|XT1068|XT1092|XT1052',\n        'Samsung'       => '\\bSamsung\\b|SM-G950F|SM-G955F|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|SM-N910C|SM-A310F|GT-I9190|SM-J500FN|SM-G903F|SM-J330F|SM-G610F|SM-G981B|SM-G892A|SM-A530F',\n        'LG'            => '\\bLG\\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|MS323|M257)|LM-G710',\n        'Sony'          => 'SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533|SOV34|601SO|F8332',\n        'Asus'          => 'Asus.*Galaxy|PadFone.*Mobile',\n        'Xiaomi'        => '^(?!.*\\bx11\\b).*xiaomi.*$|POCOPHONE F1|MI 8|Redmi Note 9S|Redmi Note 5A Prime|N2G47H|M2001J2G|M2001J2I|M1805E10A|M2004J11G|M1902F1G|M2002J9G|M2004J19G|M2003J6A1G',\n        'NokiaLumia'    => 'Lumia [0-9]{3,4}',\n        // http://www.micromaxinfo.com/mobiles/smartphones\n        // Added because the codes might conflict with Acer Tablets.\n        'Micromax'      => 'Micromax.*\\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\\b',\n        // @todo Complete the regex.\n        'Palm'          => 'PalmSource|Palm', // avantgo|blazer|elaine|hiptop|plucker|xiino ;\n        'Vertu'         => 'Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature', // Just for fun ;)\n        // http://www.pantech.co.kr/en/prod/prodList.do?gbrand=VEGA (PANTECH)\n        // Most of the VEGA devices are legacy. PANTECH seem to be newer devices based on Android.\n        'Pantech'       => 'PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790',\n        // http://www.fly-phone.com/devices/smartphones/ ; Included only smartphones.\n        'Fly'           => 'IQ230|IQ444|IQ450|IQ440|IQ442|IQ441|IQ245|IQ256|IQ236|IQ255|IQ235|IQ245|IQ275|IQ240|IQ285|IQ280|IQ270|IQ260|IQ250',\n        // http://fr.wikomobile.com\n        'Wiko'          => 'KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|CINK KING|CINK PEAX|CINK SLIM|SUBLIM',\n        'iMobile'        => 'i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)',\n        // Added simvalley mobile just for fun. They have some interesting devices.\n        // http://www.simvalley.fr/telephonie---gps-_22_telephonie-mobile_telephones_.html\n        'SimValley'     => '\\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\\b',\n         // Wolfgang - a brand that is sold by Aldi supermarkets.\n         // http://www.wolfgangmobile.com/\n        'Wolfgang'      => 'AT-B24D|AT-AS50HD|AT-AS40W|AT-AS55HD|AT-AS45q2|AT-B26D|AT-AS50Q',\n        'Alcatel'       => 'Alcatel',\n        'Nintendo'      => 'Nintendo (3DS|Switch)',\n        // http://en.wikipedia.org/wiki/Amoi\n        'Amoi'          => 'Amoi',\n        // http://en.wikipedia.org/wiki/INQ\n        'INQ'           => 'INQ',\n        'OnePlus'       => 'ONEPLUS',\n        // @Tapatalk is a mobile app; http://support.tapatalk.com/threads/smf-2-0-2-os-and-browser-detection-plugin-and-tapatalk.15565/#post-79039\n        'GenericPhone'  => 'Tapatalk|PDA;|SAGEM|\\bmmp\\b|pocket|\\bpsp\\b|symbian|Smartphone|smartfon|treo|up.browser|up.link|vodafone|\\bwap\\b|nokia|Series40|Series60|S60|SonyEricsson|N900|MAUI.*WAP.*Browser',\n    );\n\n    /**\n     * List of tablet devices.\n     *\n     * @var array\n     */\n    protected static $tabletDevices = array(\n        // @todo: check for mobile friendly emails topic.\n        'iPad'              => 'iPad|iPad.*Mobile',\n        // Removed |^.*Android.*Nexus(?!(?:Mobile).)*$\n        // @see #442\n        // @todo Merge NexusTablet into GoogleTablet.\n        'NexusTablet'       => 'Android.*Nexus[\\s]+(7|9|10)',\n        // https://en.wikipedia.org/wiki/Pixel_C\n        'GoogleTablet'           => 'Android.*Pixel C',\n        'SamsungTablet'     => 'SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y?|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|SM-P555M|SM-P355M|SM-T113NU|SM-T815Y|SM-T585|SM-T285|SM-T825|SM-W708|SM-T835|SM-T830|SM-T837V|SM-T720|SM-T510|SM-T387V|SM-P610|SM-T290|SM-T515|SM-T590|SM-T595|SM-T725|SM-T817P|SM-P585N0|SM-T395|SM-T295|SM-T865|SM-P610N|SM-P615|SM-T970|SM-T380|SM-T5950|SM-T905|SM-T231|SM-T500|SM-T860', // SCH-P709|SCH-P729|SM-T2558|GT-I9205 - Samsung Mega - treat them like a regular phone.\n        // http://docs.aws.amazon.com/silk/latest/developerguide/user-agent.html\n        'Kindle'            => 'Kindle|Silk.*Accelerated|Android.*\\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI|KFFOWI|KFGIWI|KFMEWI)\\b|Android.*Silk/[0-9.]+ like Chrome/[0-9.]+ (?!Mobile)',\n        // Only the Surface tablets with Windows RT are considered mobile.\n        // http://msdn.microsoft.com/en-us/library/ie/hh920767(v=vs.85).aspx\n        'SurfaceTablet'     => 'Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)',\n        // http://shopping1.hp.com/is-bin/INTERSHOP.enfinity/WFS/WW-USSMBPublicStore-Site/en_US/-/USD/ViewStandardCatalog-Browse?CatalogCategoryID=JfIQ7EN5lqMAAAEyDcJUDwMT\n        'HPTablet'          => 'HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10',\n        // Watch out for PadFone, see #132.\n        // http://www.asus.com/de/Tablets_Mobile/Memo_Pad_Products/\n        'AsusTablet'        => '^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\\bK00F\\b|\\bK00C\\b|\\bK00E\\b|\\bK00L\\b|TX201LA|ME176C|ME102A|\\bM80TA\\b|ME372CL|ME560CG|ME372CG|ME302KL| K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\\bME70C\\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\\bP027\\b|\\bP024\\b|\\bP00C\\b',\n        'BlackBerryTablet'  => 'PlayBook|RIM Tablet',\n        'HTCtablet'         => 'HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410',\n        'MotorolaTablet'    => 'xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617',\n        'NookTablet'        => 'Android.*Nook|NookColor|nook browser|BNRV200|BNRV200A|BNTV250|BNTV250A|BNTV400|BNTV600|LogicPD Zoom2',\n        // http://www.acer.ro/ac/ro/RO/content/drivers\n        // http://www.packardbell.co.uk/pb/en/GB/content/download (Packard Bell is part of Acer)\n        // http://us.acer.com/ac/en/US/content/group/tablets\n        // http://www.acer.de/ac/de/DE/content/models/tablets/\n        // Can conflict with Micromax and Motorola phones codes.\n        'AcerTablet'        => 'Android.*; \\b(A100|A101|A110|A200|A210|A211|A500|A501|A510|A511|A700|A701|W500|W500P|W501|W501P|W510|W511|W700|G100|G100W|B1-A71|B1-710|B1-711|A1-810|A1-811|A1-830)\\b|W3-810|\\bA3-A10\\b|\\bA3-A11\\b|\\bA3-A20\\b|\\bA3-A30|A3-A40',\n        // http://eu.computers.toshiba-europe.com/innovation/family/Tablets/1098744/banner_id/tablet_footerlink/\n        // http://us.toshiba.com/tablets/tablet-finder\n        // http://www.toshiba.co.jp/regza/tablet/\n        'ToshibaTablet'     => 'Android.*(AT100|AT105|AT200|AT205|AT270|AT275|AT300|AT305|AT1S5|AT500|AT570|AT700|AT830)|TOSHIBA.*FOLIO',\n        // http://www.nttdocomo.co.jp/english/service/developer/smart_phone/technical_info/spec/index.html\n        // http://www.lg.com/us/tablets\n        'LGTablet'          => '\\bL-06C|LG-V909|LG-V900|LG-V700|LG-V510|LG-V500|LG-V410|LG-V400|LG-VK810\\b',\n        'FujitsuTablet'     => 'Android.*\\b(F-01D|F-02F|F-05E|F-10D|M532|Q572)\\b',\n        // Prestigio Tablets http://www.prestigio.com/support\n        'PrestigioTablet'   => 'PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|PMT5887|PMT5001|PMT5002',\n        // http://support.lenovo.com/en_GB/downloads/default.page?#\n        'LenovoTablet'      => 'Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)|TB-X103F|TB-X304X|TB-X304F|TB-X304L|TB-X505F|TB-X505L|TB-X505X|TB-X605F|TB-X605L|TB-8703F|TB-8703X|TB-8703N|TB-8704N|TB-8704F|TB-8704X|TB-8704V|TB-7304F|TB-7304I|TB-7304X|Tab2A7-10F|Tab2A7-20F|TB2-X30L|YT3-X50L|YT3-X50F|YT3-X50M|YT-X705F|YT-X703F|YT-X703L|YT-X705L|YT-X705X|TB2-X30F|TB2-X30L|TB2-X30M|A2107A-F|A2107A-H|TB3-730F|TB3-730M|TB3-730X|TB-7504F|TB-7504X|TB-X704F|TB-X104F|TB3-X70F|TB-X705F|TB-8504F|TB3-X70L|TB3-710F|TB-X704L',\n        // http://www.dell.com/support/home/us/en/04/Products/tab_mob/tablets\n        'DellTablet'        => 'Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7',\n        // http://www.yarvik.com/en/matrix/tablets/\n        'YarvikTablet'      => 'Android.*\\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\\b',\n        'MedionTablet'      => 'Android.*\\bOYO\\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB',\n        'ArnovaTablet'      => '97G4|AN10G2|AN7bG3|AN7fG3|AN8G3|AN8cG3|AN7G3|AN9G3|AN7dG3|AN7dG3ST|AN7dG3ChildPad|AN10bG3|AN10bG3DT|AN9G2',\n        // http://www.intenso.de/kategorie_en.php?kategorie=33\n        // @todo: http://www.nbhkdz.com/read/b8e64202f92a2df129126bff.html - investigate\n        'IntensoTablet'     => 'INM8002KP|INM1010FP|INM805ND|Intenso Tab|TAB1004',\n        // IRU.ru Tablets http://www.iru.ru/catalog/soho/planetable/\n        'IRUTablet'         => 'M702pro',\n        'MegafonTablet'     => 'MegaFon V9|\\bZTE V9\\b|Android.*\\bMT7A\\b',\n        // http://www.e-boda.ro/tablete-pc.html\n        'EbodaTablet'       => 'E-Boda (Supreme|Impresspeed|Izzycomm|Essential)',\n        // http://www.allview.ro/produse/droseries/lista-tablete-pc/\n        'AllViewTablet'           => 'Allview.*(Viva|Alldro|City|Speed|All TV|Frenzy|Quasar|Shine|TX1|AX1|AX2)',\n        // http://wiki.archosfans.com/index.php?title=Main_Page\n        // @note Rewrite the regex format after we add more UAs.\n        'ArchosTablet'      => '\\b(101G9|80G9|A101IT)\\b|Qilive 97R|Archos5|\\bARCHOS (70|79|80|90|97|101|FAMILYPAD|)(b|c|)(G10| Cobalt| TITANIUM(HD|)| Xenon| Neon|XSK| 2| XS 2| PLATINUM| CARBON|GAMEPAD)\\b',\n        // http://www.ainol.com/plugin.php?identifier=ainol&module=product\n        'AinolTablet'       => 'NOVO7|NOVO8|NOVO10|Novo7Aurora|Novo7Basic|NOVO7PALADIN|novo9-Spark',\n        'NokiaLumiaTablet'  => 'Lumia 2520',\n        // @todo: inspect http://esupport.sony.com/US/p/select-system.pl?DIRECTOR=DRIVER\n        // Readers http://www.atsuhiro-me.net/ebook/sony-reader/sony-reader-web-browser\n        // http://www.sony.jp/support/tablet/\n        'SonyTablet'        => 'Sony.*Tablet|Xperia Tablet|Sony Tablet S|SO-03E|SGPT12|SGPT13|SGPT114|SGPT121|SGPT122|SGPT123|SGPT111|SGPT112|SGPT113|SGPT131|SGPT132|SGPT133|SGPT211|SGPT212|SGPT213|SGP311|SGP312|SGP321|EBRD1101|EBRD1102|EBRD1201|SGP351|SGP341|SGP511|SGP512|SGP521|SGP541|SGP551|SGP621|SGP641|SGP612|SOT31|SGP771|SGP611|SGP612|SGP712',\n        // http://www.support.philips.com/support/catalog/worldproducts.jsp?userLanguage=en&userCountry=cn&categoryid=3G_LTE_TABLET_SU_CN_CARE&title=3G%20tablets%20/%20LTE%20range&_dyncharset=UTF-8\n        'PhilipsTablet'     => '\\b(PI2010|PI3000|PI3100|PI3105|PI3110|PI3205|PI3210|PI3900|PI4010|PI7000|PI7100)\\b',\n        // db + http://www.cube-tablet.com/buy-products.html\n        'CubeTablet'        => 'Android.*(K8GT|U9GT|U10GT|U16GT|U17GT|U18GT|U19GT|U20GT|U23GT|U30GT)|CUBE U8GT',\n        // http://www.cobyusa.com/?p=pcat&pcat_id=3001\n        'CobyTablet'        => 'MID1042|MID1045|MID1125|MID1126|MID7012|MID7014|MID7015|MID7034|MID7035|MID7036|MID7042|MID7048|MID7127|MID8042|MID8048|MID8127|MID9042|MID9740|MID9742|MID7022|MID7010',\n        // http://www.match.net.cn/products.asp\n        'MIDTablet'         => 'M9701|M9000|M9100|M806|M1052|M806|T703|MID701|MID713|MID710|MID727|MID760|MID830|MID728|MID933|MID125|MID810|MID732|MID120|MID930|MID800|MID731|MID900|MID100|MID820|MID735|MID980|MID130|MID833|MID737|MID960|MID135|MID860|MID736|MID140|MID930|MID835|MID733|MID4X10',\n        // http://www.msi.com/support\n        // @todo Research the Windows Tablets.\n        'MSITablet' => 'MSI \\b(Primo 73K|Primo 73L|Primo 81L|Primo 77|Primo 93|Primo 75|Primo 76|Primo 73|Primo 81|Primo 91|Primo 90|Enjoy 71|Enjoy 7|Enjoy 10)\\b',\n        // @todo http://www.kyoceramobile.com/support/drivers/\n    //    'KyoceraTablet' => null,\n        // @todo http://intexuae.com/index.php/category/mobile-devices/tablets-products/\n    //    'IntextTablet' => null,\n        // http://pdadb.net/index.php?m=pdalist&list=SMiT (NoName Chinese Tablets)\n        // http://www.imp3.net/14/show.php?itemid=20454\n        'SMiTTablet'        => 'Android.*(\\bMID\\b|MID-560|MTV-T1200|MTV-PND531|MTV-P1101|MTV-PND530)',\n        // http://www.rock-chips.com/index.php?do=prod&pid=2\n        'RockChipTablet'    => 'Android.*(RK2818|RK2808A|RK2918|RK3066)|RK2738|RK2808A',\n        // http://www.fly-phone.com/devices/tablets/ ; http://www.fly-phone.com/service/\n        'FlyTablet'         => 'IQ310|Fly Vision',\n        // http://www.bqreaders.com/gb/tablets-prices-sale.html\n        'bqTablet'          => 'Android.*(bq)?.*\\b(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant|Aquaris ([E|M]10|M8))\\b|Maxwell.*Lite|Maxwell.*Plus',\n        // http://www.huaweidevice.com/worldwide/productFamily.do?method=index&directoryId=5011&treeId=3290\n        // http://www.huaweidevice.com/worldwide/downloadCenter.do?method=index&directoryId=3372&treeId=0&tb=1&type=software (including legacy tablets)\n        'HuaweiTablet'      => 'MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim|M2-A01L|BAH-L09|BAH-W09|AGS-L09|CMR-AL19',\n        // Nec or Medias Tab\n        'NecTablet'         => '\\bN-06D|\\bN-08D',\n        // Pantech Tablets: http://www.pantechusa.com/phones/\n        'PantechTablet'     => 'Pantech.*P4100',\n        // Broncho Tablets: http://www.broncho.cn/ (hard to find)\n        'BronchoTablet'     => 'Broncho.*(N701|N708|N802|a710)',\n        // http://versusuk.com/support.html\n        'VersusTablet'      => 'TOUCHPAD.*[78910]|\\bTOUCHTAB\\b',\n        // http://www.zync.in/index.php/our-products/tablet-phablets\n        'ZyncTablet'        => 'z1000|Z99 2G|z930|z990|z909|Z919|z900', // Removed \"z999\" because of https://github.com/serbanghita/Mobile-Detect/issues/717\n        // http://www.positivoinformatica.com.br/www/pessoal/tablet-ypy/\n        'PositivoTablet'    => 'TB07STA|TB10STA|TB07FTA|TB10FTA',\n        // https://www.nabitablet.com/\n        'NabiTablet'        => 'Android.*\\bNabi',\n        'KoboTablet'        => 'Kobo Touch|\\bK080\\b|\\bVox\\b Build|\\bArc\\b Build',\n        // French Danew Tablets http://www.danew.com/produits-tablette.php\n        'DanewTablet'       => 'DSlide.*\\b(700|701R|702|703R|704|802|970|971|972|973|974|1010|1012)\\b',\n        // Texet Tablets and Readers http://www.texet.ru/tablet/\n        'TexetTablet'       => 'NaviPad|TB-772A|TM-7045|TM-7055|TM-9750|TM-7016|TM-7024|TM-7026|TM-7041|TM-7043|TM-7047|TM-8041|TM-9741|TM-9747|TM-9748|TM-9751|TM-7022|TM-7021|TM-7020|TM-7011|TM-7010|TM-7023|TM-7025|TM-7037W|TM-7038W|TM-7027W|TM-9720|TM-9725|TM-9737W|TM-1020|TM-9738W|TM-9740|TM-9743W|TB-807A|TB-771A|TB-727A|TB-725A|TB-719A|TB-823A|TB-805A|TB-723A|TB-715A|TB-707A|TB-705A|TB-709A|TB-711A|TB-890HD|TB-880HD|TB-790HD|TB-780HD|TB-770HD|TB-721HD|TB-710HD|TB-434HD|TB-860HD|TB-840HD|TB-760HD|TB-750HD|TB-740HD|TB-730HD|TB-722HD|TB-720HD|TB-700HD|TB-500HD|TB-470HD|TB-431HD|TB-430HD|TB-506|TB-504|TB-446|TB-436|TB-416|TB-146SE|TB-126SE',\n        // Avoid detecting 'PLAYSTATION 3' as mobile.\n        'PlaystationTablet' => 'Playstation.*(Portable|Vita)',\n        // http://www.trekstor.de/surftabs.html\n        'TrekstorTablet'    => 'ST10416-1|VT10416-1|ST70408-1|ST702xx-1|ST702xx-2|ST80208|ST97216|ST70104-2|VT10416-2|ST10216-2A|SurfTab',\n        // http://www.pyleaudio.com/Products.aspx?%2fproducts%2fPersonal-Electronics%2fTablets\n        'PyleAudioTablet'   => '\\b(PTBL10CEU|PTBL10C|PTBL72BC|PTBL72BCEU|PTBL7CEU|PTBL7C|PTBL92BC|PTBL92BCEU|PTBL9CEU|PTBL9CUK|PTBL9C)\\b',\n        // http://www.advandigital.com/index.php?link=content-product&jns=JP001\n        // because of the short codenames we have to include whitespaces to reduce the possible conflicts.\n        'AdvanTablet'       => 'Android.* \\b(E3A|T3X|T5C|T5B|T3E|T3C|T3B|T1J|T1F|T2A|T1H|T1i|E1C|T1-E|T5-A|T4|E1-B|T2Ci|T1-B|T1-D|O1-A|E1-A|T1-A|T3A|T4i)\\b ',\n        // http://www.danytech.com/category/tablet-pc\n        'DanyTechTablet' => 'Genius Tab G3|Genius Tab S2|Genius Tab Q3|Genius Tab G4|Genius Tab Q4|Genius Tab G-II|Genius TAB GII|Genius TAB GIII|Genius Tab S1',\n        // http://www.galapad.net/product.html ; https://github.com/serbanghita/Mobile-Detect/issues/761\n        'GalapadTablet'     => 'Android [0-9.]+; [a-z-]+; \\bG1\\b',\n        // http://www.micromaxinfo.com/tablet/funbook\n        'MicromaxTablet'    => 'Funbook|Micromax.*\\b(P250|P560|P360|P362|P600|P300|P350|P500|P275)\\b',\n        // http://www.karbonnmobiles.com/products_tablet.php\n        'KarbonnTablet'     => 'Android.*\\b(A39|A37|A34|ST8|ST10|ST7|Smart Tab3|Smart Tab2)\\b',\n        // http://www.myallfine.com/Products.asp\n        'AllFineTablet'     => 'Fine7 Genius|Fine7 Shine|Fine7 Air|Fine8 Style|Fine9 More|Fine10 Joy|Fine11 Wide',\n        // http://www.proscanvideo.com/products-search.asp?itemClass=TABLET&itemnmbr=\n        'PROSCANTablet'     => '\\b(PEM63|PLT1023G|PLT1041|PLT1044|PLT1044G|PLT1091|PLT4311|PLT4311PL|PLT4315|PLT7030|PLT7033|PLT7033D|PLT7035|PLT7035D|PLT7044K|PLT7045K|PLT7045KB|PLT7071KG|PLT7072|PLT7223G|PLT7225G|PLT7777G|PLT7810K|PLT7849G|PLT7851G|PLT7852G|PLT8015|PLT8031|PLT8034|PLT8036|PLT8080K|PLT8082|PLT8088|PLT8223G|PLT8234G|PLT8235G|PLT8816K|PLT9011|PLT9045K|PLT9233G|PLT9735|PLT9760G|PLT9770G)\\b',\n        // http://www.yonesnav.com/products/products.php\n        'YONESTablet' => 'BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026',\n        // http://www.cjshowroom.com/eproducts.aspx?classcode=004001001\n        // China manufacturer makes tablets for different small brands (eg. http://www.zeepad.net/index.html)\n        'ChangJiaTablet'    => 'TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|TPC10111|TPC10203|TPC10205|TPC10503',\n        // http://www.gloryunion.cn/products.asp\n        // http://www.allwinnertech.com/en/apply/mobile.html\n        // http://www.ptcl.com.pk/pd_content.php?pd_id=284 (EVOTAB)\n        // @todo: Softwiner tablets?\n        // aka. Cute or Cool tablets. Not sure yet, must research to avoid collisions.\n        'GUTablet'          => 'TX-A1301|TX-M9002|Q702|kf026', // A12R|D75A|D77|D79|R83|A95|A106C|R15|A75|A76|D71|D72|R71|R73|R77|D82|R85|D92|A97|D92|R91|A10F|A77F|W71F|A78F|W78F|W81F|A97F|W91F|W97F|R16G|C72|C73E|K72|K73|R96G\n        // http://www.pointofview-online.com/showroom.php?shop_mode=product_listing&category_id=118\n        'PointOfViewTablet' => 'TAB-P506|TAB-navi-7-3G-M|TAB-P517|TAB-P-527|TAB-P701|TAB-P703|TAB-P721|TAB-P731N|TAB-P741|TAB-P825|TAB-P905|TAB-P925|TAB-PR945|TAB-PL1015|TAB-P1025|TAB-PI1045|TAB-P1325|TAB-PROTAB[0-9]+|TAB-PROTAB25|TAB-PROTAB26|TAB-PROTAB27|TAB-PROTAB26XL|TAB-PROTAB2-IPS9|TAB-PROTAB30-IPS9|TAB-PROTAB25XXL|TAB-PROTAB26-IPS10|TAB-PROTAB30-IPS10',\n        // http://www.overmax.pl/pl/katalog-produktow,p8/tablety,c14/\n        // @todo: add more tests.\n        'OvermaxTablet'     => 'OV-(SteelCore|NewBase|Basecore|Baseone|Exellen|Quattor|EduTab|Solution|ACTION|BasicTab|TeddyTab|MagicTab|Stream|TB-08|TB-09)|Qualcore 1027',\n        // http://hclmetablet.com/India/index.php\n        'HCLTablet'         => 'HCL.*Tablet|Connect-3G-2.0|Connect-2G-2.0|ME Tablet U1|ME Tablet U2|ME Tablet G1|ME Tablet X1|ME Tablet Y2|ME Tablet Sync',\n        // http://www.edigital.hu/Tablet_es_e-book_olvaso/Tablet-c18385.html\n        'DPSTablet'         => 'DPS Dream 9|DPS Dual 7',\n        // http://www.visture.com/index.asp\n        'VistureTablet'     => 'V97 HD|i75 3G|Visture V4( HD)?|Visture V5( HD)?|Visture V10',\n        // http://www.mijncresta.nl/tablet\n        'CrestaTablet'     => 'CTP(-)?810|CTP(-)?818|CTP(-)?828|CTP(-)?838|CTP(-)?888|CTP(-)?978|CTP(-)?980|CTP(-)?987|CTP(-)?988|CTP(-)?989',\n        // MediaTek - http://www.mediatek.com/_en/01_products/02_proSys.php?cata_sn=1&cata1_sn=1&cata2_sn=309\n        'MediatekTablet' => '\\bMT8125|MT8389|MT8135|MT8377\\b',\n        // Concorde tab\n        'ConcordeTablet' => 'Concorde([ ]+)?Tab|ConCorde ReadMan',\n        // GoClever Tablets - http://www.goclever.com/uk/products,c1/tablet,c5/\n        'GoCleverTablet' => 'GOCLEVER TAB|A7GOCLEVER|M1042|M7841|M742|R1042BK|R1041|TAB A975|TAB A7842|TAB A741|TAB A741L|TAB M723G|TAB M721|TAB A1021|TAB I921|TAB R721|TAB I720|TAB T76|TAB R70|TAB R76.2|TAB R106|TAB R83.2|TAB M813G|TAB I721|GCTA722|TAB I70|TAB I71|TAB S73|TAB R73|TAB R74|TAB R93|TAB R75|TAB R76.1|TAB A73|TAB A93|TAB A93.2|TAB T72|TAB R83|TAB R974|TAB R973|TAB A101|TAB A103|TAB A104|TAB A104.2|R105BK|M713G|A972BK|TAB A971|TAB R974.2|TAB R104|TAB R83.3|TAB A1042',\n        // Modecom Tablets - http://www.modecom.eu/tablets/portal/\n        'ModecomTablet' => 'FreeTAB 9000|FreeTAB 7.4|FreeTAB 7004|FreeTAB 7800|FreeTAB 2096|FreeTAB 7.5|FreeTAB 1014|FreeTAB 1001 |FreeTAB 8001|FreeTAB 9706|FreeTAB 9702|FreeTAB 7003|FreeTAB 7002|FreeTAB 1002|FreeTAB 7801|FreeTAB 1331|FreeTAB 1004|FreeTAB 8002|FreeTAB 8014|FreeTAB 9704|FreeTAB 1003',\n        // Vonino Tablets\n        'VoninoTablet'  => '\\b(Argus[ _]?S|Diamond[ _]?79HD|Emerald[ _]?78E|Luna[ _]?70C|Onyx[ _]?S|Onyx[ _]?Z|Orin[ _]?HD|Orin[ _]?S|Otis[ _]?S|SpeedStar[ _]?S|Magnet[ _]?M9|Primus[ _]?94[ _]?3G|Primus[ _]?94HD|Primus[ _]?QS|Android.*\\bQ8\\b|Sirius[ _]?EVO[ _]?QS|Sirius[ _]?QS|Spirit[ _]?S)\\b',\n        // ECS Tablets - http://www.ecs.com.tw/ECSWebSite/Product/Product_Tablet_List.aspx?CategoryID=14&MenuID=107&childid=M_107&LanID=0\n        'ECSTablet'     => 'V07OT2|TM105A|S10OT1|TR10CS1',\n        // Storex Tablets - http://storex.fr/espace_client/support.html\n        // @note: no need to add all the tablet codes since they are guided by the first regex.\n        'StorexTablet'  => 'eZee[_\\']?(Tab|Go)[0-9]+|TabLC7|Looney Tunes Tab',\n        // Generic Vodafone tablets.\n        'VodafoneTablet' => 'SmartTab([ ]+)?[0-9]+|SmartTabII10|SmartTabII7|VF-1497|VFD 1400',\n        // French tablets - Essentiel B http://www.boulanger.fr/tablette_tactile_e-book/tablette_tactile_essentiel_b/cl_68908.htm?multiChoiceToDelete=brand&mc_brand=essentielb\n        // Aka: http://www.essentielb.fr/\n        'EssentielBTablet' => 'Smart[ \\']?TAB[ ]+?[0-9]+|Family[ \\']?TAB2',\n        // Ross & Moor - http://ross-moor.ru/\n        'RossMoorTablet' => 'RM-790|RM-997|RMD-878G|RMD-974R|RMT-705A|RMT-701|RME-601|RMT-501|RMT-711',\n        // i-mobile http://product.i-mobilephone.com/Mobile_Device\n        'iMobileTablet'        => 'i-mobile i-note',\n        // http://www.tolino.de/de/vergleichen/\n        'TolinoTablet'  => 'tolino tab [0-9.]+|tolino shine',\n        // AudioSonic - a Kmart brand\n        // http://www.kmart.com.au/webapp/wcs/stores/servlet/Search?langId=-1&storeId=10701&catalogId=10001&categoryId=193001&pageSize=72&currentPage=1&searchCategory=193001%2b4294965664&sortBy=p_MaxPrice%7c1\n        'AudioSonicTablet' => '\\bC-22Q|T7-QC|T-17B|T-17P\\b',\n        // AMPE Tablets - http://www.ampe.com.my/product-category/tablets/\n        // @todo: add them gradually to avoid conflicts.\n        'AMPETablet' => 'Android.* A78 ',\n        // Skk Mobile - http://skkmobile.com.ph/product_tablets.php\n        'SkkTablet' => 'Android.* (SKYPAD|PHOENIX|CYCLOPS)',\n        // Tecno Mobile (only tablet) - http://www.tecno-mobile.com/index.php/product?filterby=smart&list_order=all&page=1\n        'TecnoTablet' => 'TECNO P9|TECNO DP8D',\n        // JXD (consoles & tablets) - http://jxd.hk/products.asp?selectclassid=009008&clsid=3\n        'JXDTablet' => 'Android.* \\b(F3000|A3300|JXD5000|JXD3000|JXD2000|JXD300B|JXD300|S5800|S7800|S602b|S5110b|S7300|S5300|S602|S603|S5100|S5110|S601|S7100a|P3000F|P3000s|P101|P200s|P1000m|P200m|P9100|P1000s|S6600b|S908|P1000|P300|S18|S6600|S9100)\\b',\n        // i-Joy tablets - http://www.i-joy.es/en/cat/products/tablets/\n        'iJoyTablet' => 'Tablet (Spirit 7|Essentia|Galatea|Fusion|Onix 7|Landa|Titan|Scooby|Deox|Stella|Themis|Argon|Unique 7|Sygnus|Hexen|Finity 7|Cream|Cream X2|Jade|Neon 7|Neron 7|Kandy|Scape|Saphyr 7|Rebel|Biox|Rebel|Rebel 8GB|Myst|Draco 7|Myst|Tab7-004|Myst|Tadeo Jones|Tablet Boing|Arrow|Draco Dual Cam|Aurix|Mint|Amity|Revolution|Finity 9|Neon 9|T9w|Amity 4GB Dual Cam|Stone 4GB|Stone 8GB|Andromeda|Silken|X2|Andromeda II|Halley|Flame|Saphyr 9,7|Touch 8|Planet|Triton|Unique 10|Hexen 10|Memphis 4GB|Memphis 8GB|Onix 10)',\n        // http://www.intracon.eu/tablet\n        'FX2Tablet' => 'FX2 PAD7|FX2 PAD10',\n        // http://www.xoro.de/produkte/\n        // @note: Might be the same brand with 'Simply tablets'\n        'XoroTablet'        => 'KidsPAD 701|PAD[ ]?712|PAD[ ]?714|PAD[ ]?716|PAD[ ]?717|PAD[ ]?718|PAD[ ]?720|PAD[ ]?721|PAD[ ]?722|PAD[ ]?790|PAD[ ]?792|PAD[ ]?900|PAD[ ]?9715D|PAD[ ]?9716DR|PAD[ ]?9718DR|PAD[ ]?9719QR|PAD[ ]?9720QR|TelePAD1030|Telepad1032|TelePAD730|TelePAD731|TelePAD732|TelePAD735Q|TelePAD830|TelePAD9730|TelePAD795|MegaPAD 1331|MegaPAD 1851|MegaPAD 2151',\n        // http://www1.viewsonic.com/products/computing/tablets/\n        'ViewsonicTablet'   => 'ViewPad 10pi|ViewPad 10e|ViewPad 10s|ViewPad E72|ViewPad7|ViewPad E100|ViewPad 7e|ViewSonic VB733|VB100a',\n        // https://www.verizonwireless.com/tablets/verizon/\n        'VerizonTablet' => 'QTAQZ3|QTAIR7|QTAQTZ3|QTASUN1|QTASUN2|QTAXIA1',\n        // http://www.odys.de/web/internet-tablet_en.html\n        'OdysTablet'        => 'LOOX|XENO10|ODYS[ -](Space|EVO|Xpress|NOON)|\\bXELIO\\b|Xelio10Pro|XELIO7PHONETAB|XELIO10EXTREME|XELIOPT2|NEO_QUAD10',\n        // http://www.captiva-power.de/products.html#tablets-en\n        'CaptivaTablet'     => 'CAPTIVA PAD',\n        // IconBIT - http://www.iconbit.com/products/tablets/\n        'IconbitTablet' => 'NetTAB|NT-3702|NT-3702S|NT-3702S|NT-3603P|NT-3603P|NT-0704S|NT-0704S|NT-3805C|NT-3805C|NT-0806C|NT-0806C|NT-0909T|NT-0909T|NT-0907S|NT-0907S|NT-0902S|NT-0902S',\n        // http://www.teclast.com/topic.php?channelID=70&topicID=140&pid=63\n        'TeclastTablet' => 'T98 4G|\\bP80\\b|\\bX90HD\\b|X98 Air|X98 Air 3G|\\bX89\\b|P80 3G|\\bX80h\\b|P98 Air|\\bX89HD\\b|P98 3G|\\bP90HD\\b|P89 3G|X98 3G|\\bP70h\\b|P79HD 3G|G18d 3G|\\bP79HD\\b|\\bP89s\\b|\\bA88\\b|\\bP10HD\\b|\\bP19HD\\b|G18 3G|\\bP78HD\\b|\\bA78\\b|\\bP75\\b|G17s 3G|G17h 3G|\\bP85t\\b|\\bP90\\b|\\bP11\\b|\\bP98t\\b|\\bP98HD\\b|\\bG18d\\b|\\bP85s\\b|\\bP11HD\\b|\\bP88s\\b|\\bA80HD\\b|\\bA80se\\b|\\bA10h\\b|\\bP89\\b|\\bP78s\\b|\\bG18\\b|\\bP85\\b|\\bA70h\\b|\\bA70\\b|\\bG17\\b|\\bP18\\b|\\bA80s\\b|\\bA11s\\b|\\bP88HD\\b|\\bA80h\\b|\\bP76s\\b|\\bP76h\\b|\\bP98\\b|\\bA10HD\\b|\\bP78\\b|\\bP88\\b|\\bA11\\b|\\bA10t\\b|\\bP76a\\b|\\bP76t\\b|\\bP76e\\b|\\bP85HD\\b|\\bP85a\\b|\\bP86\\b|\\bP75HD\\b|\\bP76v\\b|\\bA12\\b|\\bP75a\\b|\\bA15\\b|\\bP76Ti\\b|\\bP81HD\\b|\\bA10\\b|\\bT760VE\\b|\\bT720HD\\b|\\bP76\\b|\\bP73\\b|\\bP71\\b|\\bP72\\b|\\bT720SE\\b|\\bC520Ti\\b|\\bT760\\b|\\bT720VE\\b|T720-3GE|T720-WiFi',\n        // Onda - http://www.onda-tablet.com/buy-android-onda.html?dir=desc&limit=all&order=price\n        'OndaTablet' => '\\b(V975i|Vi30|VX530|V701|Vi60|V701s|Vi50|V801s|V719|Vx610w|VX610W|V819i|Vi10|VX580W|Vi10|V711s|V813|V811|V820w|V820|Vi20|V711|VI30W|V712|V891w|V972|V819w|V820w|Vi60|V820w|V711|V813s|V801|V819|V975s|V801|V819|V819|V818|V811|V712|V975m|V101w|V961w|V812|V818|V971|V971s|V919|V989|V116w|V102w|V973|Vi40)\\b[\\s]+|V10 \\b4G\\b',\n        'JaytechTablet'     => 'TPC-PA762',\n        'BlaupunktTablet'   => 'Endeavour 800NG|Endeavour 1010',\n        // http://www.digma.ru/support/download/\n        // @todo: Ebooks also (if requested)\n        'DigmaTablet' => '\\b(iDx10|iDx9|iDx8|iDx7|iDxD7|iDxD8|iDsQ8|iDsQ7|iDsQ8|iDsD10|iDnD7|3TS804H|iDsQ11|iDj7|iDs10)\\b',\n        // http://www.evolioshop.com/ro/tablete-pc.html\n        // http://www.evolio.ro/support/downloads_static.html?cat=2\n        // @todo: Research some more\n        'EvolioTablet' => 'ARIA_Mini_wifi|Aria[ _]Mini|Evolio X10|Evolio X7|Evolio X8|\\bEvotab\\b|\\bNeura\\b',\n        // @todo http://www.lavamobiles.com/tablets-data-cards\n        'LavaTablet' => 'QPAD E704|\\bIvoryS\\b|E-TAB IVORY|\\bE-TAB\\b',\n        // http://www.breezetablet.com/\n        'AocTablet' => 'MW0811|MW0812|MW0922|MTK8382|MW1031|MW0831|MW0821|MW0931|MW0712',\n        // http://www.mpmaneurope.com/en/products/internet-tablets-14/android-tablets-14/\n        'MpmanTablet' => 'MP11 OCTA|MP10 OCTA|MPQC1114|MPQC1004|MPQC994|MPQC974|MPQC973|MPQC804|MPQC784|MPQC780|\\bMPG7\\b|MPDCG75|MPDCG71|MPDC1006|MP101DC|MPDC9000|MPDC905|MPDC706HD|MPDC706|MPDC705|MPDC110|MPDC100|MPDC99|MPDC97|MPDC88|MPDC8|MPDC77|MP709|MID701|MID711|MID170|MPDC703|MPQC1010',\n        // https://www.celkonmobiles.com/?_a=categoryphones&sid=2\n        'CelkonTablet' => 'CT695|CT888|CT[\\s]?910|CT7 Tab|CT9 Tab|CT3 Tab|CT2 Tab|CT1 Tab|C820|C720|\\bCT-1\\b',\n        // http://www.wolderelectronics.com/productos/manuales-y-guias-rapidas/categoria-2-miTab\n        'WolderTablet' => 'miTab \\b(DIAMOND|SPACE|BROOKLYN|NEO|FLY|MANHATTAN|FUNK|EVOLUTION|SKY|GOCAR|IRON|GENIUS|POP|MINT|EPSILON|BROADWAY|JUMP|HOP|LEGEND|NEW AGE|LINE|ADVANCE|FEEL|FOLLOW|LIKE|LINK|LIVE|THINK|FREEDOM|CHICAGO|CLEVELAND|BALTIMORE-GH|IOWA|BOSTON|SEATTLE|PHOENIX|DALLAS|IN 101|MasterChef)\\b',\n        'MediacomTablet' => 'M-MPI10C3G|M-SP10EG|M-SP10EGP|M-SP10HXAH|M-SP7HXAH|M-SP10HXBH|M-SP8HXAH|M-SP8MXA',\n        // http://www.mi.com/en\n        'MiTablet' => '\\bMI PAD\\b|\\bHM NOTE 1W\\b',\n        // http://www.nbru.cn/index.html\n        'NibiruTablet' => 'Nibiru M1|Nibiru Jupiter One',\n        // http://navroad.com/products/produkty/tablety/\n        // http://navroad.com/products/produkty/tablety/\n        'NexoTablet' => 'NEXO NOVA|NEXO 10|NEXO AVIO|NEXO FREE|NEXO GO|NEXO EVO|NEXO 3G|NEXO SMART|NEXO KIDDO|NEXO MOBI',\n        // http://leader-online.com/new_site/product-category/tablets/\n        // http://www.leader-online.net.au/List/Tablet\n        'LeaderTablet' => 'TBLT10Q|TBLT10I|TBL-10WDKB|TBL-10WDKBO2013|TBL-W230V2|TBL-W450|TBL-W500|SV572|TBLT7I|TBA-AC7-8G|TBLT79|TBL-8W16|TBL-10W32|TBL-10WKB|TBL-W100',\n        // http://www.datawind.com/ubislate/\n        'UbislateTablet' => 'UbiSlate[\\s]?7C',\n        // http://www.pocketbook-int.com/ru/support\n        'PocketBookTablet' => 'Pocketbook',\n        // http://www.kocaso.com/product_tablet.html\n        'KocasoTablet' => '\\b(TB-1207)\\b',\n        // http://global.hisense.com/product/asia/tablet/Sero7/201412/t20141215_91832.htm\n        'HisenseTablet' => '\\b(F5281|E2371)\\b',\n        // http://www.tesco.com/direct/hudl/\n        'Hudl'              => 'Hudl HT7S3|Hudl 2',\n        // http://www.telstra.com.au/home-phone/thub-2/\n        'TelstraTablet'     => 'T-Hub2',\n        'GenericTablet'     => 'Android.*\\b97D\\b|Tablet(?!.*PC)|BNTV250A|MID-WCDMA|LogicPD Zoom2|\\bA7EB\\b|CatNova8|A1_07|CT704|CT1002|\\bM721\\b|rk30sdk|\\bEVOTAB\\b|M758A|ET904|ALUMIUM10|Smartfren Tab|Endeavour 1010|Tablet-PC-4|Tagi Tab|\\bM6pro\\b|CT1020W|arc 10HD|\\bTP750\\b|\\bQTAQZ3\\b|WVT101|TM1088|KT107'\n    );\n\n    /**\n     * List of mobile Operating Systems.\n     *\n     * @var array\n     */\n    protected static $operatingSystems = array(\n        'AndroidOS'         => 'Android',\n        'BlackBerryOS'      => 'blackberry|\\bBB10\\b|rim tablet os',\n        'PalmOS'            => 'PalmOS|avantgo|blazer|elaine|hiptop|palm|plucker|xiino',\n        'SymbianOS'         => 'Symbian|SymbOS|Series60|Series40|SYB-[0-9]+|\\bS60\\b',\n        // @reference: http://en.wikipedia.org/wiki/Windows_Mobile\n        'WindowsMobileOS'   => 'Windows CE.*(PPC|Smartphone|Mobile|[0-9]{3}x[0-9]{3})|Windows Mobile|Windows Phone [0-9.]+|WCE;',\n        // @reference: http://en.wikipedia.org/wiki/Windows_Phone\n        // http://wifeng.cn/?r=blog&a=view&id=106\n        // http://nicksnettravels.builttoroam.com/post/2011/01/10/Bogus-Windows-Phone-7-User-Agent-String.aspx\n        // http://msdn.microsoft.com/library/ms537503.aspx\n        // https://msdn.microsoft.com/en-us/library/hh869301(v=vs.85).aspx\n        'WindowsPhoneOS'   => 'Windows Phone 10.0|Windows Phone 8.1|Windows Phone 8.0|Windows Phone OS|XBLWP7|ZuneWP7|Windows NT 6.[23]; ARM;',\n        'iOS'               => '\\biPhone.*Mobile|\\biPod|\\biPad|AppleCoreMedia',\n        // https://en.wikipedia.org/wiki/IPadOS\n        'iPadOS' => 'CPU OS 13',\n        // @reference https://en.m.wikipedia.org/wiki/Sailfish_OS\n        // https://sailfishos.org/\n        'SailfishOS'        => 'Sailfish',\n        // http://en.wikipedia.org/wiki/MeeGo\n        // @todo: research MeeGo in UAs\n        'MeeGoOS'           => 'MeeGo',\n        // http://en.wikipedia.org/wiki/Maemo\n        // @todo: research Maemo in UAs\n        'MaemoOS'           => 'Maemo',\n        'JavaOS'            => 'J2ME/|\\bMIDP\\b|\\bCLDC\\b', // '|Java/' produces bug #135\n        'webOS'             => 'webOS|hpwOS',\n        'badaOS'            => '\\bBada\\b',\n        'BREWOS'            => 'BREW',\n    );\n\n    /**\n     * List of mobile User Agents.\n     *\n     * IMPORTANT: This is a list of only mobile browsers.\n     * Mobile Detect 2.x supports only mobile browsers,\n     * it was never designed to detect all browsers.\n     * The change will come in 2017 in the 3.x release for PHP7.\n     *\n     * @var array\n     */\n    protected static $browsers = array(\n        //'Vivaldi'         => 'Vivaldi',\n        // @reference: https://developers.google.com/chrome/mobile/docs/user-agent\n        'Chrome'          => '\\bCrMo\\b|CriOS|Android.*Chrome/[.0-9]* (Mobile)?',\n        'Dolfin'          => '\\bDolfin\\b',\n        'Opera'           => 'Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR/[0-9.]+$|Coast/[0-9.]+',\n        'Skyfire'         => 'Skyfire',\n        // Added \"Edge on iOS\" https://github.com/serbanghita/Mobile-Detect/issues/764\n        'Edge'             => '\\bEdgiOS\\b|Mobile Safari/[.0-9]* Edge',\n        'IE'              => 'IEMobile|MSIEMobile', // |Trident/[.0-9]+\n        'Firefox'         => 'fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|FxiOS',\n        'Bolt'            => 'bolt',\n        'TeaShark'        => 'teashark',\n        'Blazer'          => 'Blazer',\n        // @reference: http://developer.apple.com/library/safari/#documentation/AppleApplications/Reference/SafariWebContent/OptimizingforSafarioniPhone/OptimizingforSafarioniPhone.html#//apple_ref/doc/uid/TP40006517-SW3\n        // Excluded \"Edge on iOS\" https://github.com/serbanghita/Mobile-Detect/issues/764\n        'Safari'          => 'Version((?!\\bEdgiOS\\b).)*Mobile.*Safari|Safari.*Mobile|MobileSafari',\n        // http://en.wikipedia.org/wiki/Midori_(web_browser)\n        //'Midori'          => 'midori',\n        //'Tizen'           => 'Tizen',\n        'WeChat'          => '\\bMicroMessenger\\b',\n        'UCBrowser'       => 'UC.*Browser|UCWEB',\n        'baiduboxapp'     => 'baiduboxapp',\n        'baidubrowser'    => 'baidubrowser',\n        // https://github.com/serbanghita/Mobile-Detect/issues/7\n        'DiigoBrowser'    => 'DiigoBrowser',\n        // http://www.puffinbrowser.com/index.php\n        // https://github.com/serbanghita/Mobile-Detect/issues/752\n        // 'Puffin'            => 'Puffin',\n        // http://mercury-browser.com/index.html\n        'Mercury'          => '\\bMercury\\b',\n        // http://en.wikipedia.org/wiki/Obigo_Browser\n        'ObigoBrowser' => 'Obigo',\n        // http://en.wikipedia.org/wiki/NetFront\n        'NetFront' => 'NF-Browser',\n        // @reference: http://en.wikipedia.org/wiki/Minimo\n        // http://en.wikipedia.org/wiki/Vision_Mobile_Browser\n        'GenericBrowser'  => 'NokiaBrowser|OviBrowser|OneBrowser|TwonkyBeamBrowser|SEMC.*Browser|FlyFlow|Minimo|NetFront|Novarra-Vision|MQQBrowser|MicroMessenger',\n        // @reference: https://en.wikipedia.org/wiki/Pale_Moon_(web_browser)\n        'PaleMoon'        => 'Android.*PaleMoon|Mobile.*PaleMoon',\n    );\n\n    /**\n     * Utilities.\n     *\n     * @var array\n     */\n    protected static $utilities = array(\n        // Experimental. When a mobile device wants to switch to 'Desktop Mode'.\n        // http://scottcate.com/technology/windows-phone-8-ie10-desktop-or-mobile/\n        // https://github.com/serbanghita/Mobile-Detect/issues/57#issuecomment-15024011\n        // https://developers.facebook.com/docs/sharing/webmasters/crawler/\n        'Bot'         => 'Googlebot|facebookexternalhit|Google-AMPHTML|s~amp-validator|AdsBot-Google|Google Keyword Suggestion|Facebot|YandexBot|YandexMobileBot|bingbot|ia_archiver|AhrefsBot|Ezooms|GSLFbot|WBSearchBot|Twitterbot|TweetmemeBot|Twikle|PaperLiBot|Wotbox|UnwindFetchor|Exabot|MJ12bot|YandexImages|TurnitinBot|Pingdom|contentkingapp|AspiegelBot',\n        'MobileBot'   => 'Googlebot-Mobile|AdsBot-Google-Mobile|YahooSeeker/M1A1-R2D2',\n        'DesktopMode' => 'WPDesktop',\n        'TV'          => 'SonyDTV|HbbTV', // experimental\n        'WebKit'      => '(webkit)[ /]([\\w.]+)',\n        // @todo: Include JXD consoles.\n        'Console'     => '\\b(Nintendo|Nintendo WiiU|Nintendo 3DS|Nintendo Switch|PLAYSTATION|Xbox)\\b',\n        'Watch'       => 'SM-V700',\n    );\n\n    /**\n     * All possible HTTP headers that represent the\n     * User-Agent string.\n     *\n     * @var array\n     */\n    protected static $uaHttpHeaders = array(\n        // The default User-Agent string.\n        'HTTP_USER_AGENT',\n        // Header can occur on devices using Opera Mini.\n        'HTTP_X_OPERAMINI_PHONE_UA',\n        // Vodafone specific header: http://www.seoprinciple.com/mobile-web-community-still-angry-at-vodafone/24/\n        'HTTP_X_DEVICE_USER_AGENT',\n        'HTTP_X_ORIGINAL_USER_AGENT',\n        'HTTP_X_SKYFIRE_PHONE',\n        'HTTP_X_BOLT_PHONE_UA',\n        'HTTP_DEVICE_STOCK_UA',\n        'HTTP_X_UCBROWSER_DEVICE_UA'\n    );\n\n    /**\n     * The individual segments that could exist in a User-Agent string. VER refers to the regular\n     * expression defined in the constant self::VER.\n     *\n     * @var array\n     */\n    protected static $properties = array(\n\n        // Build\n        'Mobile'        => 'Mobile/[VER]',\n        'Build'         => 'Build/[VER]',\n        'Version'       => 'Version/[VER]',\n        'VendorID'      => 'VendorID/[VER]',\n\n        // Devices\n        'iPad'          => 'iPad.*CPU[a-z ]+[VER]',\n        'iPhone'        => 'iPhone.*CPU[a-z ]+[VER]',\n        'iPod'          => 'iPod.*CPU[a-z ]+[VER]',\n        //'BlackBerry'    => array('BlackBerry[VER]', 'BlackBerry [VER];'),\n        'Kindle'        => 'Kindle/[VER]',\n\n        // Browser\n        'Chrome'        => array('Chrome/[VER]', 'CriOS/[VER]', 'CrMo/[VER]'),\n        'Coast'         => array('Coast/[VER]'),\n        'Dolfin'        => 'Dolfin/[VER]',\n        // @reference: https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/User-Agent/Firefox\n        'Firefox'       => array('Firefox/[VER]', 'FxiOS/[VER]'),\n        'Fennec'        => 'Fennec/[VER]',\n        // http://msdn.microsoft.com/en-us/library/ms537503(v=vs.85).aspx\n        // https://msdn.microsoft.com/en-us/library/ie/hh869301(v=vs.85).aspx\n        'Edge' => 'Edge/[VER]',\n        'IE'      => array('IEMobile/[VER];', 'IEMobile [VER]', 'MSIE [VER];', 'Trident/[0-9.]+;.*rv:[VER]'),\n        // http://en.wikipedia.org/wiki/NetFront\n        'NetFront'      => 'NetFront/[VER]',\n        'NokiaBrowser'  => 'NokiaBrowser/[VER]',\n        'Opera'         => array( ' OPR/[VER]', 'Opera Mini/[VER]', 'Version/[VER]' ),\n        'Opera Mini'    => 'Opera Mini/[VER]',\n        'Opera Mobi'    => 'Version/[VER]',\n        'UCBrowser'    => array( 'UCWEB[VER]', 'UC.*Browser/[VER]' ),\n        'MQQBrowser'    => 'MQQBrowser/[VER]',\n        'MicroMessenger' => 'MicroMessenger/[VER]',\n        'baiduboxapp'   => 'baiduboxapp/[VER]',\n        'baidubrowser'  => 'baidubrowser/[VER]',\n        'SamsungBrowser' => 'SamsungBrowser/[VER]',\n        'Iron'          => 'Iron/[VER]',\n        // @note: Safari 7534.48.3 is actually Version 5.1.\n        // @note: On BlackBerry the Version is overwriten by the OS.\n        'Safari'        => array( 'Version/[VER]', 'Safari/[VER]' ),\n        'Skyfire'       => 'Skyfire/[VER]',\n        'Tizen'         => 'Tizen/[VER]',\n        'Webkit'        => 'webkit[ /][VER]',\n        'PaleMoon'         => 'PaleMoon/[VER]',\n        'SailfishBrowser'  => 'SailfishBrowser/[VER]',\n\n        // Engine\n        'Gecko'         => 'Gecko/[VER]',\n        'Trident'       => 'Trident/[VER]',\n        'Presto'        => 'Presto/[VER]',\n        'Goanna'           => 'Goanna/[VER]',\n\n        // OS\n        'iOS'              => ' \\bi?OS\\b [VER][ ;]{1}',\n        'Android'          => 'Android [VER]',\n        'Sailfish'         => 'Sailfish [VER]',\n        'BlackBerry'       => array('BlackBerry[\\w]+/[VER]', 'BlackBerry.*Version/[VER]', 'Version/[VER]'),\n        'BREW'             => 'BREW [VER]',\n        'Java'             => 'Java/[VER]',\n        // @reference: http://windowsteamblog.com/windows_phone/b/wpdev/archive/2011/08/29/introducing-the-ie9-on-windows-phone-mango-user-agent-string.aspx\n        // @reference: http://en.wikipedia.org/wiki/Windows_NT#Releases\n        'Windows Phone OS' => array( 'Windows Phone OS [VER]', 'Windows Phone [VER]'),\n        'Windows Phone'    => 'Windows Phone [VER]',\n        'Windows CE'       => 'Windows CE/[VER]',\n        // http://social.msdn.microsoft.com/Forums/en-US/windowsdeveloperpreviewgeneral/thread/6be392da-4d2f-41b4-8354-8dcee20c85cd\n        'Windows NT'       => 'Windows NT [VER]',\n        'Symbian'          => array('SymbianOS/[VER]', 'Symbian/[VER]'),\n        'webOS'            => array('webOS/[VER]', 'hpwOS/[VER];'),\n    );\n\n    /**\n     * Construct an instance of this class.\n     *\n     * @param array  $headers   Specify the headers as injection. Should be PHP _SERVER flavored.\n     *                          If left empty, will use the global _SERVER['HTTP_*'] vars instead.\n     * @param string $userAgent Inject the User-Agent header. If null, will use HTTP_USER_AGENT\n     *                          from the $headers array instead.\n     */\n    public function __construct(\n        array $headers = null,\n        $userAgent = null\n    ) {\n        $this->setHttpHeaders($headers);\n        $this->setUserAgent($userAgent);\n    }\n\n    /**\n     * Get the current script version.\n     * This is useful for the demo.php file,\n     * so people can check on what version they are testing\n     * for mobile devices.\n     *\n     * @return string The version number in semantic version format.\n     */\n    public static function getScriptVersion()\n    {\n        return self::VERSION;\n    }\n\n    /**\n     * Set the HTTP Headers. Must be PHP-flavored. This method will reset existing headers.\n     *\n     * @param array $httpHeaders The headers to set. If null, then using PHP's _SERVER to extract\n     *                           the headers. The default null is left for backwards compatibility.\n     */\n    public function setHttpHeaders($httpHeaders = null)\n    {\n        // use global _SERVER if $httpHeaders aren't defined\n        if (!is_array($httpHeaders) || !count($httpHeaders)) {\n            $httpHeaders = $_SERVER;\n        }\n\n        // clear existing headers\n        $this->httpHeaders = array();\n\n        // Only save HTTP headers. In PHP land, that means only _SERVER vars that\n        // start with HTTP_.\n        foreach ($httpHeaders as $key => $value) {\n            if (substr($key, 0, 5) === 'HTTP_') {\n                $this->httpHeaders[$key] = $value;\n            }\n        }\n\n        // In case we're dealing with CloudFront, we need to know.\n        $this->setCfHeaders($httpHeaders);\n    }\n\n    /**\n     * Retrieves the HTTP headers.\n     *\n     * @return array\n     */\n    public function getHttpHeaders()\n    {\n        return $this->httpHeaders;\n    }\n\n    /**\n     * Retrieves a particular header. If it doesn't exist, no exception/error is caused.\n     * Simply null is returned.\n     *\n     * @param string $header The name of the header to retrieve. Can be HTTP compliant such as\n     *                       \"User-Agent\" or \"X-Device-User-Agent\" or can be php-esque with the\n     *                       all-caps, HTTP_ prefixed, underscore seperated awesomeness.\n     *\n     * @return string|null The value of the header.\n     */\n    public function getHttpHeader($header)\n    {\n        // are we using PHP-flavored headers?\n        if (strpos($header, '_') === false) {\n            $header = str_replace('-', '_', $header);\n            $header = strtoupper($header);\n        }\n\n        // test the alternate, too\n        $altHeader = 'HTTP_' . $header;\n\n        //Test both the regular and the HTTP_ prefix\n        if (isset($this->httpHeaders[$header])) {\n            return $this->httpHeaders[$header];\n        } elseif (isset($this->httpHeaders[$altHeader])) {\n            return $this->httpHeaders[$altHeader];\n        }\n\n        return null;\n    }\n\n    public function getMobileHeaders()\n    {\n        return self::$mobileHeaders;\n    }\n\n    /**\n     * Get all possible HTTP headers that\n     * can contain the User-Agent string.\n     *\n     * @return array List of HTTP headers.\n     */\n    public function getUaHttpHeaders()\n    {\n        return self::$uaHttpHeaders;\n    }\n\n\n    /**\n     * Set CloudFront headers\n     * http://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/header-caching.html#header-caching-web-device\n     *\n     * @param array $cfHeaders List of HTTP headers\n     *\n     * @return  boolean If there were CloudFront headers to be set\n     */\n    public function setCfHeaders($cfHeaders = null) {\n        // use global _SERVER if $cfHeaders aren't defined\n        if (!is_array($cfHeaders) || !count($cfHeaders)) {\n            $cfHeaders = $_SERVER;\n        }\n\n        // clear existing headers\n        $this->cloudfrontHeaders = array();\n\n        // Only save CLOUDFRONT headers. In PHP land, that means only _SERVER vars that\n        // start with cloudfront-.\n        $response = false;\n        foreach ($cfHeaders as $key => $value) {\n            if (substr(strtolower($key), 0, 16) === 'http_cloudfront_') {\n                $this->cloudfrontHeaders[strtoupper($key)] = $value;\n                $response = true;\n            }\n        }\n\n        return $response;\n    }\n\n    /**\n     * Retrieves the cloudfront headers.\n     *\n     * @return array\n     */\n    public function getCfHeaders()\n    {\n        return $this->cloudfrontHeaders;\n    }\n\n    /**\n     * @param string $userAgent\n     * @return string\n     */\n    private function prepareUserAgent($userAgent) {\n        $userAgent = trim($userAgent);\n        $userAgent = substr($userAgent, 0, 500);\n        return $userAgent;\n    }\n\n    /**\n     * Set the User-Agent to be used.\n     *\n     * @param string $userAgent The user agent string to set.\n     *\n     * @return string|null\n     */\n    public function setUserAgent($userAgent = null)\n    {\n        // Invalidate cache due to #375\n        $this->cache = array();\n\n        if (false === empty($userAgent)) {\n            return $this->userAgent = $this->prepareUserAgent($userAgent);\n        } else {\n            $this->userAgent = null;\n            foreach ($this->getUaHttpHeaders() as $altHeader) {\n                if (false === empty($this->httpHeaders[$altHeader])) { // @todo: should use getHttpHeader(), but it would be slow. (Serban)\n                    $this->userAgent .= $this->httpHeaders[$altHeader] . \" \";\n                }\n            }\n\n            if (!empty($this->userAgent)) {\n                return $this->userAgent = $this->prepareUserAgent($this->userAgent);\n            }\n        }\n\n        if (count($this->getCfHeaders()) > 0) {\n            return $this->userAgent = 'Amazon CloudFront';\n        }\n        return $this->userAgent = null;\n    }\n\n    /**\n     * Retrieve the User-Agent.\n     *\n     * @return string|null The user agent if it's set.\n     */\n    public function getUserAgent()\n    {\n        return $this->userAgent;\n    }\n\n    /**\n     * Set the detection type. Must be one of self::DETECTION_TYPE_MOBILE or\n     * self::DETECTION_TYPE_EXTENDED. Otherwise, nothing is set.\n     *\n     * @deprecated since version 2.6.9\n     *\n     * @param string $type The type. Must be a self::DETECTION_TYPE_* constant. The default\n     *                     parameter is null which will default to self::DETECTION_TYPE_MOBILE.\n     */\n    public function setDetectionType($type = null)\n    {\n        if ($type === null) {\n            $type = self::DETECTION_TYPE_MOBILE;\n        }\n\n        if ($type !== self::DETECTION_TYPE_MOBILE && $type !== self::DETECTION_TYPE_EXTENDED) {\n            return;\n        }\n\n        $this->detectionType = $type;\n    }\n\n    public function getMatchingRegex()\n    {\n        return $this->matchingRegex;\n    }\n\n    public function getMatchesArray()\n    {\n        return $this->matchesArray;\n    }\n\n    /**\n     * Retrieve the list of known phone devices.\n     *\n     * @return array List of phone devices.\n     */\n    public static function getPhoneDevices()\n    {\n        return self::$phoneDevices;\n    }\n\n    /**\n     * Retrieve the list of known tablet devices.\n     *\n     * @return array List of tablet devices.\n     */\n    public static function getTabletDevices()\n    {\n        return self::$tabletDevices;\n    }\n\n    /**\n     * Alias for getBrowsers() method.\n     *\n     * @return array List of user agents.\n     */\n    public static function getUserAgents()\n    {\n        return self::getBrowsers();\n    }\n\n    /**\n     * Retrieve the list of known browsers. Specifically, the user agents.\n     *\n     * @return array List of browsers / user agents.\n     */\n    public static function getBrowsers()\n    {\n        return self::$browsers;\n    }\n\n    /**\n     * Retrieve the list of known utilities.\n     *\n     * @return array List of utilities.\n     */\n    public static function getUtilities()\n    {\n        return self::$utilities;\n    }\n\n    /**\n     * Method gets the mobile detection rules. This method is used for the magic methods $detect->is*().\n     *\n     * @deprecated since version 2.6.9\n     *\n     * @return array All the rules (but not extended).\n     */\n    public static function getMobileDetectionRules()\n    {\n        static $rules;\n\n        if (!$rules) {\n            $rules = array_merge(\n                self::$phoneDevices,\n                self::$tabletDevices,\n                self::$operatingSystems,\n                self::$browsers\n            );\n        }\n\n        return $rules;\n\n    }\n\n    /**\n     * Method gets the mobile detection rules + utilities.\n     * The reason this is separate is because utilities rules\n     * don't necessary imply mobile. This method is used inside\n     * the new $detect->is('stuff') method.\n     *\n     * @deprecated since version 2.6.9\n     *\n     * @return array All the rules + extended.\n     */\n    public function getMobileDetectionRulesExtended()\n    {\n        static $rules;\n\n        if (!$rules) {\n            // Merge all rules together.\n            $rules = array_merge(\n                self::$phoneDevices,\n                self::$tabletDevices,\n                self::$operatingSystems,\n                self::$browsers,\n                self::$utilities\n            );\n        }\n\n        return $rules;\n    }\n\n    /**\n     * Retrieve the current set of rules.\n     *\n     * @deprecated since version 2.6.9\n     *\n     * @return array\n     */\n    public function getRules()\n    {\n        if ($this->detectionType == self::DETECTION_TYPE_EXTENDED) {\n            return self::getMobileDetectionRulesExtended();\n        } else {\n            return self::getMobileDetectionRules();\n        }\n    }\n\n    /**\n     * Retrieve the list of mobile operating systems.\n     *\n     * @return array The list of mobile operating systems.\n     */\n    public static function getOperatingSystems()\n    {\n        return self::$operatingSystems;\n    }\n\n    /**\n     * Check the HTTP headers for signs of mobile.\n     * This is the fastest mobile check possible; it's used\n     * inside isMobile() method.\n     *\n     * @return bool\n     */\n    public function checkHttpHeadersForMobile()\n    {\n\n        foreach ($this->getMobileHeaders() as $mobileHeader => $matchType) {\n            if (isset($this->httpHeaders[$mobileHeader])) {\n                if (isset($matchType['matches']) && is_array($matchType['matches'])) {\n                    foreach ($matchType['matches'] as $_match) {\n                        if (strpos($this->httpHeaders[$mobileHeader], $_match) !== false) {\n                            return true;\n                        }\n                    }\n\n                    return false;\n                } else {\n                    return true;\n                }\n            }\n        }\n\n        return false;\n\n    }\n\n    /**\n     * Magic overloading method.\n     *\n     * @method boolean is[...]()\n     * @param  string                 $name\n     * @param  array                  $arguments\n     * @return mixed\n     * @throws BadMethodCallException when the method doesn't exist and doesn't start with 'is'\n     */\n    public function __call($name, $arguments)\n    {\n        // make sure the name starts with 'is', otherwise\n        if (substr($name, 0, 2) !== 'is') {\n            throw new BadMethodCallException(\"No such method exists: $name\");\n        }\n\n        $this->setDetectionType(self::DETECTION_TYPE_MOBILE);\n\n        $key = substr($name, 2);\n\n        return $this->matchUAAgainstKey($key);\n    }\n\n    /**\n     * Find a detection rule that matches the current User-agent.\n     *\n     * @param  null    $userAgent deprecated\n     * @return boolean\n     */\n    protected function matchDetectionRulesAgainstUA($userAgent = null)\n    {\n        // Begin general search.\n        foreach ($this->getRules() as $_regex) {\n            if (empty($_regex)) {\n                continue;\n            }\n\n            if ($this->match($_regex, $userAgent)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * Search for a certain key in the rules array.\n     * If the key is found then try to match the corresponding\n     * regex against the User-Agent.\n     *\n     * @param string $key\n     *\n     * @return boolean\n     */\n    protected function matchUAAgainstKey($key)\n    {\n        // Make the keys lowercase so we can match: isIphone(), isiPhone(), isiphone(), etc.\n        $key = strtolower($key);\n        if (false === isset($this->cache[$key])) {\n\n            // change the keys to lower case\n            $_rules = array_change_key_case($this->getRules());\n\n            if (false === empty($_rules[$key])) {\n                $this->cache[$key] = $this->match($_rules[$key]);\n            }\n\n            if (false === isset($this->cache[$key])) {\n                $this->cache[$key] = false;\n            }\n        }\n\n        return $this->cache[$key];\n    }\n\n    /**\n     * Check if the device is mobile.\n     * Returns true if any type of mobile device detected, including special ones\n     * @param  null $userAgent   deprecated\n     * @param  null $httpHeaders deprecated\n     * @return bool\n     */\n    public function isMobile($userAgent = null, $httpHeaders = null)\n    {\n\n        if ($httpHeaders) {\n            $this->setHttpHeaders($httpHeaders);\n        }\n\n        if ($userAgent) {\n            $this->setUserAgent($userAgent);\n        }\n\n        // Check specifically for cloudfront headers if the useragent === 'Amazon CloudFront'\n        if ($this->getUserAgent() === 'Amazon CloudFront') {\n            $cfHeaders = $this->getCfHeaders();\n            if(array_key_exists('HTTP_CLOUDFRONT_IS_MOBILE_VIEWER', $cfHeaders) && $cfHeaders['HTTP_CLOUDFRONT_IS_MOBILE_VIEWER'] === 'true') {\n                return true;\n            }\n        }\n\n        $this->setDetectionType(self::DETECTION_TYPE_MOBILE);\n\n        if ($this->checkHttpHeadersForMobile()) {\n            return true;\n        } else {\n            return $this->matchDetectionRulesAgainstUA();\n        }\n\n    }\n\n    /**\n     * Check if the device is a tablet.\n     * Return true if any type of tablet device is detected.\n     *\n     * @param  string $userAgent   deprecated\n     * @param  array  $httpHeaders deprecated\n     * @return bool\n     */\n    public function isTablet($userAgent = null, $httpHeaders = null)\n    {\n        // Check specifically for cloudfront headers if the useragent === 'Amazon CloudFront'\n        if ($this->getUserAgent() === 'Amazon CloudFront') {\n            $cfHeaders = $this->getCfHeaders();\n            if(array_key_exists('HTTP_CLOUDFRONT_IS_TABLET_VIEWER', $cfHeaders) && $cfHeaders['HTTP_CLOUDFRONT_IS_TABLET_VIEWER'] === 'true') {\n                return true;\n            }\n        }\n\n        $this->setDetectionType(self::DETECTION_TYPE_MOBILE);\n\n        foreach (self::$tabletDevices as $_regex) {\n            if ($this->match($_regex, $userAgent)) {\n                return true;\n            }\n        }\n\n        return false;\n    }\n\n    /**\n     * This method checks for a certain property in the\n     * userAgent.\n     * @todo: The httpHeaders part is not yet used.\n     *\n     * @param  string        $key\n     * @param  string        $userAgent   deprecated\n     * @param  string        $httpHeaders deprecated\n     * @return bool|int|null\n     */\n    public function is($key, $userAgent = null, $httpHeaders = null)\n    {\n        // Set the UA and HTTP headers only if needed (eg. batch mode).\n        if ($httpHeaders) {\n            $this->setHttpHeaders($httpHeaders);\n        }\n\n        if ($userAgent) {\n            $this->setUserAgent($userAgent);\n        }\n\n        $this->setDetectionType(self::DETECTION_TYPE_EXTENDED);\n\n        return $this->matchUAAgainstKey($key);\n    }\n\n    /**\n     * Some detection rules are relative (not standard),\n     * because of the diversity of devices, vendors and\n     * their conventions in representing the User-Agent or\n     * the HTTP headers.\n     *\n     * This method will be used to check custom regexes against\n     * the User-Agent string.\n     *\n     * @param $regex\n     * @param  string $userAgent\n     * @return bool\n     *\n     * @todo: search in the HTTP headers too.\n     */\n    public function match($regex, $userAgent = null)\n    {\n        $match = (bool) preg_match(sprintf('#%s#is', $regex), (false === empty($userAgent) ? $userAgent : $this->userAgent), $matches);\n        // If positive match is found, store the results for debug.\n        if ($match) {\n            $this->matchingRegex = $regex;\n            $this->matchesArray = $matches;\n        }\n\n        return $match;\n    }\n\n    /**\n     * Get the properties array.\n     *\n     * @return array\n     */\n    public static function getProperties()\n    {\n        return self::$properties;\n    }\n\n    /**\n     * Prepare the version number.\n     *\n     * @todo Remove the error supression from str_replace() call.\n     *\n     * @param string $ver The string version, like \"2.6.21.2152\";\n     *\n     * @return float\n     */\n    public function prepareVersionNo($ver)\n    {\n        $ver = str_replace(array('_', ' ', '/'), '.', $ver);\n        $arrVer = explode('.', $ver, 2);\n\n        if (isset($arrVer[1])) {\n            $arrVer[1] = @str_replace('.', '', $arrVer[1]); // @todo: treat strings versions.\n        }\n\n        return (float) implode('.', $arrVer);\n    }\n\n    /**\n     * Check the version of the given property in the User-Agent.\n     * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)\n     *\n     * @param string $propertyName The name of the property. See self::getProperties() array\n     *                             keys for all possible properties.\n     * @param string $type         Either self::VERSION_TYPE_STRING to get a string value or\n     *                             self::VERSION_TYPE_FLOAT indicating a float value. This parameter\n     *                             is optional and defaults to self::VERSION_TYPE_STRING. Passing an\n     *                             invalid parameter will default to the this type as well.\n     *\n     * @return string|float The version of the property we are trying to extract.\n     */\n    public function version($propertyName, $type = self::VERSION_TYPE_STRING)\n    {\n        if (empty($propertyName)) {\n            return false;\n        }\n\n        // set the $type to the default if we don't recognize the type\n        if ($type !== self::VERSION_TYPE_STRING && $type !== self::VERSION_TYPE_FLOAT) {\n            $type = self::VERSION_TYPE_STRING;\n        }\n\n        $properties = self::getProperties();\n\n        // Check if the property exists in the properties array.\n        if (true === isset($properties[$propertyName])) {\n\n            // Prepare the pattern to be matched.\n            // Make sure we always deal with an array (string is converted).\n            $properties[$propertyName] = (array) $properties[$propertyName];\n\n            foreach ($properties[$propertyName] as $propertyMatchString) {\n\n                $propertyPattern = str_replace('[VER]', self::VER, $propertyMatchString);\n\n                // Identify and extract the version.\n                preg_match(sprintf('#%s#is', $propertyPattern), $this->userAgent, $match);\n\n                if (false === empty($match[1])) {\n                    $version = ($type == self::VERSION_TYPE_FLOAT ? $this->prepareVersionNo($match[1]) : $match[1]);\n\n                    return $version;\n                }\n\n            }\n\n        }\n\n        return false;\n    }\n\n    /**\n     * Retrieve the mobile grading, using self::MOBILE_GRADE_* constants.\n     *\n     * @return string One of the self::MOBILE_GRADE_* constants.\n     */\n    public function mobileGrade()\n    {\n        $isMobile = $this->isMobile();\n\n        if (\n            // Apple iOS 4-7.0 – Tested on the original iPad (4.3 / 5.0), iPad 2 (4.3 / 5.1 / 6.1), iPad 3 (5.1 / 6.0), iPad Mini (6.1), iPad Retina (7.0), iPhone 3GS (4.3), iPhone 4 (4.3 / 5.1), iPhone 4S (5.1 / 6.0), iPhone 5 (6.0), and iPhone 5S (7.0)\n            $this->is('iOS') && $this->version('iPad', self::VERSION_TYPE_FLOAT) >= 4.3 ||\n            $this->is('iOS') && $this->version('iPhone', self::VERSION_TYPE_FLOAT) >= 4.3 ||\n            $this->is('iOS') && $this->version('iPod', self::VERSION_TYPE_FLOAT) >= 4.3 ||\n\n            // Android 2.1-2.3 - Tested on the HTC Incredible (2.2), original Droid (2.2), HTC Aria (2.1), Google Nexus S (2.3). Functional on 1.5 & 1.6 but performance may be sluggish, tested on Google G1 (1.5)\n            // Android 3.1 (Honeycomb)  - Tested on the Samsung Galaxy Tab 10.1 and Motorola XOOM\n            // Android 4.0 (ICS)  - Tested on a Galaxy Nexus. Note: transition performance can be poor on upgraded devices\n            // Android 4.1 (Jelly Bean)  - Tested on a Galaxy Nexus and Galaxy 7\n            ( $this->version('Android', self::VERSION_TYPE_FLOAT)>2.1 && $this->is('Webkit') ) ||\n\n            // Windows Phone 7.5-8 - Tested on the HTC Surround (7.5), HTC Trophy (7.5), LG-E900 (7.5), Nokia 800 (7.8), HTC Mazaa (7.8), Nokia Lumia 520 (8), Nokia Lumia 920 (8), HTC 8x (8)\n            $this->version('Windows Phone OS', self::VERSION_TYPE_FLOAT) >= 7.5 ||\n\n            // Tested on the Torch 9800 (6) and Style 9670 (6), BlackBerry® Torch 9810 (7), BlackBerry Z10 (10)\n            $this->is('BlackBerry') && $this->version('BlackBerry', self::VERSION_TYPE_FLOAT) >= 6.0 ||\n            // Blackberry Playbook (1.0-2.0) - Tested on PlayBook\n            $this->match('Playbook.*Tablet') ||\n\n            // Palm WebOS (1.4-3.0) - Tested on the Palm Pixi (1.4), Pre (1.4), Pre 2 (2.0), HP TouchPad (3.0)\n            ( $this->version('webOS', self::VERSION_TYPE_FLOAT) >= 1.4 && $this->match('Palm|Pre|Pixi') ) ||\n            // Palm WebOS 3.0  - Tested on HP TouchPad\n            $this->match('hp.*TouchPad') ||\n\n            // Firefox Mobile 18 - Tested on Android 2.3 and 4.1 devices\n            ( $this->is('Firefox') && $this->version('Firefox', self::VERSION_TYPE_FLOAT) >= 18 ) ||\n\n            // Chrome for Android - Tested on Android 4.0, 4.1 device\n            ( $this->is('Chrome') && $this->is('AndroidOS') && $this->version('Android', self::VERSION_TYPE_FLOAT) >= 4.0 ) ||\n\n            // Skyfire 4.1 - Tested on Android 2.3 device\n            ( $this->is('Skyfire') && $this->version('Skyfire', self::VERSION_TYPE_FLOAT) >= 4.1 && $this->is('AndroidOS') && $this->version('Android', self::VERSION_TYPE_FLOAT) >= 2.3 ) ||\n\n            // Opera Mobile 11.5-12: Tested on Android 2.3\n            ( $this->is('Opera') && $this->version('Opera Mobi', self::VERSION_TYPE_FLOAT) >= 11.5 && $this->is('AndroidOS') ) ||\n\n            // Meego 1.2 - Tested on Nokia 950 and N9\n            $this->is('MeeGoOS') ||\n\n            // Sailfish OS\n            $this->is('SailfishOS') ||\n\n            // Tizen (pre-release) - Tested on early hardware\n            $this->is('Tizen') ||\n\n            // Samsung Bada 2.0 - Tested on a Samsung Wave 3, Dolphin browser\n            // @todo: more tests here!\n            $this->is('Dolfin') && $this->version('Bada', self::VERSION_TYPE_FLOAT) >= 2.0 ||\n\n            // UC Browser - Tested on Android 2.3 device\n            ( ($this->is('UC Browser') || $this->is('Dolfin')) && $this->version('Android', self::VERSION_TYPE_FLOAT) >= 2.3 ) ||\n\n            // Kindle 3 and Fire  - Tested on the built-in WebKit browser for each\n            ( $this->match('Kindle Fire') ||\n            $this->is('Kindle') && $this->version('Kindle', self::VERSION_TYPE_FLOAT) >= 3.0 ) ||\n\n            // Nook Color 1.4.1 - Tested on original Nook Color, not Nook Tablet\n            $this->is('AndroidOS') && $this->is('NookTablet') ||\n\n            // Chrome Desktop 16-24 - Tested on OS X 10.7 and Windows 7\n            $this->version('Chrome', self::VERSION_TYPE_FLOAT) >= 16 && !$isMobile ||\n\n            // Safari Desktop 5-6 - Tested on OS X 10.7 and Windows 7\n            $this->version('Safari', self::VERSION_TYPE_FLOAT) >= 5.0 && !$isMobile ||\n\n            // Firefox Desktop 10-18 - Tested on OS X 10.7 and Windows 7\n            $this->version('Firefox', self::VERSION_TYPE_FLOAT) >= 10.0 && !$isMobile ||\n\n            // Internet Explorer 7-9 - Tested on Windows XP, Vista and 7\n            $this->version('IE', self::VERSION_TYPE_FLOAT) >= 7.0 && !$isMobile ||\n\n            // Opera Desktop 10-12 - Tested on OS X 10.7 and Windows 7\n            $this->version('Opera', self::VERSION_TYPE_FLOAT) >= 10 && !$isMobile\n        ){\n            return self::MOBILE_GRADE_A;\n        }\n\n        if (\n            $this->is('iOS') && $this->version('iPad', self::VERSION_TYPE_FLOAT)<4.3 ||\n            $this->is('iOS') && $this->version('iPhone', self::VERSION_TYPE_FLOAT)<4.3 ||\n            $this->is('iOS') && $this->version('iPod', self::VERSION_TYPE_FLOAT)<4.3 ||\n\n            // Blackberry 5.0: Tested on the Storm 2 9550, Bold 9770\n            $this->is('Blackberry') && $this->version('BlackBerry', self::VERSION_TYPE_FLOAT) >= 5 && $this->version('BlackBerry', self::VERSION_TYPE_FLOAT)<6 ||\n\n            //Opera Mini (5.0-6.5) - Tested on iOS 3.2/4.3 and Android 2.3\n            ($this->version('Opera Mini', self::VERSION_TYPE_FLOAT) >= 5.0 && $this->version('Opera Mini', self::VERSION_TYPE_FLOAT) <= 7.0 &&\n            ($this->version('Android', self::VERSION_TYPE_FLOAT) >= 2.3 || $this->is('iOS')) ) ||\n\n            // Nokia Symbian^3 - Tested on Nokia N8 (Symbian^3), C7 (Symbian^3), also works on N97 (Symbian^1)\n            $this->match('NokiaN8|NokiaC7|N97.*Series60|Symbian/3') ||\n\n            // @todo: report this (tested on Nokia N71)\n            $this->version('Opera Mobi', self::VERSION_TYPE_FLOAT) >= 11 && $this->is('SymbianOS')\n        ){\n            return self::MOBILE_GRADE_B;\n        }\n\n        if (\n            // Blackberry 4.x - Tested on the Curve 8330\n            $this->version('BlackBerry', self::VERSION_TYPE_FLOAT) <= 5.0 ||\n            // Windows Mobile - Tested on the HTC Leo (WinMo 5.2)\n            $this->match('MSIEMobile|Windows CE.*Mobile') || $this->version('Windows Mobile', self::VERSION_TYPE_FLOAT) <= 5.2 ||\n\n            // Tested on original iPhone (3.1), iPhone 3 (3.2)\n            $this->is('iOS') && $this->version('iPad', self::VERSION_TYPE_FLOAT) <= 3.2 ||\n            $this->is('iOS') && $this->version('iPhone', self::VERSION_TYPE_FLOAT) <= 3.2 ||\n            $this->is('iOS') && $this->version('iPod', self::VERSION_TYPE_FLOAT) <= 3.2 ||\n\n            // Internet Explorer 7 and older - Tested on Windows XP\n            $this->version('IE', self::VERSION_TYPE_FLOAT) <= 7.0 && !$isMobile\n        ){\n            return self::MOBILE_GRADE_C;\n        }\n\n        // All older smartphone platforms and featurephones - Any device that doesn't support media queries\n        // will receive the basic, C grade experience.\n        return self::MOBILE_GRADE_C;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/inc/classes/dependencies/mobiledetect/mobiledetectlib/Mobile_Detect.php b/inc/classes/dependencies/mobiledetect/mobiledetectlib/Mobile_Detect.php
--- a/inc/classes/dependencies/mobiledetect/mobiledetectlib/Mobile_Detect.php	
+++ b/inc/classes/dependencies/mobiledetect/mobiledetectlib/Mobile_Detect.php	
@@ -3,7 +3,7 @@
  * Mobile Detect Library
  * Motto: "Every business should have a mobile detection script to detect mobile readers"
  *
- * WP_Rocket_Mobile_Detect is a lightweight PHP class for detecting mobile devices (including tablets).
+ * WP_Rocket_Mobile_Detect is a lightweight PHP class WP_Rocket_for detecting mobile devices (including tablets).
  * It uses the User-Agent string combined with specific HTTP headers to detect the mobile environment.
  *
  * Homepage: http://mobiledetect.net
@@ -13,12 +13,12 @@
  * KNOWN LIMITATIONS: https://github.com/serbanghita/Mobile-Detect/blob/master/docs/KNOWN_LIMITATIONS.md
  * EXAMPLES: https://github.com/serbanghita/Mobile-Detect/wiki/Code-examples
  *
- * @license https://github.com/serbanghita/Mobile-Detect/blob/master/LICENSE.txt MIT License
+ * @license https://github.com/serbanghita/Mobile-Detect/blob/master/LICENSE
  * @author  Serban Ghita <serbanghita@gmail.com>
  * @author  Nick Ilyin <nick.ilyin@gmail.com>
  * Original author: Victor Stanciu <vic.stanciu@gmail.com>
  *
- * @version 2.8.37
+ * @version 2.8.39
  *
  * Auto-generated isXXXX() magic methods.
  * php -a examples/dump_magic_methods.php
@@ -255,20 +255,20 @@
     /**
      * Stores the version number of the current release.
      */
-    const VERSION                   = '2.8.37';
+    const VERSION                   = '2.8.39';
 
     /**
-     * A type for the version() method indicating a string return value.
+     * A type WP_Rocket_for the version() method indicating a string return value.
      */
     const VERSION_TYPE_STRING       = 'text';
 
     /**
-     * A type for the version() method indicating a float return value.
+     * A type WP_Rocket_for the version() method indicating a float return value.
      */
     const VERSION_TYPE_FLOAT        = 'float';
 
     /**
-     * A cache for resolved matches
+     * A cache WP_Rocket_for resolved matches
      * @var array
      */
     protected $cache = array();
@@ -293,14 +293,14 @@
 
     /**
      * The matching Regex.
-     * This is good for debug.
+     * This is good WP_Rocket_for debug.
      * @var string
      */
     protected $matchingRegex = null;
 
     /**
      * The matches extracted from the regex expression.
-     * This is good for debug.
+     * This is good WP_Rocket_for debug.
      *
      * @var string
      */
@@ -365,18 +365,18 @@
         // @todo: Is 'Dell Streak' a tablet or a phone? ;)
         'Dell'          => 'Dell[;]? (Streak|Aero|Venue|Venue Pro|Flash|Smoke|Mini 3iX)|XCD28|XCD35|\b001DL\b|\b101DL\b|\bGS01\b',
         'Motorola'      => 'Motorola|DROIDX|DROID BIONIC|\bDroid\b.*Build|Android.*Xoom|HRI39|MOT-|A1260|A1680|A555|A853|A855|A953|A955|A956|Motorola.*ELECTRIFY|Motorola.*i1|i867|i940|MB200|MB300|MB501|MB502|MB508|MB511|MB520|MB525|MB526|MB611|MB612|MB632|MB810|MB855|MB860|MB861|MB865|MB870|ME501|ME502|ME511|ME525|ME600|ME632|ME722|ME811|ME860|ME863|ME865|MT620|MT710|MT716|MT720|MT810|MT870|MT917|Motorola.*TITANIUM|WX435|WX445|XT300|XT301|XT311|XT316|XT317|XT319|XT320|XT390|XT502|XT530|XT531|XT532|XT535|XT603|XT610|XT611|XT615|XT681|XT701|XT702|XT711|XT720|XT800|XT806|XT860|XT862|XT875|XT882|XT883|XT894|XT901|XT907|XT909|XT910|XT912|XT928|XT926|XT915|XT919|XT925|XT1021|\bMoto E\b|XT1068|XT1092|XT1052',
-        'Samsung'       => '\bSamsung\b|SM-G950F|SM-G955F|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|SM-N910C|SM-A310F|GT-I9190|SM-J500FN|SM-G903F|SM-J330F|SM-G610F|SM-G981B|SM-G892A|SM-A530F',
+        'Samsung'       => '\bSamsung\b|SM-G950F|SM-G955F|SM-G9250|GT-19300|SGH-I337|BGT-S5230|GT-B2100|GT-B2700|GT-B2710|GT-B3210|GT-B3310|GT-B3410|GT-B3730|GT-B3740|GT-B5510|GT-B5512|GT-B5722|GT-B6520|GT-B7300|GT-B7320|GT-B7330|GT-B7350|GT-B7510|GT-B7722|GT-B7800|GT-C3010|GT-C3011|GT-C3060|GT-C3200|GT-C3212|GT-C3212I|GT-C3262|GT-C3222|GT-C3300|GT-C3300K|GT-C3303|GT-C3303K|GT-C3310|GT-C3322|GT-C3330|GT-C3350|GT-C3500|GT-C3510|GT-C3530|GT-C3630|GT-C3780|GT-C5010|GT-C5212|GT-C6620|GT-C6625|GT-C6712|GT-E1050|GT-E1070|GT-E1075|GT-E1080|GT-E1081|GT-E1085|GT-E1087|GT-E1100|GT-E1107|GT-E1110|GT-E1120|GT-E1125|GT-E1130|GT-E1160|GT-E1170|GT-E1175|GT-E1180|GT-E1182|GT-E1200|GT-E1210|GT-E1225|GT-E1230|GT-E1390|GT-E2100|GT-E2120|GT-E2121|GT-E2152|GT-E2220|GT-E2222|GT-E2230|GT-E2232|GT-E2250|GT-E2370|GT-E2550|GT-E2652|GT-E3210|GT-E3213|GT-I5500|GT-I5503|GT-I5700|GT-I5800|GT-I5801|GT-I6410|GT-I6420|GT-I7110|GT-I7410|GT-I7500|GT-I8000|GT-I8150|GT-I8160|GT-I8190|GT-I8320|GT-I8330|GT-I8350|GT-I8530|GT-I8700|GT-I8703|GT-I8910|GT-I9000|GT-I9001|GT-I9003|GT-I9010|GT-I9020|GT-I9023|GT-I9070|GT-I9082|GT-I9100|GT-I9103|GT-I9220|GT-I9250|GT-I9300|GT-I9305|GT-I9500|GT-I9505|GT-M3510|GT-M5650|GT-M7500|GT-M7600|GT-M7603|GT-M8800|GT-M8910|GT-N7000|GT-S3110|GT-S3310|GT-S3350|GT-S3353|GT-S3370|GT-S3650|GT-S3653|GT-S3770|GT-S3850|GT-S5210|GT-S5220|GT-S5229|GT-S5230|GT-S5233|GT-S5250|GT-S5253|GT-S5260|GT-S5263|GT-S5270|GT-S5300|GT-S5330|GT-S5350|GT-S5360|GT-S5363|GT-S5369|GT-S5380|GT-S5380D|GT-S5560|GT-S5570|GT-S5600|GT-S5603|GT-S5610|GT-S5620|GT-S5660|GT-S5670|GT-S5690|GT-S5750|GT-S5780|GT-S5830|GT-S5839|GT-S6102|GT-S6500|GT-S7070|GT-S7200|GT-S7220|GT-S7230|GT-S7233|GT-S7250|GT-S7500|GT-S7530|GT-S7550|GT-S7562|GT-S7710|GT-S8000|GT-S8003|GT-S8500|GT-S8530|GT-S8600|SCH-A310|SCH-A530|SCH-A570|SCH-A610|SCH-A630|SCH-A650|SCH-A790|SCH-A795|SCH-A850|SCH-A870|SCH-A890|SCH-A930|SCH-A950|SCH-A970|SCH-A990|SCH-I100|SCH-I110|SCH-I400|SCH-I405|SCH-I500|SCH-I510|SCH-I515|SCH-I600|SCH-I730|SCH-I760|SCH-I770|SCH-I830|SCH-I910|SCH-I920|SCH-I959|SCH-LC11|SCH-N150|SCH-N300|SCH-R100|SCH-R300|SCH-R351|SCH-R400|SCH-R410|SCH-T300|SCH-U310|SCH-U320|SCH-U350|SCH-U360|SCH-U365|SCH-U370|SCH-U380|SCH-U410|SCH-U430|SCH-U450|SCH-U460|SCH-U470|SCH-U490|SCH-U540|SCH-U550|SCH-U620|SCH-U640|SCH-U650|SCH-U660|SCH-U700|SCH-U740|SCH-U750|SCH-U810|SCH-U820|SCH-U900|SCH-U940|SCH-U960|SCS-26UC|SGH-A107|SGH-A117|SGH-A127|SGH-A137|SGH-A157|SGH-A167|SGH-A177|SGH-A187|SGH-A197|SGH-A227|SGH-A237|SGH-A257|SGH-A437|SGH-A517|SGH-A597|SGH-A637|SGH-A657|SGH-A667|SGH-A687|SGH-A697|SGH-A707|SGH-A717|SGH-A727|SGH-A737|SGH-A747|SGH-A767|SGH-A777|SGH-A797|SGH-A817|SGH-A827|SGH-A837|SGH-A847|SGH-A867|SGH-A877|SGH-A887|SGH-A897|SGH-A927|SGH-B100|SGH-B130|SGH-B200|SGH-B220|SGH-C100|SGH-C110|SGH-C120|SGH-C130|SGH-C140|SGH-C160|SGH-C170|SGH-C180|SGH-C200|SGH-C207|SGH-C210|SGH-C225|SGH-C230|SGH-C417|SGH-C450|SGH-D307|SGH-D347|SGH-D357|SGH-D407|SGH-D415|SGH-D780|SGH-D807|SGH-D980|SGH-E105|SGH-E200|SGH-E315|SGH-E316|SGH-E317|SGH-E335|SGH-E590|SGH-E635|SGH-E715|SGH-E890|SGH-F300|SGH-F480|SGH-I200|SGH-I300|SGH-I320|SGH-I550|SGH-I577|SGH-I600|SGH-I607|SGH-I617|SGH-I627|SGH-I637|SGH-I677|SGH-I700|SGH-I717|SGH-I727|SGH-i747M|SGH-I777|SGH-I780|SGH-I827|SGH-I847|SGH-I857|SGH-I896|SGH-I897|SGH-I900|SGH-I907|SGH-I917|SGH-I927|SGH-I937|SGH-I997|SGH-J150|SGH-J200|SGH-L170|SGH-L700|SGH-M110|SGH-M150|SGH-M200|SGH-N105|SGH-N500|SGH-N600|SGH-N620|SGH-N625|SGH-N700|SGH-N710|SGH-P107|SGH-P207|SGH-P300|SGH-P310|SGH-P520|SGH-P735|SGH-P777|SGH-Q105|SGH-R210|SGH-R220|SGH-R225|SGH-S105|SGH-S307|SGH-T109|SGH-T119|SGH-T139|SGH-T209|SGH-T219|SGH-T229|SGH-T239|SGH-T249|SGH-T259|SGH-T309|SGH-T319|SGH-T329|SGH-T339|SGH-T349|SGH-T359|SGH-T369|SGH-T379|SGH-T409|SGH-T429|SGH-T439|SGH-T459|SGH-T469|SGH-T479|SGH-T499|SGH-T509|SGH-T519|SGH-T539|SGH-T559|SGH-T589|SGH-T609|SGH-T619|SGH-T629|SGH-T639|SGH-T659|SGH-T669|SGH-T679|SGH-T709|SGH-T719|SGH-T729|SGH-T739|SGH-T746|SGH-T749|SGH-T759|SGH-T769|SGH-T809|SGH-T819|SGH-T839|SGH-T919|SGH-T929|SGH-T939|SGH-T959|SGH-T989|SGH-U100|SGH-U200|SGH-U800|SGH-V205|SGH-V206|SGH-X100|SGH-X105|SGH-X120|SGH-X140|SGH-X426|SGH-X427|SGH-X475|SGH-X495|SGH-X497|SGH-X507|SGH-X600|SGH-X610|SGH-X620|SGH-X630|SGH-X700|SGH-X820|SGH-X890|SGH-Z130|SGH-Z150|SGH-Z170|SGH-ZX10|SGH-ZX20|SHW-M110|SPH-A120|SPH-A400|SPH-A420|SPH-A460|SPH-A500|SPH-A560|SPH-A600|SPH-A620|SPH-A660|SPH-A700|SPH-A740|SPH-A760|SPH-A790|SPH-A800|SPH-A820|SPH-A840|SPH-A880|SPH-A900|SPH-A940|SPH-A960|SPH-D600|SPH-D700|SPH-D710|SPH-D720|SPH-I300|SPH-I325|SPH-I330|SPH-I350|SPH-I500|SPH-I600|SPH-I700|SPH-L700|SPH-M100|SPH-M220|SPH-M240|SPH-M300|SPH-M305|SPH-M320|SPH-M330|SPH-M350|SPH-M360|SPH-M370|SPH-M380|SPH-M510|SPH-M540|SPH-M550|SPH-M560|SPH-M570|SPH-M580|SPH-M610|SPH-M620|SPH-M630|SPH-M800|SPH-M810|SPH-M850|SPH-M900|SPH-M910|SPH-M920|SPH-M930|SPH-N100|SPH-N200|SPH-N240|SPH-N300|SPH-N400|SPH-Z400|SWC-E100|SCH-i909|GT-N7100|GT-N7105|SCH-I535|SM-N900A|SGH-I317|SGH-T999L|GT-S5360B|GT-I8262|GT-S6802|GT-S6312|GT-S6310|GT-S5312|GT-S5310|GT-I9105|GT-I8510|GT-S6790N|SM-G7105|SM-N9005|GT-S5301|GT-I9295|GT-I9195|SM-C101|GT-S7392|GT-S7560|GT-B7610|GT-I5510|GT-S7582|GT-S7530E|GT-I8750|SM-G9006V|SM-G9008V|SM-G9009D|SM-G900A|SM-G900D|SM-G900F|SM-G900H|SM-G900I|SM-G900J|SM-G900K|SM-G900L|SM-G900M|SM-G900P|SM-G900R4|SM-G900S|SM-G900T|SM-G900V|SM-G900W8|SHV-E160K|SCH-P709|SCH-P729|SM-T2558|GT-I9205|SM-G9350|SM-J120F|SM-G920F|SM-G920V|SM-G930F|SM-N910C|SM-A310F|GT-I9190|SM-J500FN|SM-G903F|SM-J330F|SM-G610F|SM-G981B|SM-G892A|SM-A530F|SM-G988N',
         'LG'            => '\bLG\b;|LG[- ]?(C800|C900|E400|E610|E900|E-900|F160|F180K|F180L|F180S|730|855|L160|LS740|LS840|LS970|LU6200|MS690|MS695|MS770|MS840|MS870|MS910|P500|P700|P705|VM696|AS680|AS695|AX840|C729|E970|GS505|272|C395|E739BK|E960|L55C|L75C|LS696|LS860|P769BK|P350|P500|P509|P870|UN272|US730|VS840|VS950|LN272|LN510|LS670|LS855|LW690|MN270|MN510|P509|P769|P930|UN200|UN270|UN510|UN610|US670|US740|US760|UX265|UX840|VN271|VN530|VS660|VS700|VS740|VS750|VS910|VS920|VS930|VX9200|VX11000|AX840A|LW770|P506|P925|P999|E612|D955|D802|MS323|M257)|LM-G710',
         'Sony'          => 'SonyST|SonyLT|SonyEricsson|SonyEricssonLT15iv|LT18i|E10i|LT28h|LT26w|SonyEricssonMT27i|C5303|C6902|C6903|C6906|C6943|D2533|SOV34|601SO|F8332',
-        'Asus'          => 'Asus.*Galaxy|PadFone.*Mobile',
-        'Xiaomi'        => '^(?!.*\bx11\b).*xiaomi.*$|POCOPHONE F1|MI 8|Redmi Note 9S|Redmi Note 5A Prime|N2G47H|M2001J2G|M2001J2I|M1805E10A|M2004J11G|M1902F1G|M2002J9G|M2004J19G|M2003J6A1G',
+        'Asus'          => 'Asus.*Galaxy|PadFone.*Mobile|ASUS_Z01QD',
+        'Xiaomi'        => '^(?!.*\bx11\b).*xiaomi.*$|POCOPHONE F1|\bMI\b 8|\bMi\b 10|Redmi Note 9S|Redmi 5A|Redmi Note 5A Prime|Redmi Note 7 Pro|N2G47H|M2001J2G|M2001J2I|M1805E10A|M2004J11G|M1902F1G|M2002J9G|M2004J19G|M2003J6A1G|M2012K11C',
         'NokiaLumia'    => 'Lumia [0-9]{3,4}',
         // http://www.micromaxinfo.com/mobiles/smartphones
         // Added because the codes might conflict with Acer Tablets.
         'Micromax'      => 'Micromax.*\b(A210|A92|A88|A72|A111|A110Q|A115|A116|A110|A90S|A26|A51|A35|A54|A25|A27|A89|A68|A65|A57|A90)\b',
         // @todo Complete the regex.
         'Palm'          => 'PalmSource|Palm', // avantgo|blazer|elaine|hiptop|plucker|xiino ;
-        'Vertu'         => 'Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature', // Just for fun ;)
+        'Vertu'         => 'Vertu|Vertu.*Ltd|Vertu.*Ascent|Vertu.*Ayxta|Vertu.*Constellation(F|Quest)?|Vertu.*Monika|Vertu.*Signature', // Just WP_Rocket_for fun ;)
         // http://www.pantech.co.kr/en/prod/prodList.do?gbrand=VEGA (PANTECH)
         // Most of the VEGA devices are legacy. PANTECH seem to be newer devices based on Android.
         'Pantech'       => 'PANTECH|IM-A850S|IM-A840S|IM-A830L|IM-A830K|IM-A830S|IM-A820L|IM-A810K|IM-A810S|IM-A800S|IM-T100K|IM-A725L|IM-A780L|IM-A775C|IM-A770K|IM-A760S|IM-A750K|IM-A740S|IM-A730S|IM-A720L|IM-A710K|IM-A690L|IM-A690S|IM-A650S|IM-A630K|IM-A600S|VEGA PTL21|PT003|P8010|ADR910L|P6030|P6020|P9070|P4100|P9060|P5000|CDM8992|TXT8045|ADR8995|IS11PT|P2030|P6010|P8000|PT002|IS06|CDM8999|P9050|PT001|TXT8040|P2020|P9020|P2000|P7040|P7000|C790',
@@ -385,7 +385,7 @@
         // http://fr.wikomobile.com
         'Wiko'          => 'KITE 4G|HIGHWAY|GETAWAY|STAIRWAY|DARKSIDE|DARKFULL|DARKNIGHT|DARKMOON|SLIDE|WAX 4G|RAINBOW|BLOOM|SUNSET|GOA(?!nna)|LENNY|BARRY|IGGY|OZZY|CINK FIVE|CINK PEAX|CINK PEAX 2|CINK SLIM|CINK SLIM 2|CINK +|CINK KING|CINK PEAX|CINK SLIM|SUBLIM',
         'iMobile'        => 'i-mobile (IQ|i-STYLE|idea|ZAA|Hitz)',
-        // Added simvalley mobile just for fun. They have some interesting devices.
+        // Added simvalley mobile WP_Rocket_just WP_Rocket_for fun. They have some interesting devices.
         // http://www.simvalley.fr/telephonie---gps-_22_telephonie-mobile_telephones_.html
         'SimValley'     => '\b(SP-80|XT-930|SX-340|XT-930|SX-310|SP-360|SP60|SPT-800|SP-120|SPT-800|SP-140|SPX-5|SPX-8|SP-100|SPX-8|SPX-12)\b',
          // Wolfgang - a brand that is sold by Aldi supermarkets.
@@ -408,7 +408,7 @@
      * @var array
      */
     protected static $tabletDevices = array(
-        // @todo: check for mobile friendly emails topic.
+        // @todo: check WP_Rocket_for mobile friendly emails topic.
         'iPad'              => 'iPad|iPad.*Mobile',
         // Removed |^.*Android.*Nexus(?!(?:Mobile).)*$
         // @see #442
@@ -416,7 +416,7 @@
         'NexusTablet'       => 'Android.*Nexus[\s]+(7|9|10)',
         // https://en.wikipedia.org/wiki/Pixel_C
         'GoogleTablet'           => 'Android.*Pixel C',
-        'SamsungTablet'     => 'SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y?|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|SM-P555M|SM-P355M|SM-T113NU|SM-T815Y|SM-T585|SM-T285|SM-T825|SM-W708|SM-T835|SM-T830|SM-T837V|SM-T720|SM-T510|SM-T387V|SM-P610|SM-T290|SM-T515|SM-T590|SM-T595|SM-T725|SM-T817P|SM-P585N0|SM-T395|SM-T295|SM-T865|SM-P610N|SM-P615|SM-T970|SM-T380|SM-T5950|SM-T905|SM-T231|SM-T500|SM-T860', // SCH-P709|SCH-P729|SM-T2558|GT-I9205 - Samsung Mega - treat them like a regular phone.
+        'SamsungTablet'     => 'SAMSUNG.*Tablet|Galaxy.*Tab|SC-01C|GT-P1000|GT-P1003|GT-P1010|GT-P3105|GT-P6210|GT-P6800|GT-P6810|GT-P7100|GT-P7300|GT-P7310|GT-P7500|GT-P7510|SCH-I800|SCH-I815|SCH-I905|SGH-I957|SGH-I987|SGH-T849|SGH-T859|SGH-T869|SPH-P100|GT-P3100|GT-P3108|GT-P3110|GT-P5100|GT-P5110|GT-P6200|GT-P7320|GT-P7511|GT-N8000|GT-P8510|SGH-I497|SPH-P500|SGH-T779|SCH-I705|SCH-I915|GT-N8013|GT-P3113|GT-P5113|GT-P8110|GT-N8010|GT-N8005|GT-N8020|GT-P1013|GT-P6201|GT-P7501|GT-N5100|GT-N5105|GT-N5110|SHV-E140K|SHV-E140L|SHV-E140S|SHV-E150S|SHV-E230K|SHV-E230L|SHV-E230S|SHW-M180K|SHW-M180L|SHW-M180S|SHW-M180W|SHW-M300W|SHW-M305W|SHW-M380K|SHW-M380S|SHW-M380W|SHW-M430W|SHW-M480K|SHW-M480S|SHW-M480W|SHW-M485W|SHW-M486W|SHW-M500W|GT-I9228|SCH-P739|SCH-I925|GT-I9200|GT-P5200|GT-P5210|GT-P5210X|SM-T311|SM-T310|SM-T310X|SM-T210|SM-T210R|SM-T211|SM-P600|SM-P601|SM-P605|SM-P900|SM-P901|SM-T217|SM-T217A|SM-T217S|SM-P6000|SM-T3100|SGH-I467|XE500|SM-T110|GT-P5220|GT-I9200X|GT-N5110X|GT-N5120|SM-P905|SM-T111|SM-T2105|SM-T315|SM-T320|SM-T320X|SM-T321|SM-T520|SM-T525|SM-T530NU|SM-T230NU|SM-T330NU|SM-T900|XE500T1C|SM-P605V|SM-P905V|SM-T337V|SM-T537V|SM-T707V|SM-T807V|SM-P600X|SM-P900X|SM-T210X|SM-T230|SM-T230X|SM-T325|GT-P7503|SM-T531|SM-T330|SM-T530|SM-T705|SM-T705C|SM-T535|SM-T331|SM-T800|SM-T700|SM-T537|SM-T807|SM-P907A|SM-T337A|SM-T537A|SM-T707A|SM-T807A|SM-T237|SM-T807P|SM-P607T|SM-T217T|SM-T337T|SM-T807T|SM-T116NQ|SM-T116BU|SM-P550|SM-T350|SM-T550|SM-T9000|SM-P9000|SM-T705Y|SM-T805|GT-P3113|SM-T710|SM-T810|SM-T815|SM-T360|SM-T533|SM-T113|SM-T335|SM-T715|SM-T560|SM-T670|SM-T677|SM-T377|SM-T567|SM-T357T|SM-T555|SM-T561|SM-T713|SM-T719|SM-T813|SM-T819|SM-T580|SM-T355Y?|SM-T280|SM-T817A|SM-T820|SM-W700|SM-P580|SM-T587|SM-P350|SM-P555M|SM-P355M|SM-T113NU|SM-T815Y|SM-T585|SM-T285|SM-T825|SM-W708|SM-T835|SM-T830|SM-T837V|SM-T720|SM-T510|SM-T387V|SM-P610|SM-T290|SM-T515|SM-T590|SM-T595|SM-T725|SM-T817P|SM-P585N0|SM-T395|SM-T295|SM-T865|SM-P610N|SM-P615|SM-T970|SM-T380|SM-T5950|SM-T905|SM-T231|SM-T500|SM-T860|SM-T536', // SCH-P709|SCH-P729|SM-T2558|GT-I9205 - Samsung Mega - treat them like a regular phone.
         // http://docs.aws.amazon.com/silk/latest/developerguide/user-agent.html
         'Kindle'            => 'Kindle|Silk.*Accelerated|Android.*\b(KFOT|KFTT|KFJWI|KFJWA|KFOTE|KFSOWI|KFTHWI|KFTHWA|KFAPWI|KFAPWA|WFJWAE|KFSAWA|KFSAWI|KFASWI|KFARWI|KFFOWI|KFGIWI|KFMEWI)\b|Android.*Silk/[0-9.]+ like Chrome/[0-9.]+ (?!Mobile)',
         // Only the Surface tablets with Windows RT are considered mobile.
@@ -424,9 +424,9 @@
         'SurfaceTablet'     => 'Windows NT [0-9.]+; ARM;.*(Tablet|ARMBJS)',
         // http://shopping1.hp.com/is-bin/INTERSHOP.enfinity/WFS/WW-USSMBPublicStore-Site/en_US/-/USD/ViewStandardCatalog-Browse?CatalogCategoryID=JfIQ7EN5lqMAAAEyDcJUDwMT
         'HPTablet'          => 'HP Slate (7|8|10)|HP ElitePad 900|hp-tablet|EliteBook.*Touch|HP 8|Slate 21|HP SlateBook 10',
-        // Watch out for PadFone, see #132.
+        // Watch out WP_Rocket_for PadFone, see #132.
         // http://www.asus.com/de/Tablets_Mobile/Memo_Pad_Products/
-        'AsusTablet'        => '^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\bK00F\b|\bK00C\b|\bK00E\b|\bK00L\b|TX201LA|ME176C|ME102A|\bM80TA\b|ME372CL|ME560CG|ME372CG|ME302KL| K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\bME70C\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\bP027\b|\bP024\b|\bP00C\b',
+        'AsusTablet'        => '^.*PadFone((?!Mobile).)*$|Transformer|TF101|TF101G|TF300T|TF300TG|TF300TL|TF700T|TF700KL|TF701T|TF810C|ME171|ME301T|ME302C|ME371MG|ME370T|ME372MG|ME172V|ME173X|ME400C|Slider SL101|\bK00F\b|\bK00C\b|\bK00E\b|\bK00L\b|TX201LA|ME176C|ME102A|\bM80TA\b|ME372CL|ME560CG|ME372CG|ME302KL| K01A | K010 | K011 | K017 | K01E |ME572C|ME103K|ME170C|ME171C|\bME70C\b|ME581C|ME581CL|ME8510C|ME181C|P01Y|PO1MA|P01Z|\bP027\b|\bP024\b|\bP00C\b',
         'BlackBerryTablet'  => 'PlayBook|RIM Tablet',
         'HTCtablet'         => 'HTC_Flyer_P512|HTC Flyer|HTC Jetstream|HTC-P715a|HTC EVO View 4G|PG41200|PG09410',
         'MotorolaTablet'    => 'xoom|sholest|MZ615|MZ605|MZ505|MZ601|MZ602|MZ603|MZ604|MZ606|MZ607|MZ608|MZ609|MZ615|MZ616|MZ617',
@@ -448,9 +448,10 @@
         // Prestigio Tablets http://www.prestigio.com/support
         'PrestigioTablet'   => 'PMP3170B|PMP3270B|PMP3470B|PMP7170B|PMP3370B|PMP3570C|PMP5870C|PMP3670B|PMP5570C|PMP5770D|PMP3970B|PMP3870C|PMP5580C|PMP5880D|PMP5780D|PMP5588C|PMP7280C|PMP7280C3G|PMP7280|PMP7880D|PMP5597D|PMP5597|PMP7100D|PER3464|PER3274|PER3574|PER3884|PER5274|PER5474|PMP5097CPRO|PMP5097|PMP7380D|PMP5297C|PMP5297C_QUAD|PMP812E|PMP812E3G|PMP812F|PMP810E|PMP880TD|PMT3017|PMT3037|PMT3047|PMT3057|PMT7008|PMT5887|PMT5001|PMT5002',
         // http://support.lenovo.com/en_GB/downloads/default.page?#
-        'LenovoTablet'      => 'Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)|TB-X103F|TB-X304X|TB-X304F|TB-X304L|TB-X505F|TB-X505L|TB-X505X|TB-X605F|TB-X605L|TB-8703F|TB-8703X|TB-8703N|TB-8704N|TB-8704F|TB-8704X|TB-8704V|TB-7304F|TB-7304I|TB-7304X|Tab2A7-10F|Tab2A7-20F|TB2-X30L|YT3-X50L|YT3-X50F|YT3-X50M|YT-X705F|YT-X703F|YT-X703L|YT-X705L|YT-X705X|TB2-X30F|TB2-X30L|TB2-X30M|A2107A-F|A2107A-H|TB3-730F|TB3-730M|TB3-730X|TB-7504F|TB-7504X|TB-X704F|TB-X104F|TB3-X70F|TB-X705F|TB-8504F|TB3-X70L|TB3-710F|TB-X704L',
+        'LenovoTablet'      => 'Lenovo TAB|Idea(Tab|Pad)( A1|A10| K1|)|ThinkPad([ ]+)?Tablet|YT3-850M|YT3-X90L|YT3-X90F|YT3-X90X|Lenovo.*(S2109|S2110|S5000|S6000|K3011|A3000|A3500|A1000|A2107|A2109|A1107|A5500|A7600|B6000|B8000|B8080)(-|)(FL|F|HV|H|)|TB-X103F|TB-X304X|TB-X304F|TB-X304L|TB-X505F|TB-X505L|TB-X505X|TB-X605F|TB-X605L|TB-8703F|TB-8703X|TB-8703N|TB-8704N|TB-8704F|TB-8704X|TB-8704V|TB-7304F|TB-7304I|TB-7304X|Tab2A7-10F|Tab2A7-20F|TB2-X30L|YT3-X50L|YT3-X50F|YT3-X50M|YT-X705F|YT-X703F|YT-X703L|YT-X705L|YT-X705X|TB2-X30F|TB2-X30L|TB2-X30M|A2107A-F|A2107A-H|TB3-730F|TB3-730M|TB3-730X|TB-7504F|TB-7504X|TB-X704F|TB-X104F|TB3-X70F|TB-X705F|TB-8504F|TB3-X70L|TB3-710F|TB-X704L|TB-J606F|TB-X606F|TB-X306X',
         // http://www.dell.com/support/home/us/en/04/Products/tab_mob/tablets
         'DellTablet'        => 'Venue 11|Venue 8|Venue 7|Dell Streak 10|Dell Streak 7',
+        'XiaomiTablet'      => '21051182G',
         // http://www.yarvik.com/en/matrix/tablets/
         'YarvikTablet'      => 'Android.*\b(TAB210|TAB211|TAB224|TAB250|TAB260|TAB264|TAB310|TAB360|TAB364|TAB410|TAB411|TAB420|TAB424|TAB450|TAB460|TAB461|TAB464|TAB465|TAB467|TAB468|TAB07-100|TAB07-101|TAB07-150|TAB07-151|TAB07-152|TAB07-200|TAB07-201-3G|TAB07-210|TAB07-211|TAB07-212|TAB07-214|TAB07-220|TAB07-400|TAB07-485|TAB08-150|TAB08-200|TAB08-201-3G|TAB08-201-30|TAB09-100|TAB09-211|TAB09-410|TAB10-150|TAB10-201|TAB10-211|TAB10-400|TAB10-410|TAB13-201|TAB274EUK|TAB275EUK|TAB374EUK|TAB462EUK|TAB474EUK|TAB9-200)\b',
         'MedionTablet'      => 'Android.*\bOYO\b|LIFE.*(P9212|P9514|P9516|S9512)|LIFETAB',
@@ -501,7 +502,7 @@
         'bqTablet'          => 'Android.*(bq)?.*\b(Elcano|Curie|Edison|Maxwell|Kepler|Pascal|Tesla|Hypatia|Platon|Newton|Livingstone|Cervantes|Avant|Aquaris ([E|M]10|M8))\b|Maxwell.*Lite|Maxwell.*Plus',
         // http://www.huaweidevice.com/worldwide/productFamily.do?method=index&directoryId=5011&treeId=3290
         // http://www.huaweidevice.com/worldwide/downloadCenter.do?method=index&directoryId=3372&treeId=0&tb=1&type=software (including legacy tablets)
-        'HuaweiTablet'      => 'MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim|M2-A01L|BAH-L09|BAH-W09|AGS-L09|CMR-AL19',
+        'HuaweiTablet'      => 'MediaPad|MediaPad 7 Youth|IDEOS S7|S7-201c|S7-202u|S7-101|S7-103|S7-104|S7-105|S7-106|S7-201|S7-Slim|M2-A01L|BAH-L09|BAH-W09|AGS-L09|CMR-AL19|KOB2-L09',
         // Nec or Medias Tab
         'NecTablet'         => '\bN-06D|\bN-08D',
         // Pantech Tablets: http://www.pantechusa.com/phones/
@@ -545,7 +546,7 @@
         // http://www.yonesnav.com/products/products.php
         'YONESTablet' => 'BQ1078|BC1003|BC1077|RK9702|BC9730|BC9001|IT9001|BC7008|BC7010|BC708|BC728|BC7012|BC7030|BC7027|BC7026',
         // http://www.cjshowroom.com/eproducts.aspx?classcode=004001001
-        // China manufacturer makes tablets for different small brands (eg. http://www.zeepad.net/index.html)
+        // China manufacturer makes tablets WP_Rocket_for different small brands (eg. http://www.zeepad.net/index.html)
         'ChangJiaTablet'    => 'TPC7102|TPC7103|TPC7105|TPC7106|TPC7107|TPC7201|TPC7203|TPC7205|TPC7210|TPC7708|TPC7709|TPC7712|TPC7110|TPC8101|TPC8103|TPC8105|TPC8106|TPC8203|TPC8205|TPC8503|TPC9106|TPC9701|TPC97101|TPC97103|TPC97105|TPC97106|TPC97111|TPC97113|TPC97203|TPC97603|TPC97809|TPC97205|TPC10101|TPC10103|TPC10106|TPC10111|TPC10203|TPC10205|TPC10503',
         // http://www.gloryunion.cn/products.asp
         // http://www.allwinnertech.com/en/apply/mobile.html
@@ -712,21 +713,21 @@
      * IMPORTANT: This is a list of only mobile browsers.
      * Mobile Detect 2.x supports only mobile browsers,
      * it was never designed to detect all browsers.
-     * The change will come in 2017 in the 3.x release for PHP7.
+     * The change will come in 2017 in the 3.x release WP_Rocket_for PHP7.
      *
      * @var array
      */
     protected static $browsers = array(
         //'Vivaldi'         => 'Vivaldi',
         // @reference: https://developers.google.com/chrome/mobile/docs/user-agent
-        'Chrome'          => '\bCrMo\b|CriOS|Android.*Chrome/[.0-9]* (Mobile)?',
+        'Chrome'          => '\bCrMo\b|CriOS.*Mobile|Android.*Chrome/[.0-9]* Mobile',
         'Dolfin'          => '\bDolfin\b',
         'Opera'           => 'Opera.*Mini|Opera.*Mobi|Android.*Opera|Mobile.*OPR/[0-9.]+$|Coast/[0-9.]+',
         'Skyfire'         => 'Skyfire',
         // Added "Edge on iOS" https://github.com/serbanghita/Mobile-Detect/issues/764
-        'Edge'             => '\bEdgiOS\b|Mobile Safari/[.0-9]* Edge',
+        'Edge'             => 'EdgiOS.*Mobile|Mobile Safari/[.0-9]* Edge',
         'IE'              => 'IEMobile|MSIEMobile', // |Trident/[.0-9]+
-        'Firefox'         => 'fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|FxiOS',
+        'Firefox'         => 'fennec|firefox.*maemo|(Mobile|Tablet).*Firefox|Firefox.*Mobile|FxiOS.*Mobile',
         'Bolt'            => 'bolt',
         'TeaShark'        => 'teashark',
         'Blazer'          => 'Blazer',
@@ -894,9 +895,9 @@
 
     /**
      * Get the current script version.
-     * This is useful for the demo.php file,
+     * This is useful WP_Rocket_for the demo.php file,
      * so people can check on what version they are testing
-     * for mobile devices.
+     * WP_Rocket_for mobile devices.
      *
      * @return string The version number in semantic version format.
      */
@@ -909,7 +910,7 @@
      * Set the HTTP Headers. Must be PHP-flavored. This method will reset existing headers.
      *
      * @param array $httpHeaders The headers to set. If null, then using PHP's _SERVER to extract
-     *                           the headers. The default null is left for backwards compatibility.
+     *                           the headers. The default null is left WP_Rocket_for backwards compatibility.
      */
     public function setHttpHeaders($httpHeaders = null)
     {
@@ -1137,7 +1138,7 @@
     }
 
     /**
-     * Alias for getBrowsers() method.
+     * Alias WP_Rocket_for getBrowsers() method.
      *
      * @return array List of user agents.
      */
@@ -1167,7 +1168,7 @@
     }
 
     /**
-     * Method gets the mobile detection rules. This method is used for the magic methods $detect->is*().
+     * Method gets the mobile detection rules. This method is used WP_Rocket_for the magic methods $detect->is*().
      *
      * @deprecated since version 2.6.9
      *
@@ -1245,7 +1246,7 @@
     }
 
     /**
-     * Check the HTTP headers for signs of mobile.
+     * Check the HTTP headers WP_Rocket_for signs of mobile.
      * This is the fastest mobile check possible; it's used
      * inside isMobile() method.
      *
@@ -1320,7 +1321,7 @@
     }
 
     /**
-     * Search for a certain key in the rules array.
+     * Search WP_Rocket_for a certain key in the rules array.
      * If the key is found then try to match the corresponding
      * regex against the User-Agent.
      *
@@ -1367,7 +1368,7 @@
             $this->setUserAgent($userAgent);
         }
 
-        // Check specifically for cloudfront headers if the useragent === 'Amazon CloudFront'
+        // Check specifically WP_Rocket_for cloudfront headers if the useragent === 'Amazon CloudFront'
         if ($this->getUserAgent() === 'Amazon CloudFront') {
             $cfHeaders = $this->getCfHeaders();
             if(array_key_exists('HTTP_CLOUDFRONT_IS_MOBILE_VIEWER', $cfHeaders) && $cfHeaders['HTTP_CLOUDFRONT_IS_MOBILE_VIEWER'] === 'true') {
@@ -1395,7 +1396,7 @@
      */
     public function isTablet($userAgent = null, $httpHeaders = null)
     {
-        // Check specifically for cloudfront headers if the useragent === 'Amazon CloudFront'
+        // Check specifically WP_Rocket_for cloudfront headers if the useragent === 'Amazon CloudFront'
         if ($this->getUserAgent() === 'Amazon CloudFront') {
             $cfHeaders = $this->getCfHeaders();
             if(array_key_exists('HTTP_CLOUDFRONT_IS_TABLET_VIEWER', $cfHeaders) && $cfHeaders['HTTP_CLOUDFRONT_IS_TABLET_VIEWER'] === 'true') {
@@ -1415,7 +1416,7 @@
     }
 
     /**
-     * This method checks for a certain property in the
+     * This method checks WP_Rocket_for a certain property in the
      * userAgent.
      * @todo: The httpHeaders part is not yet used.
      *
@@ -1450,15 +1451,19 @@
      * the User-Agent string.
      *
      * @param $regex
-     * @param  string $userAgent
+     * @param string $userAgent
      * @return bool
      *
      * @todo: search in the HTTP headers too.
      */
     public function match($regex, $userAgent = null)
     {
+        if (!\is_string($userAgent) && !\is_string($this->userAgent)) {
+            return false;
+        }
+
         $match = (bool) preg_match(sprintf('#%s#is', $regex), (false === empty($userAgent) ? $userAgent : $this->userAgent), $matches);
-        // If positive match is found, store the results for debug.
+        // If positive match is found, store the results WP_Rocket_for debug.
         if ($match) {
             $this->matchingRegex = $regex;
             $this->matchesArray = $matches;
@@ -1503,7 +1508,7 @@
      * Will return a float number. (eg. 2_0 will return 2.0, 4.3.1 will return 4.31)
      *
      * @param string $propertyName The name of the property. See self::getProperties() array
-     *                             keys for all possible properties.
+     *                             keys WP_Rocket_for all possible properties.
      * @param string $type         Either self::VERSION_TYPE_STRING to get a string value or
      *                             self::VERSION_TYPE_FLOAT indicating a float value. This parameter
      *                             is optional and defaults to self::VERSION_TYPE_STRING. Passing an
@@ -1517,6 +1522,10 @@
             return false;
         }
 
+        if (!\is_string($this->userAgent)) {
+            return false;
+        }
+
         // set the $type to the default if we don't recognize the type
         if ($type !== self::VERSION_TYPE_STRING && $type !== self::VERSION_TYPE_FLOAT) {
             $type = self::VERSION_TYPE_STRING;
@@ -1553,7 +1562,7 @@
 
     /**
      * Retrieve the mobile grading, using self::MOBILE_GRADE_* constants.
-     *
+     * @deprecated This is no longer being maintained, it was an experiment at the time.
      * @return string One of the self::MOBILE_GRADE_* constants.
      */
     public function mobileGrade()
@@ -1588,7 +1597,7 @@
             // Firefox Mobile 18 - Tested on Android 2.3 and 4.1 devices
             ( $this->is('Firefox') && $this->version('Firefox', self::VERSION_TYPE_FLOAT) >= 18 ) ||
 
-            // Chrome for Android - Tested on Android 4.0, 4.1 device
+            // Chrome WP_Rocket_for Android - Tested on Android 4.0, 4.1 device
             ( $this->is('Chrome') && $this->is('AndroidOS') && $this->version('Android', self::VERSION_TYPE_FLOAT) >= 4.0 ) ||
 
             // Skyfire 4.1 - Tested on Android 2.3 device
@@ -1613,7 +1622,7 @@
             // UC Browser - Tested on Android 2.3 device
             ( ($this->is('UC Browser') || $this->is('Dolfin')) && $this->version('Android', self::VERSION_TYPE_FLOAT) >= 2.3 ) ||
 
-            // Kindle 3 and Fire  - Tested on the built-in WebKit browser for each
+            // Kindle 3 and Fire  - Tested on the built-in WebKit browser WP_Rocket_for each
             ( $this->match('Kindle Fire') ||
             $this->is('Kindle') && $this->version('Kindle', self::VERSION_TYPE_FLOAT) >= 3.0 ) ||
 
